S3000000000	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000001	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000002	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000003	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000004	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000005	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000006	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000007	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000008	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000009	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000010	i want to search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000011	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000012	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000013	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000014	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000015	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000016	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000017	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000018	i am looking to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000019	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000020	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000021	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000022	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000023	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000024	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000025	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000026	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000027	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000028	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000029	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000030	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000031	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000032	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000033	search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000034	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000035	i am looking to retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000036	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000037	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000038	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000039	i am looking to retrieve review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000040	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000041	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000042	retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000043	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000044	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000045	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000046	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000047	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000048	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000049	find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000050	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000051	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000052	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000053	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000054	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000055	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000056	i want to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000057	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000058	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000059	i would like to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000060	i would like reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000061	i want to find review	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000062	i would like to search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000063	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000064	where are the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000065	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000066	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000067	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000068	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000069	i need to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000070	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000071	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000072	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000073	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000074	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000075	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000076	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000077	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000078	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000079	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000080	i want to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000081	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000082	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000083	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000084	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000085	i need to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000086	i would like reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000087	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000088	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000089	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000090	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000091	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000092	i need to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000093	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000094	where are the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000095	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000096	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000097	please search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000098	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000099	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000100	search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000101	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000102	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000103	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000104	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000105	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000106	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000107	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000108	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000109	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000110	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000111	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000112	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000113	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000114	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000115	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000116	i want to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000117	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000118	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000119	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000120	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000121	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000122	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000123	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000124	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000125	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000126	i want to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000127	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000128	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000129	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000130	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000131	what are reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000132	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000133	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000134	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000135	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000136	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000137	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000138	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000139	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000140	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000141	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000142	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000143	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000144	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000145	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000146	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000147	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000148	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000149	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000150	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000151	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000152	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000153	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000154	please retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000155	i would like to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000156	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000157	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000158	i want to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000159	what are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000160	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000161	i am looking to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000162	i want to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000163	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000164	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000165	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000166	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000167	i want to search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000168	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000169	what are the reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000170	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000171	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000172	i want reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000173	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000174	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000175	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000176	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000177	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000178	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000179	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000180	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000181	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000182	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000183	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000184	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000185	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000186	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000187	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000188	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000189	i would like to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000190	search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000191	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000192	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000193	i would like to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000194	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000195	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000196	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000197	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000198	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000199	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000200	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000201	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000202	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000203	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000204	where are the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000205	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000206	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000207	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000208	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000209	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000210	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000211	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000212	i want to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000213	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000214	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000215	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000216	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000217	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000218	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000219	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000220	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000221	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000222	i am looking for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000223	please get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000224	list reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000225	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000226	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000227	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000228	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000229	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000230	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000231	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000232	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000233	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000234	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000235	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000236	where are restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000237	please get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000238	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000239	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000240	please get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000241	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000242	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000243	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000244	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000245	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000246	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000247	please enumerate reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000248	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000249	search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000250	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000251	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000252	which are reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000253	i would like to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000254	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000255	i am looking to search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000256	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000257	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000258	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000259	search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000260	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000261	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000262	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000263	i would like to retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000264	please get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000265	i am looking to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000266	i need to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000267	i want to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000268	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000269	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000270	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000271	i am looking to retrieve review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000272	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000273	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000274	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000275	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000276	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000277	please enumerate reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000278	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000279	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000280	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000281	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000282	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000283	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000284	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000285	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000286	i am looking to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000287	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000288	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000289	what are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000290	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000291	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000292	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000293	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000294	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000295	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000296	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000297	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000298	i am looking to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000299	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000300	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000301	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000302	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000303	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000304	i want to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000305	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000306	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000307	please search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000308	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000309	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000310	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000311	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000312	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000313	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000314	i want to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000315	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000316	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000317	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000318	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000319	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000320	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000321	i am looking to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000322	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000323	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000324	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000325	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000326	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000327	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000328	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000329	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000330	please retrieve reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000331	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000332	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000333	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000334	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000335	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000336	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000337	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000338	where are the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000339	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000340	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000341	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000342	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000343	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000344	enumerate reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000345	please search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000346	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000347	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000348	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000349	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000350	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000351	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000352	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000353	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000354	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000355	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000356	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000357	i would like to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000358	i want to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000359	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000360	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000361	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000362	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000363	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000364	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000365	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000366	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000367	search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000368	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000369	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000370	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000371	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000372	please get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000373	i want to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000374	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000375	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000376	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000377	i want to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000378	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000379	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000380	i would like to search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000381	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000382	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000383	i would like to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000384	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000385	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000386	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000387	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000388	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000389	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000390	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000391	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000392	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000393	where are the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000394	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000395	search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000396	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000397	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000398	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000399	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000400	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000401	what are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000402	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000403	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000404	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000405	what are the reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000406	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000407	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000408	i want to search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000409	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000410	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000411	please list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000412	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000413	please search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000414	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000415	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000416	i want to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000417	i want to search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000418	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000419	i would like to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000420	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000421	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000422	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000423	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000424	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000425	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000426	where are restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000427	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000428	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000429	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000430	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000431	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000432	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000433	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000434	search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000435	i need to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000436	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000437	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000438	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000439	find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000440	i would like to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000441	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000442	i want to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000443	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000444	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000445	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000446	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000447	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000448	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000449	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000450	i am looking to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000451	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000452	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000453	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000454	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000455	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000456	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000457	i need to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000458	please search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000459	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000460	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000461	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000462	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000463	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000464	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000465	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000466	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000467	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000468	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000469	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000470	where are the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000471	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000472	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000473	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000474	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000475	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000476	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000477	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000478	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000479	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000480	i need to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000481	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000482	i am looking to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000483	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000484	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000485	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000486	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000487	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000488	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000489	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000490	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000491	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000492	i need to search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000493	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000494	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000495	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000496	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000497	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000498	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000499	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000500	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000501	i need to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000502	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000503	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000504	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000505	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000506	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000507	i want to search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000508	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000509	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000510	i am looking to search review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000511	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000512	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000513	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000514	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000515	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000516	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000517	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000518	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000519	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000520	what are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000521	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000522	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000523	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000524	i am looking to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000525	i want to retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000526	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000527	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000528	i would like to search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000529	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000530	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000531	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000532	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000533	i would like to get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000534	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000535	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000536	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000537	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000538	i want to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000539	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000540	i would like to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000541	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000542	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000543	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000544	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000545	which are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000546	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000547	find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000548	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000549	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000550	search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000551	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000552	i am looking for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000553	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000554	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000555	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000556	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000557	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000558	please retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000559	i am looking to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000560	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000561	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000562	i would like to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000563	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000564	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000565	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000566	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000567	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000568	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000569	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000570	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000571	i want to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000572	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000573	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000574	i want to search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000575	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000576	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000577	i need to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000578	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000579	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000580	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000581	i need to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000582	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000583	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000584	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000585	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000586	please retrieve reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000587	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000588	please search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000589	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000590	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000591	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000592	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000593	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000594	i am looking to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000595	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000596	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000597	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000598	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000599	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000600	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000601	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000602	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000603	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000604	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000605	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000606	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000607	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000608	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000609	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000610	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000611	i would like reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000612	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000613	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000614	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000615	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000616	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000617	i am looking to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000618	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000619	search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000620	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000621	i would like reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000622	i need to search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000623	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000624	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000625	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000626	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000627	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000628	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000629	i want to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000630	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000631	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000632	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000633	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000634	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000635	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000636	please retrieve reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000637	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000638	i am looking to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000639	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000640	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000641	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000642	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000643	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000644	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000645	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000646	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000647	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000648	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000649	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000650	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000651	which are reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000652	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000653	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000654	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000655	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000656	i am looking to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000657	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000658	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000659	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000660	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000661	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000662	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000663	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000664	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000665	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000666	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000667	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000668	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000669	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000670	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000671	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000672	i am looking to get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000673	enumerate reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000674	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000675	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000676	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000677	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000678	what are reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000679	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000680	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000681	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000682	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000683	i would like to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000684	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000685	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000686	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000687	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000688	i am looking to retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000689	i want to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000690	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000691	enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000692	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000693	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000694	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000695	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000696	i need to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000697	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000698	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000699	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000700	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000701	i want to find review	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000702	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000703	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000704	retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000705	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000706	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000707	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000708	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000709	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000710	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000711	i would like reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000712	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000713	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000714	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000715	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000716	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000717	i would like to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000718	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000719	i would like to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000720	what are reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000721	i want to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000722	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000723	i want to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000724	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000725	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000726	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000727	which are the reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000728	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000729	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000730	i need to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000731	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000732	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000733	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000734	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000735	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000736	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000737	i would like to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000738	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000739	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000740	i want to search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000741	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000742	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000743	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000744	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000745	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000746	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000747	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000748	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000749	which are reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000750	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000751	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000752	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000753	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000754	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000755	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000756	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000757	get review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000758	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000759	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000760	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000761	i need to find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000762	what are the reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000763	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000764	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000765	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000766	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000767	i am looking to search review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000768	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000769	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000770	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000771	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000772	i want to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000773	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000774	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000775	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000776	i need to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000777	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000778	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000779	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000780	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000781	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000782	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000783	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000784	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000785	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000786	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000787	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000788	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000789	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000790	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000791	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000792	what are the reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000793	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000794	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000795	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000796	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000797	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000798	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000799	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000800	please list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000801	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000802	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000803	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000804	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000805	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000806	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000807	i would like to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000808	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000809	i would like to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000810	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000811	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000812	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000813	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000814	i would like to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000815	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000816	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000817	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000818	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000819	i need to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000820	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000821	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000822	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000823	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000824	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000825	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000826	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000827	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000828	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000829	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000830	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000831	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000832	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000833	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000834	please search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000835	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000836	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000837	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000838	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000839	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000840	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000841	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000842	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000843	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000844	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000845	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000846	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000847	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000848	i want to search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000849	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000850	please search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000851	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000852	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000853	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000854	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000855	i am looking to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000856	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000857	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000858	i want to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000859	i am looking to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000860	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000861	i want to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000862	what are reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000863	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000864	i would like to get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000865	i need to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000866	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000867	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000868	i would like to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000869	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000870	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000871	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000872	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000873	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000874	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000875	please search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000876	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000877	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000878	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000879	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000880	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000881	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000882	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000883	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000884	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000885	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000886	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000887	what are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000888	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000889	search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000890	i want to get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000891	i am looking to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000892	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000893	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000894	search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000895	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000896	i would like to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000897	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000898	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000899	i am looking for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000900	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000901	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000902	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000903	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000904	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000905	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000906	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000907	i am looking to retrieve review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000908	i want reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000909	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000910	please get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000911	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000912	please get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000913	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000914	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000915	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000916	i want reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000917	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000918	i need to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000919	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000920	i want to get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000921	please list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000922	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000923	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000924	please retrieve reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000925	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000926	enumerate reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000927	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000928	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000929	which are the reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000930	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000931	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000932	please get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000933	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000934	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000935	i want to search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000936	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000937	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000938	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000939	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000940	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000941	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000942	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000943	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000944	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000945	i want to search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000946	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000947	i am looking to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000948	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000949	search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000950	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000951	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000952	i want to retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000953	what are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000954	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000955	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000956	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000957	please list reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000958	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000959	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000960	please list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000961	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000962	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000963	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000964	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000965	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000966	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000967	please search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000968	i am looking to search review .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000969	search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000970	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000971	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000972	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000973	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000974	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000975	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000976	i need to search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000977	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000978	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000979	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000980	please get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000981	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000982	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000983	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000984	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000985	please search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000986	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000987	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000988	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000989	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000990	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000991	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000992	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000000993	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000994	i would like to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000995	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000996	please enumerate reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000000997	i would like to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000998	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000000999	i want to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001000	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001001	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001002	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001003	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001004	search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001005	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001006	please search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001007	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001008	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001009	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001010	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001011	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001012	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001013	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001014	please enumerate reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001015	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001016	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001017	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001018	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001019	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001020	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001021	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001022	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001023	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001024	i am looking to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001025	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001026	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001027	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001028	what are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001029	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001030	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001031	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001032	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001033	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001034	i would like to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001035	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001036	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001037	please search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001038	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001039	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001040	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001041	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001042	i want to search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001043	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001044	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001045	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001046	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001047	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001048	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001049	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001050	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001051	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001052	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001053	i would like to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001054	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001055	i need to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001056	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001057	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001058	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001059	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001060	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001061	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001062	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001063	please search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001064	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001065	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001066	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001067	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001068	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001069	which are reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001070	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001071	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001072	please list reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001073	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001074	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001075	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001076	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001077	i am looking to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001078	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001079	i want to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001080	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001081	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001082	i want to get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001083	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001084	i want to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001085	please search reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001086	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001087	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001088	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001089	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001090	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001091	list reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001092	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001093	i need to search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001094	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001095	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001096	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001097	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001098	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001099	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001100	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001101	where are the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001102	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001103	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001104	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001105	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001106	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001107	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001108	i would like reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001109	i am looking to retrieve review	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001110	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001111	i want to search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001112	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001113	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001114	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001115	i want to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001116	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001117	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001118	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001119	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001120	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001121	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001122	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001123	please search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001124	where is restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001125	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001126	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001127	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001128	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001129	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001130	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001131	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001132	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001133	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001134	i would like to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001135	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001136	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001137	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001138	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001139	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001140	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001141	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001142	where are restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001143	i want to search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001144	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001145	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001146	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001147	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001148	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001149	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001150	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001151	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001152	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001153	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001154	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001155	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001156	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001157	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001158	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001159	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001160	please search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001161	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001162	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001163	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001164	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001165	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001166	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001167	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001168	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001169	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001170	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001171	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001172	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001173	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001174	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001175	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001176	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001177	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001178	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001179	i want to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001180	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001181	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001182	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001183	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001184	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001185	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001186	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001187	where are the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001188	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001189	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001190	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001191	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001192	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001193	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001194	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001195	which are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001196	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001197	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001198	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001199	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001200	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001201	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001202	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001203	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001204	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001205	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001206	please get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001207	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001208	i want to search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001209	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001210	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001211	i need to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001212	find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001213	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001214	please search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001215	please retrieve reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001216	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001217	please find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001218	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001219	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001220	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001221	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001222	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001223	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001224	please search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001225	i am looking to search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001226	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001227	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001228	i want to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001229	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001230	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001231	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001232	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001233	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001234	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001235	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001236	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001237	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001238	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001239	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001240	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001241	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001242	which are the reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001243	i want to search restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001244	enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001245	search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001246	i am looking to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001247	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001248	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001249	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001250	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001251	retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001252	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001253	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001254	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001255	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001256	what are reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001257	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001258	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001259	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001260	please list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001261	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001262	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001263	retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001264	please search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001265	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001266	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001267	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001268	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001269	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001270	i need to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001271	i want to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001272	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001273	please search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001274	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001275	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001276	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001277	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001278	where are restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001279	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001280	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001281	please get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001282	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001283	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001284	what are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001285	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001286	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001287	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001288	i would like restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001289	i need reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001290	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001291	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001292	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001293	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001294	i am looking for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001295	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001296	what are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001297	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001298	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001299	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001300	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001301	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001302	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001303	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001304	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001305	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001306	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001307	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001308	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001309	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001310	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001311	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001312	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001313	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001314	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001315	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001316	i want to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001317	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001318	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001319	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001320	i need to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001321	search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001322	i need to find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001323	i want to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001324	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001325	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001326	where are the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001327	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001328	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001329	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001330	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001331	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001332	please list reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001333	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001334	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001335	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001336	please enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001337	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001338	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001339	please retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001340	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001341	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001342	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001343	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001344	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001345	i want to search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001346	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001347	i am looking to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001348	i want to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001349	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001350	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001351	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001352	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001353	i am looking to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001354	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001355	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001356	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001357	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001358	i want to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001359	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001360	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001361	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001362	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001363	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001364	please enumerate reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001365	which are restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001366	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001367	enumerate reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001368	please enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001369	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001370	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001371	please get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001372	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001373	retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001374	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001375	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001376	i need to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001377	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001378	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001379	list restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001380	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001381	search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001382	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001383	i would like to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001384	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001385	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001386	i want to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001387	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001388	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001389	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001390	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001391	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001392	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001393	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001394	i need to find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001395	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001396	i am looking to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001397	i need to search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001398	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001399	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001400	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001401	i am looking for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001402	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001403	i would like restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001404	i want to search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001405	what are the reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001406	i would like to retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001407	i am looking for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001408	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001409	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001410	i would like to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001411	where are restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001412	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001413	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001414	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001415	i am looking to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001416	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001417	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001418	please search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001419	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001420	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001421	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001422	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001423	list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001424	what are the reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001425	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001426	list reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001427	i would like to find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001428	get reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001429	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001430	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001431	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001432	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001433	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001434	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001435	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001436	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001437	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001438	i need to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001439	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001440	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001441	where are the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001442	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001443	i would like restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001444	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001445	i would like to search for reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001446	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001447	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001448	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001449	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001450	i am looking to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001451	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001452	please retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001453	please search for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001454	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001455	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001456	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001457	list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001458	which are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001459	search reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001460	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001461	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001462	i would like to search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001463	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001464	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001465	i would like to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001466	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001467	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001468	please enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001469	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001470	i want to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001471	i am looking to retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001472	i need to find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001473	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001474	where are the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001475	please retrieve restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001476	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001477	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001478	search for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001479	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001480	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001481	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001482	find reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001483	which are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001484	please enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001485	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001486	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001487	i would like to retrieve restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001488	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001489	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001490	i want to search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001491	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001492	i am looking for reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001493	what are restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001494	what are the restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001495	i would like reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001496	i need reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001497	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001498	find reviews .	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001499	find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001500	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001501	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001502	i am looking to retrieve review	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001503	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001504	get reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001505	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001506	i need to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001507	what are the restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001508	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001509	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001510	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001511	i need restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001512	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001513	i am looking for restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001514	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001515	enumerate restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001516	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001517	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001518	i need restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001519	i would like restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001520	i want to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001521	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001522	list restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001523	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001524	please find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001525	i am looking to retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001526	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001527	search for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001528	what are the reviews ?	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001529	please enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001530	where is restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001531	search for restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001532	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001533	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001534	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001535	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001536	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001537	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001538	enumerate restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001539	i want restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001540	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001541	i am looking for restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001542	i need to find restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001543	which are restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001544	find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001545	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001546	please find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001547	i want to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001548	i want to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001549	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001550	search restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001551	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001552	i want to find restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001553	please list restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001554	find restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001555	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001556	please get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001557	get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001558	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001559	where are restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001560	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001561	search restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001562	please retrieve reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001563	get restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001564	where is restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001565	i want restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001566	please list reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001567	please enumerate restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001568	where is restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001569	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001570	i need restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001571	please list restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001572	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001573	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001574	i want restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001575	get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001576	which are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001577	enumerate restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001578	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001579	search restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001580	search for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001581	i want reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001582	i would like reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001583	what are reviews	now => @edu.stanford.cs294s.sierra.Review => notify
S3000001584	i want restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001585	i am looking for restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001586	what are the restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001587	which are restaurants ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001588	please find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001589	please get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001590	get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001591	i want to get restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001592	i need restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001593	i need to get restaurants .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001594	please retrieve restaurants	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001595	what are the restaurant ?	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001596	i am looking to get restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001597	retrieve restaurant .	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S3000001598	where are the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S3000001599	i would like to find restaurant	now => @edu.stanford.cs294s.sierra.Restaurant => notify
S4000001600	get the restaurant that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001601	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001602	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001603	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001604	i want the nearest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001605	i would like the restaurants farthest from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001606	search the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001607	search the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001608	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001609	what restaurants get QUOTED_STRING_0 as description ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S4000001610	search the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001611	which restaurant has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001612	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001613	find the most far away restaurant from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001614	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001615	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001616	search for the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001617	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001618	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001619	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001620	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001621	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001622	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001623	what is the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001624	retrieve the reviews with the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001625	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001626	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001627	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001628	i need the nearest restaurant to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001629	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001630	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001631	find the restaurant with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001632	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001633	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001634	i want the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001635	find the restaurants nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001636	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001637	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001638	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001639	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001640	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001641	what is the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001642	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001643	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001644	which is the restaurants which has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001645	retrieve the farthest restaurants from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001646	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001647	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001648	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001649	retrieve the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001650	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001651	give me the rating and street of restaurants	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001652	what restaurants gets the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001653	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001654	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001655	get the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001656	find the telephone and country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001657	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001658	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001659	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001660	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001661	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001662	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001663	what are the restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000001664	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001665	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001666	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001667	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001668	i am looking for the farthest restaurants from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001669	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001670	i would like to know both the summary and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001671	find the closest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001672	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001673	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001674	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001675	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001676	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001677	find the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001678	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001679	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001680	which restaurants have larger rating than 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S4000001681	i am looking for the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001682	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001683	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001684	how many reviews in the restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001685	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001686	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001687	i want the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001688	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001689	i am looking for the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001690	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001691	retrieve the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001692	how many reviews does restaurant have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001693	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001694	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001695	which restaurant has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001696	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001697	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001698	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001699	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001700	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001701	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001702	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001703	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001704	i am looking for the most far away restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001705	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001706	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001707	what is the description and rating of restaurant	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001708	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001709	i am looking for the restaurants that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001710	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001711	search for the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001712	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001713	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001714	i am looking for the farthest restaurants from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001715	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001716	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001717	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001718	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001719	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001720	what restaurants gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001721	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001722	search for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001723	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001724	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001725	i would like the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001726	what restaurants have rating 4 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S4000001727	how near is restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000001728	get the restaurant nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001729	i need the restaurant farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001730	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001731	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001732	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001733	search for the restaurant most far away from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001734	i want the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001735	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001736	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001737	show me the location and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001738	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001739	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001740	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001741	i want the restaurant most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001742	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001743	search for the farthest restaurants from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001744	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001745	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001746	i need the restaurants closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001747	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001748	i am looking for the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001749	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001750	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001751	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001752	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001753	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001754	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001755	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001756	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001757	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001758	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001759	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001760	i am looking for the postal code and street of restaurant .	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001761	what is the closest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001762	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001763	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001764	i want the restaurant that is nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001765	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001766	what restaurant has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001767	what is the description and rating of restaurant	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001768	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001769	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001770	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001771	what is both the rating and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001772	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001773	find the farthest restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001774	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001775	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001776	how far is restaurant to where i 'm now .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000001777	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001778	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001779	search for the farthest restaurants from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001780	i want the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001781	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001782	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001783	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001784	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001785	retrieve the restaurant that is closest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001786	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001787	search for the restaurant with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001788	i need the nearest restaurants to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001789	what reviews gets the highest rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001790	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001791	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001792	what is both the summary and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001793	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001794	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001795	tell me the description and state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001796	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001797	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001798	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001799	i need the nearest restaurants to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001800	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001801	i need the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001802	retrieve the restaurant which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001803	get the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001804	what are restaurant having address where i 'm now ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000001805	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001806	retrieve the nearest restaurant to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001807	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001808	find the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001809	find the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001810	what restaurants has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001811	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001812	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001813	retrieve the restaurants that is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001814	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001815	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001816	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001817	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001818	retrieve the restaurants with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001819	what is the rating and street of restaurants	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001820	i need the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001821	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001822	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001823	find the closest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001824	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001825	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001826	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001827	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001828	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001829	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001830	search for the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001831	i want the restaurant most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001832	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001833	search the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001834	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001835	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001836	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001837	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001838	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001839	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001840	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001841	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001842	find the closest restaurants to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001843	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001844	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001845	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001846	i am looking for the closest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001847	search for the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001848	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001849	retrieve the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001850	find the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001851	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001852	search for the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001853	which are the restaurants with smaller review count than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S4000001854	i would like the restaurants with the smallest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001855	retrieve the farthest restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001856	find the farthest restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001857	i am looking for the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001858	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001859	what are the restaurant having more rating than 1 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000001860	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001861	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001862	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001863	get the restaurants that is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001864	i want the restaurant which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001865	what are the restaurant that have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S4000001866	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001867	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001868	search the restaurant closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001869	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001870	i need the nearest restaurant to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001871	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001872	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001873	i want the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001874	which restaurant gets the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001875	which restaurants gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001876	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001877	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001878	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001879	which is the restaurants which is most far away from LOCATION_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001880	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001881	which is the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001882	i need the restaurants that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001883	get the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001884	what is both the country and price range of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001885	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001886	retrieve the restaurant which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001887	show me the location and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001888	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001889	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001890	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001891	find the farthest restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001892	how near are restaurants to LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000001893	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001894	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001895	search for the restaurants closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001896	i would like the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001897	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001898	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001899	i would like the telephone and postal code of restaurants	now => [ param:address.postalCode:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001900	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001901	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001902	get the restaurants that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001903	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001904	which is the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001905	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001906	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001907	which is the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001908	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001909	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001910	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001911	search the restaurants which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001912	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001913	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001914	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001915	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001916	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001917	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001918	what is the street and summary of restaurants	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001919	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001920	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001921	i would like the rating and location of restaurants	now => [ param:aggregateRating.ratingValue:Number , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001922	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001923	i need the nearest restaurant to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001924	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001925	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001926	which are review with higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S4000001927	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001928	search for the restaurant most far away from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001929	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001930	what restaurant gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001931	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001932	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001933	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001934	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001935	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001936	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001937	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001938	i need both the city and postal code of restaurant .	now => [ param:address.addressLocality:String , param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001939	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001940	show me the telephone and city of restaurants	now => [ param:address.addressLocality:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000001941	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001942	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001943	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001944	get the restaurant nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001945	retrieve the restaurants with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001946	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001947	find the restaurants most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001948	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001949	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001950	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001951	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001952	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001953	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001954	i am looking for the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001955	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001956	what restaurants gets the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001957	which are the restaurants with smaller review count than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S4000001958	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001959	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000001960	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001961	what restaurants gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001962	search the nearest restaurants to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001963	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001964	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001965	search the restaurants with the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001966	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001967	search for the most far away restaurant from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001968	i want the restaurant most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001969	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001970	i am looking for the restaurants closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001971	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001972	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001973	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001974	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001975	search for the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001976	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001977	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001978	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001979	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001980	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001981	search for the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001982	i want the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001983	i would like the closest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001984	i am looking for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001985	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001986	i would like the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001987	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001988	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001989	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001990	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001991	i need the restaurant which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000001992	i would like the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000001993	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001994	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001995	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001996	i need the restaurant closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000001997	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001998	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000001999	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002000	search the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002001	i would like the closest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002002	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002003	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002004	i want the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002005	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002006	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002007	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002008	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002009	what is the closest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002010	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002011	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002012	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002013	search for the restaurant with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002014	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002015	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002016	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002017	what restaurants have 10 or more rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S4000002018	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002019	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002020	search for the farthest restaurants from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002021	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002022	which restaurant has the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002023	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002024	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002025	retrieve the restaurant which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002026	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002027	find the restaurants that is most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002028	find the reviews which has the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002029	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002030	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002031	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002032	please count the reviews .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Review ) => notify
S4000002033	i want the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002034	which are restaurant having location here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002035	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002036	i would like the restaurants with the smallest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002037	which is the restaurants that is closest to here ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002038	what is the restaurant with the largest count of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002039	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002040	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002041	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002042	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002043	what is the description and country of restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002044	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002045	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002046	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002047	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002048	what is the nearest restaurants to LOCATION_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002049	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002050	find the city and street of restaurant	now => [ param:address.addressLocality:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002051	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002052	retrieve the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002053	retrieve the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002054	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002055	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002056	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002057	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002058	i would like the nearest restaurants to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002059	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002060	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002061	what are the review which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 3 => notify
S4000002062	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002063	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002064	what is the restaurant with the largest count of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002065	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002066	search for the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002067	find the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002068	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002069	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002070	retrieve the restaurant that is closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002071	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002072	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002073	get the restaurants that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002074	what is the date published and description of reviews	now => [ param:datePublished:Date , param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S4000002075	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002076	what is both the telephone and postal code of restaurants	now => [ param:address.postalCode:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002077	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002078	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002079	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002080	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002081	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002082	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002083	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002084	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002085	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002086	i am looking for the postal code and street of restaurant .	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002087	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002088	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002089	what is the location and summary of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002090	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002091	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002092	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002093	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002094	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002095	retrieve the restaurant with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002096	search for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002097	retrieve the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002098	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002099	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002100	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002101	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002102	what is both the description and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002103	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002104	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002105	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002106	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002107	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002108	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002109	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002110	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002111	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002112	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002113	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002114	what are the restaurant which have postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S4000002115	show me the address and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002116	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002117	what review have rating one ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S4000002118	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002119	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002120	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002121	which are the reviews that have higher rating than 2 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 2 => notify
S4000002122	get the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002123	search the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002124	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002125	what is both the postal code and summary of restaurant ?	now => [ param:address.postalCode:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002126	get the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002127	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002128	i need the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002129	what is the description and location of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002130	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002131	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002132	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002133	i want the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002134	please retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002135	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002136	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002137	i am looking for the restaurants that is most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002138	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002139	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002140	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002141	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002142	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002143	i want the restaurant most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002144	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002145	which are restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002146	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002147	what is the city and telephone of restaurants	now => [ param:address.addressLocality:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002148	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002149	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002150	i am looking to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002151	i am looking for the farthest restaurants from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002152	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002153	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002154	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002155	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002156	retrieve the restaurant that is closest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002157	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002158	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002159	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002160	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002161	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002162	which reviews have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S4000002163	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002164	i would like the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002165	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002166	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002167	what are reviews which have rating less than 0 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S4000002168	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002169	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002170	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002171	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002172	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002173	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002174	retrieve the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002175	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002176	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002177	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002178	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002179	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002180	search the restaurants which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002181	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002182	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002183	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002184	get the restaurant that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002185	retrieve the restaurants with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002186	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002187	how many restaurant are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002188	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002189	which are restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002190	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002191	retrieve the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002192	i would like the nearest restaurants to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002193	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002194	i need the description and location of restaurant	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002195	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002196	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002197	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002198	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002199	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002200	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002201	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002202	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002203	find the farthest restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002204	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002205	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002206	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002207	find the closest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002208	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002209	what are the restaurant with rating more than one ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000002210	get the restaurants that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002211	how close is restaurant to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000002212	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002213	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002214	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002215	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002216	what are restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S4000002217	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002218	what are reviews with 10 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 10 => notify
S4000002219	which restaurants have larger rating than 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S4000002220	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002221	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002222	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002223	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002224	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002225	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002226	retrieve the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002227	please retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002228	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002229	which are the restaurants that have larger review count than one ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S4000002230	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002231	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002232	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002233	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002234	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002235	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002236	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002237	find the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002238	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002239	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002240	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002241	search for the restaurants closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002242	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002243	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002244	search for the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002245	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002246	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002247	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002248	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002249	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002250	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002251	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002252	which are restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002253	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002254	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002255	what is the telephone and summary of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002256	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002257	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002258	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002259	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002260	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002261	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002262	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002263	i want the restaurant most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002264	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002265	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002266	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002267	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002268	search for the reviews with the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002269	search the nearest restaurants to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002270	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002271	which is the restaurants nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002272	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002273	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002274	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002275	tell me both the telephone and summary of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002276	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002277	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002278	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002279	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002280	find the farthest restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002281	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002282	i would like the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002283	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002284	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002285	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002286	what is the address and street of restaurant	now => [ param:address.streetAddress:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002287	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002288	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002289	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002290	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002291	what is both the cuisine and street of restaurants ?	now => [ param:address.streetAddress:String , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002292	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002293	find the restaurant that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002294	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002295	search the nearest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002296	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002297	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002298	give me the rating and street of restaurants	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002299	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002300	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002301	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002302	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002303	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002304	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002305	show me the location and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002306	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002307	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002308	i need the restaurant with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002309	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002310	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002311	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002312	i want the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002313	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002314	search for the restaurant most far away from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002315	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002316	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002317	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002318	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002319	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002320	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002321	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002322	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002323	find the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002324	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002325	what restaurants gets the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002326	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002327	what restaurant has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002328	what is the cuisine and description of restaurant	now => [ param:description:String , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002329	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002330	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002331	get the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002332	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002333	search for the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002334	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002335	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002336	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002337	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002338	retrieve the restaurant that is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002339	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002340	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002341	i am looking to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002342	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002343	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002344	retrieve the restaurant which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002345	search the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002346	which are the restaurant that have address home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S4000002347	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002348	get the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002349	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002350	which is the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002351	get the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002352	i would like the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002353	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002354	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002355	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002356	i need the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002357	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002358	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002359	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002360	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002361	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002362	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002363	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002364	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002365	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002366	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002367	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002368	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002369	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002370	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002371	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002372	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002373	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002374	which are QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002375	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002376	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002377	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002378	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002379	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002380	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002381	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002382	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002383	i would like the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002384	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002385	search the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002386	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002387	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002388	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002389	i need the description and location of restaurant .	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002390	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002391	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002392	retrieve the restaurants which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002393	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002394	which are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002395	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002396	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002397	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002398	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002399	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002400	give me the rating and street of restaurants	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002401	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002402	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002403	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002404	i am looking for the restaurants which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002405	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002406	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002407	i want the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002408	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002409	i would like the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002410	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002411	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002412	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002413	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002414	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002415	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002416	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002417	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002418	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002419	count the restaurant	now => aggregate count of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002420	get the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002421	i want the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002422	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002423	i want the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002424	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002425	what is the rating and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002426	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002427	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002428	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002429	get the restaurant that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002430	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002431	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002432	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002433	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002434	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002435	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002436	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002437	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002438	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002439	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002440	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002441	get the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002442	i need the restaurant closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002443	find the closest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002444	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002445	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002446	i want the restaurant farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002447	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002448	i want the restaurant that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002449	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002450	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002451	what are the QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002452	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002453	give me the summary and address of restaurant	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002454	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002455	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002456	which restaurant has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002457	which restaurants gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002458	search for the restaurants closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002459	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002460	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002461	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002462	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002463	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002464	what reviews have 8 or above rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S4000002465	find the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002466	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002467	i need both the description and city of restaurant	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002468	which is the restaurant closest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002469	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002470	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002471	i need the restaurant with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002472	which restaurant have cuisine being QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S4000002473	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002474	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002475	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002476	search the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002477	i want the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002478	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002479	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002480	find the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002481	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002482	i need the restaurant with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002483	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002484	which review have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S4000002485	what are restaurant in here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002486	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002487	i need the nearest restaurants to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002488	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002489	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002490	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002491	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002492	i need to know both the state and review count of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002493	search the nearest restaurants to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002494	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002495	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002496	i need the nearest restaurants to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002497	i want the restaurant farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002498	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002499	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002500	find the telephone and country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002501	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002502	search the nearest restaurants to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002503	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002504	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002505	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002506	what is the address and street of restaurant	now => [ param:address.streetAddress:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002507	how many reviews do restaurant have	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002508	i am looking to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002509	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002510	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002511	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002512	what are restaurant which have more review count than 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S4000002513	please count the restaurant	now => aggregate count of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002514	what is the nearest restaurants to me ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002515	i need the nearest restaurant to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002516	find the telephone and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002517	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002518	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002519	which restaurants get rating zero ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S4000002520	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002521	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002522	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002523	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002524	i want the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002525	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002526	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002527	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002528	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002529	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002530	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002531	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002532	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002533	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002534	show me the location and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002535	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002536	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002537	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002538	retrieve the restaurants with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002539	show me the address and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002540	find the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002541	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002542	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002543	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002544	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002545	which restaurant has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002546	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002547	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002548	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002549	what restaurants get at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S4000002550	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002551	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002552	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002553	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002554	search the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002555	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002556	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002557	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002558	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002559	i would like the nearest restaurants to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002560	search for the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002561	get the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002562	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002563	which are review with higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S4000002564	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002565	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002566	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002567	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002568	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002569	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002570	find the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002571	what are the QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002572	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002573	i am looking for the restaurants which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002574	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002575	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002576	search for the farthest restaurants from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002577	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002578	get the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002579	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002580	i would like the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002581	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002582	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002583	i need the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002584	find the closest restaurants to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002585	search for the restaurant which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002586	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002587	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002588	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002589	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002590	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002591	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002592	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002593	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002594	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002595	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002596	i need the restaurant closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002597	which are restaurants which have rating 9 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S4000002598	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002599	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002600	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002601	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002602	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002603	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002604	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002605	what is the street and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002606	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002607	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002608	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002609	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002610	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002611	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002612	which are the restaurant having 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S4000002613	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002614	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002615	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002616	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002617	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002618	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002619	search for the restaurants closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002620	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002621	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002622	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002623	get the restaurant nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002624	i would like to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002625	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002626	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002627	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002628	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002629	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002630	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002631	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002632	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002633	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002634	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002635	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002636	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002637	find the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002638	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002639	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002640	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002641	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002642	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002643	get the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002644	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002645	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002646	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002647	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002648	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002649	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002650	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002651	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002652	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002653	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002654	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002655	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002656	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002657	what is both the city and price range of restaurants	now => [ param:address.addressLocality:String , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002658	which restaurant has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002659	i need to know both the state and review count of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002660	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002661	which is the farthest restaurant from LOCATION_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002662	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002663	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002664	i would like the restaurant with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002665	i need the restaurants nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002666	search for the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002667	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002668	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002669	i need the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002670	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002671	search the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002672	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002673	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002674	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002675	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002676	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002677	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002678	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002679	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002680	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002681	i would like the telephone and postal code of restaurants	now => [ param:address.postalCode:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002682	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002683	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002684	i want the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002685	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002686	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002687	i am looking to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002688	i need the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002689	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002690	retrieve the restaurants which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002691	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002692	what is the country and summary of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002693	what restaurant have rating not more than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S4000002694	what is the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002695	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002696	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002697	i am looking for the street and cuisine of restaurants	now => [ param:address.streetAddress:String , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002698	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002699	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002700	search for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002701	i want the restaurant most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002702	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002703	retrieve the restaurant with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002704	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002705	i would like the telephone and description of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002706	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002707	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002708	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002709	i want the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002710	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002711	what is the telephone and summary of restaurant ?	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002712	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002713	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002714	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002715	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002716	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002717	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002718	get the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002719	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002720	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002721	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002722	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002723	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002724	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002725	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002726	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002727	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002728	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002729	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002730	i need the restaurant with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002731	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002732	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002733	i am looking for the farthest restaurants from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002734	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002735	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002736	how many reviews do restaurant have	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002737	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002738	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002739	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002740	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002741	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002742	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002743	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002744	which are restaurant having smaller rating than 12 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S4000002745	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002746	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002747	i am looking for the restaurants closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002748	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002749	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002750	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002751	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002752	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002753	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002754	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002755	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002756	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002757	search for the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002758	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002759	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002760	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002761	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002762	retrieve the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002763	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002764	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002765	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002766	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002767	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002768	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002769	what restaurant has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002770	find the restaurants which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002771	what reviews get lower rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S4000002772	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002773	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002774	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002775	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002776	find the restaurants nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002777	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002778	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002779	which is the nearest restaurants to work ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002780	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002781	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002782	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002783	find the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002784	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002785	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002786	i want the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002787	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002788	retrieve the restaurant which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002789	retrieve the farthest restaurants from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002790	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002791	i would like the rating and location of restaurants .	now => [ param:aggregateRating.ratingValue:Number , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002792	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002793	which are the restaurant around here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000002794	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002795	how far are restaurant to LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000002796	which restaurant gets the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002797	i need the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002798	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002799	i need the nearest restaurants to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002800	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002801	what is the telephone and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002802	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002803	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002804	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002805	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002806	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002807	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002808	i am looking for the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002809	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002810	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002811	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002812	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002813	i want the restaurant most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002814	what restaurants gets the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002815	which are the review which have lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S4000002816	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002817	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002818	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002819	search for the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002820	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002821	which restaurant gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002822	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002823	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002824	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002825	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002826	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002827	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002828	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002829	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002830	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002831	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002832	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002833	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002834	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002835	i am looking for the restaurants closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002836	i need the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002837	what is the closest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002838	i need both the street and description of restaurants .	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002839	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002840	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002841	i need the restaurant which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002842	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002843	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002844	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002845	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002846	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002847	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002848	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002849	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002850	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002851	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002852	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002853	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002854	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002855	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002856	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002857	what is the rating and summary of restaurants	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002858	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002859	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002860	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002861	search the restaurants which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002862	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002863	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002864	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002865	which are restaurant that have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S4000002866	i am looking to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002867	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002868	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002869	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002870	find the closest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002871	i need the restaurant farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002872	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002873	i need to know both the state and review count of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002874	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002875	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002876	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002877	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002878	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002879	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002880	search the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002881	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002882	show me the location and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002883	how many reviews do restaurant have	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002884	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002885	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002886	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002887	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002888	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002889	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002890	retrieve the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002891	retrieve the restaurants with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002892	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002893	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002894	what are the QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002895	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002896	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002897	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002898	what restaurants have 0 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S4000002899	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002900	how close is restaurants to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000002901	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002902	retrieve the restaurants with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002903	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002904	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002905	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002906	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002907	i would like the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002908	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002909	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002910	what is both the rating and summary of restaurant ?	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002911	get the restaurant farthest from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002912	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002913	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002914	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002915	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002916	get the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002917	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002918	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002919	search the summary and location of restaurant	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002920	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002921	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002922	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002923	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002924	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002925	which restaurants has the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002926	i would like the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002927	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002928	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002929	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002930	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002931	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002932	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002933	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002934	find the farthest restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002935	what is both the cuisine and telephone of restaurant	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002936	i want the restaurant that is nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002937	search the nearest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002938	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002939	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002940	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002941	search the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002942	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002943	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002944	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002945	give me the summary and address of restaurant .	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002946	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002947	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002948	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002949	i want the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002950	what are the restaurant with review count more than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S4000002951	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002952	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002953	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002954	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002955	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002956	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002957	which restaurants has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002958	which restaurant has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002959	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002960	i need the most far away restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002961	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002962	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002963	which are the reviews that have rating zero ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S4000002964	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002965	i want the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002966	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002967	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002968	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002969	find the restaurants which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002970	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002971	how many reviews do restaurant have	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002972	retrieve the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002973	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000002974	i need the most far away restaurant from LOCATION_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002975	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002976	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002977	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002978	what restaurant gets the minimum review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002979	search the restaurants which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002980	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002981	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002982	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002983	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002984	which restaurants gets the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002985	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002986	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002987	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002988	which reviews has the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000002989	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002990	retrieve the restaurants that is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002991	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002992	i need the restaurant which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002993	show me the address and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000002994	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002995	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002996	which restaurants has the minimum review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000002997	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000002998	i would like the nearest restaurants to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000002999	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003000	which are restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S4000003001	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003002	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003003	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003004	retrieve the farthest restaurant from LOCATION_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003005	search for the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003006	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003007	search for the restaurants which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003008	how close are restaurants to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003009	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003010	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003011	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003012	which is the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003013	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003014	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003015	i am looking for the restaurants that is most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003016	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003017	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003018	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003019	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003020	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003021	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003022	which restaurant has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003023	search for the restaurant with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003024	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003025	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003026	i need the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003027	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003028	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003029	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003030	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003031	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003032	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003033	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003034	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003035	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003036	get the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003037	retrieve the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003038	i want the restaurant most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003039	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003040	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003041	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003042	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003043	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003044	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003045	what is the description and location of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003046	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003047	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003048	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003049	what is the description and rating of restaurant	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003050	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003051	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003052	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003053	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003054	what restaurants get location LOCATION_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S4000003055	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003056	what restaurants get lower rating than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S4000003057	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003058	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003059	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003060	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003061	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003062	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003063	retrieve the restaurant that is closest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003064	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003065	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003066	i would like the nearest restaurants to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003067	find the farthest restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003068	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003069	i would like the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003070	i am looking for the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003071	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003072	which reviews get rating 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 6 => notify
S4000003073	i need the nearest restaurant to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003074	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003075	which are the restaurant that have rating not less than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S4000003076	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003077	retrieve the restaurant that is closest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003078	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003079	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003080	which are the restaurants having over 6 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S4000003081	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003082	i want the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003083	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003084	search the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003085	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003086	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003087	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003088	which restaurant has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003089	find the closest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003090	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003091	what is both the review count and cuisine of restaurant ?	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003092	get the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003093	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003094	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003095	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003096	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003097	i would like the closest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003098	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003099	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003100	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003101	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003102	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003103	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003104	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003105	i need to know both the summary and city of restaurants .	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003106	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003107	what reviews gets the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003108	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003109	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003110	show me both the price range and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003111	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003112	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003113	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003114	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003115	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003116	find the telephone and country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003117	i would like the restaurants with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003118	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003119	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003120	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003121	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003122	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003123	what is the rating and description of reviews ?	now => [ param:description:String , param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S4000003124	i need the restaurants that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003125	what is both the review count and location of restaurant	now => [ param:aggregateRating.reviewCount:Number , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003126	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003127	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003128	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003129	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003130	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003131	i am looking for the postal code and street of restaurant .	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003132	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003133	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003134	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003135	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003136	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003137	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003138	what restaurants has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003139	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003140	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003141	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003142	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003143	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003144	what restaurants gets the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003145	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003146	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003147	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003148	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003149	get the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003150	what is the rating and description of reviews	now => [ param:description:String , param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S4000003151	which are restaurants having no more than NUMBER_0 reviews ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S4000003152	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003153	what restaurants gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003154	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003155	search the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003156	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003157	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003158	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003159	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003160	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003161	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003162	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003163	i would like the telephone and description of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003164	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003165	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003166	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003167	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003168	which restaurants gets the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003169	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003170	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003171	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003172	i am looking for the closest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003173	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003174	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003175	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003176	search for the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003177	search for the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003178	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003179	i want the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003180	i want the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003181	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003182	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003183	show me the location and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003184	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003185	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003186	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003187	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003188	get the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003189	what restaurants has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003190	what is the city and street of restaurants	now => [ param:address.addressLocality:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003191	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003192	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003193	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003194	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003195	retrieve the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003196	retrieve the restaurants which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003197	i need the restaurant which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003198	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003199	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003200	search for the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003201	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003202	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003203	get the restaurant that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003204	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003205	search the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003206	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003207	which restaurant get 0 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S4000003208	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003209	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003210	get the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003211	search the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003212	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003213	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003214	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003215	retrieve the nearest restaurant to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003216	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003217	find the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003218	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003219	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003220	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003221	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003222	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003223	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003224	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003225	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003226	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003227	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003228	i want the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003229	search the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003230	search for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003231	what is the telephone and country of restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003232	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003233	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003234	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003235	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003236	search for the farthest restaurants from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003237	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003238	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003239	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003240	get the restaurant with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003241	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003242	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003243	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003244	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003245	how far are restaurant from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003246	what is the price range and summary of restaurants ?	now => [ param:description:String , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003247	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003248	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003249	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003250	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003251	i want the nearest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003252	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003253	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003254	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003255	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003256	what are review which have rating zero ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S4000003257	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003258	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003259	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003260	which are restaurant having telephone PHONE_NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S4000003261	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003262	i want the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003263	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003264	i would like the restaurants with the smallest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003265	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003266	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003267	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003268	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003269	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003270	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003271	i am looking for the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003272	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003273	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003274	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003275	retrieve the most far away restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003276	search for the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003277	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003278	search the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003279	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003280	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003281	which restaurant have 0 or less review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000003282	which are restaurants that have review count 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S4000003283	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003284	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003285	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003286	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003287	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003288	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003289	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003290	what restaurant gets the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003291	find the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003292	which reviews get lower rating than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S4000003293	search for the restaurants which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003294	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003295	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003296	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003297	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003298	find the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003299	search for the reviews with the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003300	what restaurant have rating not more than 5 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S4000003301	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003302	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003303	i need to know both the summary and city of restaurants	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003304	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003305	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003306	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003307	i want the restaurants farthest from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003308	find the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003309	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003310	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003311	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003312	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003313	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003314	search for the farthest restaurants from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003315	retrieve the restaurants which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003316	i need to know both the summary and city of restaurants	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003317	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003318	search for the reviews with the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003319	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003320	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003321	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003322	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003323	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003324	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003325	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003326	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003327	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003328	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003329	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003330	i am looking for the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003331	what are the QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003332	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003333	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003334	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003335	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003336	search the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003337	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003338	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003339	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003340	i need the restaurant which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003341	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003342	i want the most far away restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003343	what is the restaurants nearest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003344	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003345	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003346	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003347	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003348	which restaurant get 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S4000003349	show me both the price range and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003350	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003351	get the restaurants that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003352	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003353	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003354	find the restaurant with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003355	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003356	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003357	find the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003358	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003359	get the restaurants that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003360	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003361	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003362	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003363	what are the restaurants having review count at least 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S4000003364	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003365	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003366	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003367	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003368	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003369	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003370	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003371	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003372	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003373	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003374	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003375	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003376	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003377	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003378	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003379	please search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003380	search for the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003381	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003382	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003383	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003384	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003385	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003386	what is the telephone and description of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003387	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003388	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003389	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003390	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003391	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003392	i need the restaurants nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003393	which are reviews which have smaller rating than 10 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S4000003394	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003395	i need the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003396	what are the restaurant with over 6 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S4000003397	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003398	which are restaurants having review count not more than zero ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000003399	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003400	how close are restaurant to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003401	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003402	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003403	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003404	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003405	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003406	search for the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003407	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003408	what are the restaurants with review count NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S4000003409	find the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003410	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003411	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003412	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003413	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003414	what is the description and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003415	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003416	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003417	get the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003418	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003419	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003420	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003421	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003422	retrieve the restaurants with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003423	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003424	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003425	retrieve the restaurants which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003426	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003427	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003428	show me the address and state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003429	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003430	i want the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003431	what are the review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S4000003432	what are the restaurant having more rating than 1 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000003433	how far is restaurants to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003434	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003435	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003436	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003437	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003438	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003439	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003440	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003441	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003442	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003443	i want to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003444	what are the restaurant with review count more than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S4000003445	search for the most far away restaurant from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003446	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003447	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003448	how near is restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003449	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003450	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003451	search for the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003452	what restaurants has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003453	retrieve the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003454	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003455	i need to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003456	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003457	which reviews has the maximum rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003458	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003459	find the farthest restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003460	which restaurants serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S4000003461	what is both the cuisine and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003462	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003463	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003464	which is the most far away restaurant ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003465	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003466	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003467	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003468	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003469	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003470	i want the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003471	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003472	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003473	search the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003474	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003475	retrieve the restaurants with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003476	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003477	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003478	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003479	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003480	get the restaurant nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003481	what is the restaurants which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003482	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003483	what are the restaurant with rating more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000003484	search the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003485	i need both the street and description of restaurants .	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003486	search the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003487	which is the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003488	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003489	search the restaurants which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003490	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003491	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003492	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003493	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003494	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003495	which restaurant gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003496	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003497	what is the location and summary of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003498	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003499	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003500	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003501	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003502	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003503	what is the price range and description of restaurant ?	now => [ param:description:String , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003504	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003505	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003506	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003507	i want the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003508	find the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003509	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003510	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003511	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003512	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003513	i need both the city and postal code of restaurant .	now => [ param:address.addressLocality:String , param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003514	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003515	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003516	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003517	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003518	which are the reviews that have higher rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 2 => notify
S4000003519	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003520	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003521	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003522	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003523	which are restaurant having 10 or more rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S4000003524	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003525	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003526	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003527	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003528	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003529	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003530	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003531	retrieve the nearest restaurant to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003532	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003533	i want the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003534	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003535	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003536	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003537	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003538	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003539	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003540	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003541	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003542	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003543	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003544	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003545	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003546	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003547	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003548	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003549	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003550	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003551	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003552	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003553	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003554	i am looking for the farthest restaurants from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003555	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003556	what are the restaurants which have 6 or less review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S4000003557	give me the summary and address of restaurant .	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003558	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003559	find the farthest restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003560	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003561	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003562	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003563	what is the country and description of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003564	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003565	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003566	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003567	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003568	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003569	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003570	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003571	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003572	find the farthest restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003573	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003574	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003575	find the closest restaurant to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003576	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003577	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003578	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003579	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003580	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003581	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003582	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003583	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003584	what is the telephone and summary of restaurant ?	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003585	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003586	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003587	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003588	find the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003589	what is both the country and summary of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003590	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003591	what is both the description and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003592	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003593	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003594	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003595	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003596	get the most far away restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003597	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003598	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003599	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003600	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003601	find the telephone and country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003602	which are restaurants that have 1 or higher rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000003603	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003604	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003605	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003606	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003607	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003608	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003609	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003610	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003611	i want the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003612	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003613	i want the restaurant which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003614	search the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003615	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003616	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003617	what is both the cuisine and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003618	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003619	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003620	what is both the summary and rating of restaurants ?	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003621	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003622	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003623	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003624	what are restaurant having address where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S4000003625	i am looking to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003626	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003627	what is the address and state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003628	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003629	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003630	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003631	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003632	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003633	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003634	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003635	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003636	retrieve the restaurants that is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003637	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003638	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003639	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003640	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003641	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003642	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003643	i want the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003644	which restaurants has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003645	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003646	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003647	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003648	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003649	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003650	i am looking for the restaurants which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003651	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003652	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003653	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003654	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003655	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003656	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003657	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003658	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003659	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003660	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003661	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003662	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003663	i need the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003664	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003665	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003666	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003667	i want the restaurants that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003668	find the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003669	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003670	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003671	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003672	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003673	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003674	what are restaurant with review count 3 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S4000003675	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003676	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003677	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003678	i need the restaurants nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003679	i need the description and location of restaurant .	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003680	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003681	which restaurant has the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003682	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003683	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003684	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003685	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003686	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003687	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003688	i want the restaurants farthest from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003689	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003690	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003691	how far are restaurant from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003692	which restaurant has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003693	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003694	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003695	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003696	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003697	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003698	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003699	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003700	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003701	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003702	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003703	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003704	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003705	find the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003706	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003707	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003708	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003709	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003710	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003711	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003712	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003713	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003714	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003715	what is the location and summary of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003716	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003717	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003718	i want the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003719	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003720	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003721	get the restaurants that is most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003722	i would like the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003723	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003724	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003725	i want the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003726	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003727	show me the address and state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003728	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003729	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003730	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003731	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003732	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003733	how many reviews do restaurant have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003734	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003735	how close is restaurant from where i 'm now ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003736	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003737	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003738	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003739	what are the restaurant which have review count 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S4000003740	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003741	i would like the telephone and postal code of restaurants	now => [ param:address.postalCode:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003742	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003743	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003744	find the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003745	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003746	i need the restaurant closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003747	find the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003748	i need the most far away restaurant from LOCATION_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003749	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003750	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003751	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003752	search for the farthest restaurants from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003753	search for the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003754	what restaurants gets the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003755	what is the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003756	i want the restaurant nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003757	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003758	retrieve the restaurants which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003759	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003760	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003761	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003762	what is the rating and country of restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003763	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003764	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003765	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003766	how many reviews in restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003767	search the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003768	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003769	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003770	which restaurants have summary QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S4000003771	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003772	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003773	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003774	i want the restaurants farthest from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003775	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003776	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003777	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003778	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003779	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003780	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003781	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003782	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003783	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003784	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003785	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003786	search for the restaurant most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003787	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003788	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003789	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003790	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003791	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003792	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003793	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003794	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003795	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003796	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003797	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003798	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003799	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003800	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003801	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003802	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003803	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003804	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003805	how many reviews in restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003806	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003807	get the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003808	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003809	find the restaurant that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003810	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003811	i need the most far away restaurants from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003812	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003813	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003814	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003815	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003816	which is the nearest restaurants to LOCATION_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003817	what are the restaurant with rating 12 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S4000003818	what review get rating more than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S4000003819	search the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003820	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003821	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003822	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003823	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003824	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003825	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003826	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003827	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003828	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003829	which restaurant gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003830	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003831	i would like the restaurants with the smallest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003832	what are reviews with 10 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 10 => notify
S4000003833	i am looking for the postal code and street of restaurant .	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003834	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003835	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003836	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003837	i would like the restaurant which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003838	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003839	find the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003840	find the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003841	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003842	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003843	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003844	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003845	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003846	how far are restaurant from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003847	i would like the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003848	how near is restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003849	i need to know both the summary and city of restaurants .	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003850	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003851	which are the restaurants which do n't have fewer than 3 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 3 => notify
S4000003852	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003853	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003854	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003855	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003856	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003857	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003858	what are restaurants with 9 or more review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S4000003859	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003860	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003861	how many reviews in restaurants ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003862	retrieve the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003863	i would like the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003864	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003865	which restaurants have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S4000003866	which are the restaurants that have lower review count than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S4000003867	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003868	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003869	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003870	please count the reviews .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Review ) => notify
S4000003871	what is both the description and street of restaurant ?	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003872	what is both the cuisine and summary of restaurant ?	now => [ param:description:String , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003873	where is the restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003874	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003875	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003876	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003877	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003878	i want the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003879	find the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003880	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003881	what are the restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S4000003882	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003883	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003884	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003885	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003886	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003887	i would like the telephone and postal code of restaurants	now => [ param:address.postalCode:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003888	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003889	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003890	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003891	what is the telephone and description of restaurant ?	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003892	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003893	which restaurants has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003894	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003895	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003896	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003897	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003898	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003899	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003900	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003901	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003902	retrieve the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003903	i need to know both the summary and city of restaurants	now => [ param:address.addressLocality:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003904	i need the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003905	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003906	how far is restaurant from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000003907	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003908	i am looking for the restaurants that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003909	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003910	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003911	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003912	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003913	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003914	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003915	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003916	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003917	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003918	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003919	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003920	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003921	i would like to know both the summary and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003922	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003923	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003924	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003925	i need the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003926	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003927	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003928	what is the location and summary of restaurants ?	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003929	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003930	i need the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003931	i would like the restaurants farthest from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003932	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003933	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003934	i would like to know both the summary and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003935	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003936	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003937	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003938	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003939	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003940	i need the most far away restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003941	what is the postal code and location of restaurants	now => [ param:address.postalCode:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003942	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003943	retrieve the restaurant which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003944	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003945	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003946	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003947	find the farthest restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003948	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003949	i am looking to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003950	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003951	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003952	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003953	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003954	what are the restaurant which have review count not more than 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S4000003955	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003956	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003957	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003958	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003959	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000003960	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003961	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003962	retrieve the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003963	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003964	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003965	get the restaurant with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003966	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003967	what restaurant gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003968	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003969	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003970	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003971	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003972	search for the restaurant with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003973	i would like the restaurants with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003974	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003975	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003976	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003977	search the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003978	i am looking for the restaurant that is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003979	search for the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003980	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003981	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003982	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003983	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003984	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000003985	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003986	i need the restaurants that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003987	i want the restaurant that is nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003988	search for the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003989	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003990	i want the restaurant that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003991	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003992	get the farthest restaurant from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003993	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003994	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000003995	i need the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000003996	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003997	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000003998	i need the most far away restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000003999	i need the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004000	i need the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004001	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004002	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004003	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004004	which is the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004005	which reviews have rating more than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 2 => notify
S4000004006	i need the most far away restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004007	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004008	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004009	what is both the description and street of restaurant	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004010	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004011	i need the nearest restaurants to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004012	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004013	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004014	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004015	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004016	get the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004017	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004018	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004019	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004020	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004021	find the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004022	which is the review with the maximum rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004023	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004024	which are restaurants that have 1 or higher rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000004025	i want the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004026	what is the rating and summary of restaurants	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004027	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004028	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004029	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004030	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004031	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004032	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004033	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004034	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004035	what are the restaurants having review count not less than 6 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S4000004036	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004037	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004038	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004039	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004040	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004041	find the restaurant that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004042	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004043	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004044	i need the restaurant with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004045	retrieve the restaurant that is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004046	which are the restaurants having postal code QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S4000004047	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004048	search the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004049	retrieve the nearest restaurant to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004050	what is both the price range and telephone of restaurant	now => [ param:priceRange:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004051	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004052	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004053	retrieve the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004054	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004055	retrieve the restaurant which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004056	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004057	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004058	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004059	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004060	which are the review which have 9 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S4000004061	search for the restaurants closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004062	find the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004063	what is the restaurants with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004064	what is both the summary and state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004065	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004066	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004067	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004068	get the restaurants that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004069	what is the location and summary of restaurants	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004070	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004071	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004072	what restaurant has the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004073	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004074	i need the most far away restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004075	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004076	i want the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004077	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004078	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004079	find the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004080	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004081	how many restaurant are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004082	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004083	i am looking for the restaurants which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004084	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004085	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004086	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004087	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004088	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004089	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004090	i want the restaurant most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004091	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004092	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004093	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004094	find the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004095	give me the rating and street of restaurants .	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004096	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004097	get the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004098	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004099	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004100	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004101	search for the restaurants closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004102	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004103	i am looking for the closest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004104	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004105	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004106	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004107	i would like the restaurant with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004108	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004109	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004110	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004111	i want the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004112	find the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004113	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004114	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004115	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004116	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004117	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004118	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004119	search for the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004120	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004121	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004122	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004123	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004124	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004125	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004126	i need to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004127	i am looking for the farthest restaurants from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004128	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004129	what is the closest restaurants ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004130	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004131	find the closest restaurants to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004132	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004133	i need both the street and description of restaurants .	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004134	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004135	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004136	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004137	retrieve the restaurants which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004138	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004139	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004140	give me the rating and street of restaurants .	now => [ param:address.streetAddress:String , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004141	what is the telephone and price range of restaurant	now => [ param:priceRange:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004142	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004143	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004144	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004145	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004146	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004147	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004148	i need the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004149	i want the restaurant most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004150	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004151	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004152	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004153	what restaurants gets the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004154	find the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004155	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004156	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004157	i would like the restaurants farthest from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004158	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004159	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004160	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004161	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004162	get the restaurant that is most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004163	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004164	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004165	please retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004166	get the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004167	what is the street and summary of restaurants	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004168	find the restaurant with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004169	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004170	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004171	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004172	find the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004173	find the closest restaurant to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004174	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004175	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004176	i would like the farthest restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004177	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004178	find the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004179	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004180	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004181	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004182	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004183	i need the restaurant farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004184	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004185	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004186	search the restaurants with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004187	retrieve the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004188	what is both the telephone and address of restaurants	now => [ param:geo:Location , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004189	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004190	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004191	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004192	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004193	i want the nearest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004194	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004195	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004196	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004197	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004198	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004199	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004200	search for the restaurant which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004201	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004202	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004203	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004204	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004205	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004206	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004207	i want the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004208	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004209	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004210	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004211	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004212	i need the restaurants closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004213	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004214	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004215	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004216	i want the restaurants farthest from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004217	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004218	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004219	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004220	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004221	i need the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004222	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004223	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004224	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004225	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004226	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004227	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004228	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004229	which are restaurants that have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S4000004230	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004231	i am looking to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004232	find the closest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004233	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004234	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004235	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004236	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004237	find the restaurants which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004238	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004239	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004240	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004241	what is the restaurants which has the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004242	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004243	i need to know both the state and review count of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004244	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004245	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004246	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004247	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004248	search for the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004249	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004250	i need both the city and postal code of restaurant .	now => [ param:address.addressLocality:String , param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004251	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004252	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004253	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004254	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004255	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004256	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004257	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004258	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004259	i need to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004260	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004261	i need the description and location of restaurant	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004262	which restaurants gets the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004263	i would like the restaurant with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004264	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004265	i am looking for the restaurant which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004266	retrieve the restaurants that is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004267	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004268	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004269	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004270	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004271	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004272	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004273	retrieve the restaurants with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004274	what are restaurant having no more than 1 review ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 1 => notify
S4000004275	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004276	which is the restaurants with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004277	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004278	get the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004279	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004280	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004281	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004282	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004283	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004284	search the restaurants which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004285	what is the price range and summary of restaurants	now => [ param:description:String , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004286	search the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004287	which reviews have rating 2 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 2 => notify
S4000004288	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004289	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004290	search the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004291	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004292	what review have over one rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S4000004293	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004294	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004295	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004296	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004297	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004298	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004299	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004300	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004301	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004302	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004303	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004304	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004305	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004306	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004307	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004308	search for the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004309	search for the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004310	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004311	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004312	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004313	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004314	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004315	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004316	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004317	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004318	search for the restaurant with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004319	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004320	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004321	where is the restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004322	i need the most far away restaurants from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004323	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004324	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004325	search for the restaurant with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004326	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004327	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004328	what restaurant have rating not more than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S4000004329	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004330	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004331	what restaurants have review count zero ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S4000004332	retrieve the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004333	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004334	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004335	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004336	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004337	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004338	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004339	retrieve the reviews with the lowest rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004340	i would like the telephone and description of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004341	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004342	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004343	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004344	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004345	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004346	i need the most far away restaurant from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004347	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004348	i need the nearest restaurants to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004349	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004350	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004351	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004352	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004353	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004354	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004355	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004356	retrieve the restaurants with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004357	find the closest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004358	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004359	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004360	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004361	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004362	get the restaurants that is most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004363	how near are restaurants from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000004364	give me the summary and address of restaurant .	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004365	search the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004366	get the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004367	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004368	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004369	which are QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004370	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004371	i need the review with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004372	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004373	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004374	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004375	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004376	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004377	what are restaurant having review count not more than 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S4000004378	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004379	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004380	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004381	retrieve the most far away restaurant .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004382	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004383	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004384	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004385	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004386	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004387	i would like the restaurants with the smallest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004388	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004389	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004390	find the restaurant with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004391	find the restaurants which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004392	search the nearest restaurant to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004393	find the closest restaurant to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004394	i would like the nearest restaurants to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004395	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004396	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004397	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004398	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004399	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004400	find the restaurant with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004401	i need the restaurants that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004402	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004403	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004404	i want the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004405	get the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004406	what restaurant have higher review count than 3 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S4000004407	which reviews has the maximum rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004408	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004409	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004410	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004411	which restaurants have 9 or greater rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000004412	i want the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004413	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004414	i would like the reviews with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004415	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004416	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004417	what is the telephone and summary of restaurant ?	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004418	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004419	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004420	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004421	i want the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004422	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004423	i am looking to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004424	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004425	get the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004426	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004427	show me both the price range and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004428	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004429	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004430	i would like the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004431	which restaurants get smaller rating than 12 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S4000004432	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004433	retrieve the restaurants with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004434	retrieve the restaurants with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004435	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004436	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004437	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004438	find the restaurants nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004439	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004440	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004441	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004442	search for the restaurant which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004443	which restaurant get summary containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S4000004444	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004445	i need the most far away restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004446	i would like the restaurant which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004447	i want the restaurant which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004448	i want the restaurant that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004449	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004450	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004451	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004452	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004453	which are the restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S4000004454	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004455	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004456	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004457	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004458	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004459	i need the restaurants nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004460	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004461	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004462	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004463	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004464	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004465	find the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004466	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004467	what are reviews with 10 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 10 => notify
S4000004468	i need the restaurants nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004469	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004470	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004471	get the restaurant farthest from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004472	what restaurant has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004473	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004474	which restaurant gets the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004475	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004476	i would like the restaurants farthest from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004477	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004478	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004479	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004480	i need the restaurants closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004481	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004482	get the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004483	what is both the telephone and country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004484	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004485	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004486	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004487	search for the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004488	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004489	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004490	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004491	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004492	what is the rating and summary of restaurants	now => [ param:aggregateRating.ratingValue:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004493	get the restaurants that is most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004494	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004495	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004496	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004497	get the restaurant with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004498	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004499	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004500	get the restaurant that is most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004501	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004502	i need the restaurant closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004503	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004504	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004505	search the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004506	tell me both the telephone and summary of restaurant	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004507	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004508	which are restaurant that have rating 3 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S4000004509	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004510	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004511	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004512	i want the nearest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004513	i need the restaurant which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004514	i would like the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004515	what is the rating and location of restaurants ?	now => [ param:aggregateRating.ratingValue:Number , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004516	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004517	retrieve the restaurants that is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004518	search the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004519	search for the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004520	how far is restaurant from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000004521	retrieve the restaurant that is closest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004522	i would like the nearest restaurants to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004523	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004524	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004525	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004526	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004527	i am looking for the postal code and street of restaurant	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004528	i want the restaurants farthest from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004529	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004530	i need the restaurant closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004531	i would like the closest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004532	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004533	i would like the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004534	what is the nearest restaurants to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004535	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004536	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004537	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004538	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004539	get the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004540	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004541	show me both the price range and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004542	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004543	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004544	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004545	what is the rating and review count of restaurants	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004546	what are restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S4000004547	i need to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004548	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004549	which are the reviews which have rating less than 3 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S4000004550	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004551	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004552	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004553	what restaurants has the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004554	search the restaurant that is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004555	i need the restaurants closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004556	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004557	i would like the nearest restaurants to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004558	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004559	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004560	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004561	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004562	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004563	what is both the description and country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004564	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004565	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004566	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004567	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004568	i want the restaurants which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004569	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004570	give me the summary and address of restaurant	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004571	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004572	i want the restaurant that is nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004573	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004574	i need the restaurant with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004575	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004576	i want the restaurant that is nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004577	i want the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004578	i need the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004579	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004580	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004581	search the restaurant closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004582	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004583	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004584	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004585	count the restaurant .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004586	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004587	i need the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004588	i want to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004589	find the restaurant that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004590	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004591	i am looking for the postal code and street of restaurant .	now => [ param:address.postalCode:String , param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004592	where is the restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004593	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004594	search for the restaurant most far away from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004595	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004596	find the closest restaurants to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004597	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004598	what is both the cuisine and telephone of restaurant ?	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004599	what is both the review count and cuisine of restaurants	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004600	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004601	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004602	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004603	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004604	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004605	which restaurants gets the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004606	get the restaurant farthest from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004607	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004608	what are restaurants which have 2 or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S4000004609	i want the restaurants which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004610	i need the restaurants that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004611	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004612	i want the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004613	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004614	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004615	which restaurant gets the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004616	find the most far away restaurants	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004617	i would like the closest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004618	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004619	i need the most far away restaurant from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004620	what is the closest restaurant to LOCATION_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004621	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004622	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004623	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004624	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004625	what is both the review count and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004626	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004627	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004628	i want the restaurant farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004629	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004630	retrieve the reviews with the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004631	show me both the price range and country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004632	retrieve the restaurants which is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004633	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004634	retrieve the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004635	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004636	what is the price range and summary of restaurants ?	now => [ param:description:String , param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004637	what is the restaurants nearest to LOCATION_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004638	what is the postal code and review count of restaurant	now => [ param:address.postalCode:String , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004639	search the restaurants with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004640	i would like the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004641	what is both the postal code and summary of restaurant	now => [ param:address.postalCode:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004642	retrieve the restaurants that is nearest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004643	where are the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004644	i need the nearest restaurants to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004645	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004646	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004647	i need the restaurant which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004648	what is the street and cuisine of restaurant ?	now => [ param:address.streetAddress:String , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004649	search the nearest restaurant	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004650	find the most far away restaurant from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004651	find the closest restaurant to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004652	i am looking for the restaurants closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004653	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004654	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004655	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004656	search the restaurant closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004657	i need the nearest restaurant to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004658	tell me both the telephone and summary of restaurant .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004659	find the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004660	i need the restaurants nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004661	find the restaurants which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004662	which is the restaurants which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004663	which are restaurants having at most 8 reviews ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S4000004664	what is the location and summary of restaurants	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004665	which is the restaurants that is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004666	i need the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004667	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004668	find the restaurants which is farthest from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004669	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004670	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004671	retrieve the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004672	please retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004673	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004674	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004675	get the nearest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004676	search the nearest restaurant to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004677	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004678	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004679	i need the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004680	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004681	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004682	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004683	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004684	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004685	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004686	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004687	i need the restaurant which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004688	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004689	i need both the street and description of restaurants	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004690	find the restaurant with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004691	how far are restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000004692	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004693	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004694	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004695	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004696	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004697	get the restaurants that is nearest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004698	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004699	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004700	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004701	search for the most far away restaurant from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004702	get the restaurants that is most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004703	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004704	get the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004705	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004706	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004707	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004708	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004709	i would like the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004710	i want the nearest restaurants to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004711	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004712	i want the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004713	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004714	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004715	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004716	find the reviews which has the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004717	i need the restaurant closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004718	retrieve the most far away restaurant	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004719	find the nearest restaurant .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004720	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004721	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004722	find the nearest restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004723	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004724	show me the address and state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004725	i need the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004726	i need both the street and description of restaurants .	now => [ param:address.streetAddress:String , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004727	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004728	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004729	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004730	what are reviews which have QUOTED_STRING_0 in its summary ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S4000004731	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004732	i would like the restaurant with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004733	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004734	where is the restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004735	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004736	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004737	i need the most far away restaurants from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004738	i am looking for the restaurants which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004739	what is both the summary and review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004740	search the most far away restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004741	what is the nearest restaurant to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004742	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004743	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004744	i am looking to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004745	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004746	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004747	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004748	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004749	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004750	what restaurant has the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004751	i would like the restaurants farthest from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004752	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004753	what is both the cuisine and review count of restaurant	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004754	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004755	where is QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004756	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004757	which restaurants has the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004758	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004759	where is QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004760	where are QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004761	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004762	where are the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004763	what are QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004764	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004765	i want to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004766	i would like the review with the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004767	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004768	how far are restaurants from where i am now ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S4000004769	get the nearest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004770	what is the rating and country of restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004771	find the reviews which has the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004772	please retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004773	find the reviews which has the lowest rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004774	i would like the restaurant with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] => notify
S4000004775	where are QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S4000004776	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004777	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004778	what is the location and summary of restaurants	now => [ param:description:String , param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004779	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004780	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004781	i need to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004782	i want to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004783	i need the closest restaurants	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004784	i would like the closest restaurants .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004785	get the nearest restaurants to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004786	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004787	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004788	what is the summary and review count of restaurants ?	now => [ param:aggregateRating.reviewCount:Number , param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004789	i want the reviews which has the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Review ) ) [ 1 ] => notify
S4000004790	retrieve the most far away restaurant from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004791	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004792	i want the farthest restaurants .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] => notify
S4000004793	what is the postal code and state of restaurants ?	now => [ param:address.addressRegion:Entity(tt:us_state) , param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S4000004794	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004795	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004796	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004797	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004798	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S4000004799	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000004800	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000004801	i would like review which have date published DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == DATE_0 => notify
S5000004802	i need restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000004803	search for restaurant that have larger rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000004804	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000004805	i am looking for restaurant with address here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004806	i need restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000004807	i need restaurants here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004808	retrieve restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004809	find the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004810	what is the distance from home of restaurants ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000004811	what restaurants have 3 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 3 => notify
S5000004812	i want to find restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000004813	i need restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004814	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004815	i would like to search for restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004816	what is the price range of restaurants	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004817	i would like restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000004818	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004819	i need restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000004820	i am looking for restaurants with 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000004821	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004822	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000004823	please list restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000004824	search review that have QUOTED_STRING_0 in the summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004825	enumerate reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000004826	what is the distance from work to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000004827	enumerate restaurants which have more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000004828	search for restaurant that have review count not more than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000004829	which are restaurants having over 2 review count and telephone PHONE_NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000004830	i need to get restaurant that have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000004831	what is the country of restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004832	please enumerate restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000004833	i want to get restaurant that have location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004834	tell me what 's the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004835	list restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000004836	i want to search restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004837	i need the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004838	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004839	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004840	i would like review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004841	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004842	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000004843	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000004844	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004845	please enumerate restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000004846	search review that have QUOTED_STRING_0 in the summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004847	give me the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004848	where are restaurants that have over one rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
S5000004849	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004850	search for review having 4 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000004851	retrieve the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004852	which are the review with date published later than DURATION_0 after this week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= start_of unit:week + DURATION_0 => notify
S5000004853	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000004854	please enumerate restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004855	i need reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000004856	i want to find restaurants having rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000004857	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004858	i want review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000004859	i need restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000004860	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004861	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004862	show me what is the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004863	get restaurant with QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004864	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000004865	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004866	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000004867	find restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004868	i would like to find reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000004869	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004870	list restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000004871	list restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000004872	i would like to search for restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004873	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004874	search for restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004875	find restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004876	i would like to get restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000004877	i would like to retrieve restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000004878	i would like restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004879	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004880	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004881	where is the restaurants that have one review .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 ) => notify
S5000004882	enumerate restaurants which have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000004883	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004884	i want restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004885	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000004886	i need to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004887	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004888	get restaurant having less review count than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000004889	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000004890	find restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000004891	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004892	i want to find reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000004893	get restaurant having more rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000004894	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004895	how far are the restaurants which has the minimum review count from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000004896	find restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004897	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000004898	get restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000004899	what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004900	show me what 's the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004901	find restaurants with over 9 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000004902	i would like to search for reviews that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000004903	get reviews that have rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000004904	i need to find restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000004905	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000004906	where is the restaurant having over 5 review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 ) => notify
S5000004907	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004908	which are reviews having sooner date published than DURATION_0 before next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:mon - DURATION_0 => notify
S5000004909	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004910	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000004911	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004912	which restaurants have rating lower than 11 and is in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004913	get restaurants with over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000004914	where is restaurant that have review count lower than NUMBER_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
S5000004915	give me the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004916	get restaurant that have review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000004917	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000004918	retrieve restaurant which have over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000004919	what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004920	i need the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004921	i need restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000004922	what are the review having 10 or greater rating which have date published earlier than DURATION_0 after tomorrow ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:day + DURATION_0 and param:reviewRating.ratingValue:Number >= 10 => notify
S5000004923	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000004924	i want the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004925	i need review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000004926	i want to get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000004927	what are review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000004928	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000004929	get restaurant with no fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000004930	retrieve restaurant with review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000004931	i need to get restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004932	get reviews with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000004933	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000004934	please enumerate review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000004935	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004936	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004937	which restaurant get over 2 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000004938	i want to find restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004939	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000004940	i want to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000004941	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000004942	tell me what is the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004943	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000004944	what is the distance from work of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000004945	i want restaurant having rating 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000004946	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000004947	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000004948	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000004949	i need reviews which have smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000004950	i want restaurants having review count more than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000004951	give me the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004952	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004953	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000004954	tell me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004955	search for restaurants having QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000004956	i want to search for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004957	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004958	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004959	where are the restaurant which have more rating than 8	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 ) => notify
S5000004960	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004961	i am looking to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000004962	i need restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004963	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000004964	i am looking for restaurant with address here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004965	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004966	what are QUOTED_STRING_0 's review	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000004967	how near are the restaurants which has the lowest rating from where i 'm now .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000004968	retrieve review which have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000004969	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004970	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004971	i want to know the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004972	search restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000004973	i am looking to search restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004974	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004975	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000004976	where is the restaurants having no more than 7 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 ) => notify
S5000004977	tell me what is the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004978	search for restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000004979	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004980	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004981	get restaurant which have larger review count than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004982	i want restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000004983	please count the QUOTED_STRING_0 .	now => aggregate count of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000004984	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000004985	search for restaurants having more review count than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000004986	show me the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000004987	enumerate restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004988	i would like review having 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000004989	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000004990	i am looking for review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000004991	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000004992	retrieve restaurant without more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000004993	i am looking to retrieve restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000004994	i would like restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000004995	get restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000004996	what is both the street and summary of QUOTED_STRING_0	now => [ param:address.streetAddress:String , param:description:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000004997	where are restaurants which have lower review count than 1	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
S5000004998	i need to find restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000004999	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005000	what reviews have sooner date published than DURATION_0 after today	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= start_of unit:day + DURATION_0 => notify
S5000005001	i am looking for review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000005002	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005003	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005004	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005005	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005006	i am looking for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005007	i am looking to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005008	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005009	get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005010	please enumerate restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005011	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005012	find review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005013	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005014	enumerate restaurants having at most 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000005015	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005016	i am looking for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005017	tell me what 's the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005018	i need restaurant that have 3 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005019	i need restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005020	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005021	i would like to find review which have 9 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000005022	i am looking for reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005023	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005024	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005025	i would like restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005026	what is the distance from here to restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005027	i want restaurants which have over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005028	list restaurants that have 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005029	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005030	i need the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005031	what is the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005032	i would like to search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005033	i need to know the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005034	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005035	i need to retrieve restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005036	retrieve restaurants with QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005037	give me the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005038	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005039	retrieve restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005040	i want to find restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005041	i want to find restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005042	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005043	find restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005044	what are restaurants that have rating 10 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005045	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005046	which reviews have sooner date published than DURATION_0 before next year	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:year - DURATION_0 => notify
S5000005047	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005048	get restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005049	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005050	i am looking to find restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005051	list restaurant with lower review count than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005052	which are reviews for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000005053	get reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005054	show me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005055	find review having rating 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000005056	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005057	get restaurant in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005058	search the postal code of restaurant .	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005059	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005060	search restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005061	i am looking for the QUOTED_STRING_0 which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005062	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005063	i need to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005064	search review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005065	i need restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005066	please list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005067	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005068	find the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005069	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005070	i need review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005071	what are the QUOTED_STRING_0 that have larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000005072	please search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005073	i would like restaurants that have lower rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005074	i need to get restaurant that have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005075	i would like to search for reviews which have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000005076	enumerate restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000005077	search for restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005078	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005079	i am looking for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005080	i would like review having 6 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000005081	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005082	please enumerate restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005083	search restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005084	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005085	tell me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005086	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005087	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005088	what are restaurant within 1 mi from where i am now ?	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 1 unit:mi => notify
S5000005089	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005090	where is restaurants having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 ) => notify
S5000005091	what review have date published before DURATION_0 before last year ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= ( end_of unit:year - 1 unit:year ) - DURATION_0 => notify
S5000005092	i would like to retrieve review with rating 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 5 => notify
S5000005093	i want to search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005094	i am looking for reviews which have rating not less than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005095	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005096	i am looking for restaurant which have lower review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000005097	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005098	get restaurant having 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005099	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005100	find restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005101	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005102	i want to find restaurants having greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005103	list restaurant having more rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005104	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005105	what is the city of restaurants	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005106	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005107	search restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005108	i need review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005109	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005110	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000005111	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005112	i am looking to search restaurants which have no review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005113	retrieve the QUOTED_STRING_0 with the largest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005114	i would like restaurants having location LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005115	search for restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005116	i would like the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005117	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005118	what is the review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005119	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005120	tell me the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005121	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005122	tell me the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005123	get restaurant which have review count 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005124	i need restaurants with over one rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005125	i want restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005126	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005127	list restaurants near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005128	i need to search restaurants having rating zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005129	tell me what 's the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005130	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005131	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005132	i would like to search for restaurants near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005133	how far is the restaurants which has the highest rating to LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000005134	i need to get restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005135	show me what is the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005136	please list restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005137	i need the QUOTED_STRING_0 that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005138	i want to search for restaurant with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005139	find restaurants with over 9 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005140	please enumerate reviews having 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000005141	retrieve the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005142	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005143	i am looking to retrieve reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000005144	what restaurant get over 4 rating and smaller rating than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 and param:aggregateRating.ratingValue:Number >= 4 => notify
S5000005145	i need reviews which have smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005146	where is the nearest restaurants to me	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005147	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005148	search the postal code of restaurant	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005149	tell me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005150	find restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005151	find restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005152	tell me what is the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005153	get restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005154	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005155	i would like to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005156	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005157	retrieve restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005158	please enumerate restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005159	give me the street and summary of the restaurant most far away from LOCATION_0	now => [ param:address.streetAddress:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005160	where is restaurants that have zero or below rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 ) => notify
S5000005161	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005162	i need the QUOTED_STRING_0 that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005163	i would like reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005164	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005165	what is the rating of restaurants ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005166	i need restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005167	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005168	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005169	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000005170	which restaurants have rating 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000005171	please retrieve restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000005172	search restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005173	get restaurant that have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000005174	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005175	i want to search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005176	i want the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005177	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005178	list restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005179	search restaurant which have more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005180	i am looking for review that have 8 or above rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005181	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000005182	i would like the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005183	please list review having summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005184	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005185	i need to search restaurant which have lower review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000005186	i want restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005187	where is the closest restaurants to here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005188	i would like to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005189	get the QUOTED_STRING_0 most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005190	i need to find review having rating at least 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005191	get restaurant having 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005192	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005193	get the QUOTED_STRING_0 which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005194	what is the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005195	please search restaurant which have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005196	please search for reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000005197	i would like the QUOTED_STRING_0 that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005198	i want restaurants that have rating not less than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005199	how close are the restaurant which has the highest review count .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000005200	i need restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005201	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005202	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005203	i am looking for restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005204	search for restaurants having QUOTED_STRING_0 in the postal code .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000005205	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005206	get restaurant in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005207	i need to find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005208	i need the most far away QUOTED_STRING_0 from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005209	find restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005210	please enumerate restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005211	get restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005212	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005213	search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000005214	please list restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005215	i want to get restaurants that have 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005216	what restaurants have higher rating than 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005217	i want reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000005218	search the QUOTED_STRING_0 which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005219	what is the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005220	what are the review having larger rating than NUMBER_0 which have date published later than DURATION_0 before last week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= ( start_of unit:week - 1 unit:week ) - DURATION_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000005221	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000005222	get restaurant with description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005223	what are QUOTED_STRING_0 that have review count equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000005224	i am looking to retrieve review with rating 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000005225	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005226	i need reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000005227	which are restaurants with QUOTED_STRING_0 as summary ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005228	i want to retrieve restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005229	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005230	i need restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005231	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005232	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005233	i would like to search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005234	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005235	which reviews have 7 or less rating and QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= 7 => notify
S5000005236	i would like restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005237	i want to know the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005238	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005239	show me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005240	which QUOTED_STRING_0 has the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005241	how close are the restaurant which has the highest review count .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000005242	list restaurant with smaller review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005243	what is the rating of restaurants ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005244	what are reviews which have sooner date published than DURATION_0 after tomorrow	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:day + DURATION_0 => notify
S5000005245	i would like to know the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005246	please list restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005247	i want to get reviews which have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005248	search reviews without rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000005249	i would like to get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005250	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005251	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005252	i want to search for review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005253	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005254	show me what is the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000005255	i would like to know the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005256	find reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000005257	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005258	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005259	where is the nearest restaurant to LOCATION_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005260	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005261	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005262	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005263	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005264	i need to find review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005265	i need to retrieve restaurant which have review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005266	please search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005267	get restaurant with rating 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005268	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005269	i would like restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000005270	search restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000005271	i want restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005272	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005273	i need restaurant that have 3 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005274	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005275	i am looking to search review with rating smaller than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000005276	i am looking for restaurants with 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005277	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005278	i would like to search for reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000005279	tell me what is the street of restaurant .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005280	what restaurants get review count not more than 12 and is in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005281	list restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000005282	please enumerate restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005283	what are restaurant that have the postal code containing either QUOTED_STRING_0 or QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String in_array~ [ QUOTED_STRING_0 , QUOTED_STRING_1 ] => notify
S5000005284	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005285	search for reviews having smaller rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000005286	i need reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000005287	i am looking for reviews without rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000005288	i would like to search for restaurants near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005289	what is the telephone of restaurant ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005290	i am looking for the distance from here of restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005291	i want to find restaurants having greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005292	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000005293	enumerate restaurant having less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000005294	please enumerate restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005295	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005296	i would like restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005297	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000005298	get restaurants with over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005299	i am looking to search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005300	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005301	which QUOTED_STRING_0 gets the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005302	search review which have 9 or greater rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000005303	i am looking to search restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005304	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005305	list restaurants that have review count 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005306	i am looking to search restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005307	tell me what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005308	i am looking to get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005309	i would like to know the distance to restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005310	i need the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005311	retrieve restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005312	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005313	i want to search restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005314	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005315	i need restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005316	find the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005317	get restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000005318	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005319	enumerate restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005320	find restaurant with over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005321	retrieve restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005322	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005323	i would like the city of restaurant	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005324	i would like reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000005325	please retrieve restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005326	i need to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005327	i would like reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000005328	search for restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005329	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005330	i would like to retrieve review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005331	get the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005332	get restaurants that have no rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005333	please list restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005334	i need restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005335	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005336	where is the restaurants closest to where i am now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005337	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000005338	what are restaurant that have over zero rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005339	i would like review which have date published DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == DATE_0 => notify
S5000005340	i want the QUOTED_STRING_0 which is farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005341	where are restaurants that have over 5 review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 ) => notify
S5000005342	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005343	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005344	retrieve restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005345	i am looking for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005346	i want to search for restaurant that have over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005347	tell me what 's the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005348	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005349	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005350	i need restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005351	what are restaurant with rating lower than 11 and rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 11 and param:aggregateRating.ratingValue:Number >= 7 => notify
S5000005352	tell me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005353	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005354	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005355	i would like review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005356	which are the review with rating equal to 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000005357	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005358	i am looking for the QUOTED_STRING_0 most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005359	tell me the summary of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005360	i need the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005361	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000005362	what QUOTED_STRING_0 has the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005363	what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005364	show me what is the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005365	i want to search for restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005366	show me what is the author of reviews .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000005367	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005368	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005369	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005370	i want restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005371	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005372	find restaurants which have fewer than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000005373	get review having 4 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000005374	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005375	i would like the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005376	i would like the postal code and summary of the farthest restaurant .	now => [ param:address.postalCode:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005377	find restaurants having at least 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000005378	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005379	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005380	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005381	i would like to search for restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005382	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005383	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005384	i need restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005385	i am looking to find restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005386	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005387	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005388	i need reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005389	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005390	get restaurants which have lower rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000005391	search for restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005392	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005393	search for review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000005394	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000005395	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005396	i need to get restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000005397	i would like the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005398	where are restaurant which have 6 or less review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 ) => notify
S5000005399	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000005400	i need to get restaurant which have over 7 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 => notify
S5000005401	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005402	i want to search for restaurants that have over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005403	search for the QUOTED_STRING_0 which is closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005404	show me what is the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005405	find review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000005406	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005407	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005408	give me the street and summary of the restaurant most far away from LOCATION_0	now => [ param:address.streetAddress:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005409	where is the closest restaurant to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005410	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005411	please enumerate restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005412	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005413	i need restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005414	what is the distance from work of restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005415	i want review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005416	search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005417	get restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005418	what restaurant have lower review count than 9 and rating 10 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 and param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005419	i need to retrieve reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000005420	i am looking to get restaurant having cuisine including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005421	i am looking to find restaurant with review count 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000005422	tell me what 's the distance of restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005423	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005424	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005425	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005426	list restaurants near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005427	i would like to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005428	search review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005429	i want to find restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005430	i want reviews that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005431	i am looking to get reviews which have smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005432	find review with greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005433	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005434	search for reviews having smaller rating than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000005435	i want review that have over 5 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000005436	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005437	where is the nearest restaurants	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005438	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005439	which restaurant get over 2 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005440	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005441	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005442	which are the restaurants around work having telephone equal to PHONE_NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000005443	what QUOTED_STRING_0 have rating equal to 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000005444	i want to get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005445	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005446	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005447	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005448	get restaurants with 0 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005449	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005450	search for restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005451	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005452	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000005453	which are the restaurants that have cuisine being QUOTED_STRING_0 and have NUMBER_0 or higher rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005454	tell me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005455	i want to search for review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005456	i need to search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005457	which is the QUOTED_STRING_0 which has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005458	which are restaurants near where i 'm now that have over 10 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 10 and param:geo:Location == location:current_location => notify
S5000005459	retrieve restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005460	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005461	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005462	i would like restaurant that have description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005463	where is restaurants that have zero or below rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 ) => notify
S5000005464	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005465	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005466	i am looking for the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005467	get restaurants that have smaller rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 => notify
S5000005468	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005469	where is the restaurants which has the lowest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000005470	i would like to get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005471	please enumerate restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005472	where is the restaurant with the fewest reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000005473	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005474	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005475	i want to find restaurants which have 6 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005476	i would like to search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005477	i would like restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005478	get restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005479	search the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005480	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005481	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000005482	find restaurants that have review count 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005483	get restaurant that have 3 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000005484	i need to get restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005485	what are reviews with date published after DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:mon + DURATION_0 => notify
S5000005486	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005487	i would like restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005488	search restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005489	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005490	i want to get restaurant that have location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005491	which are the restaurant which have 10 or less rating , with address where i 'm now ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 and param:geo:Location == location:current_location => notify
S5000005492	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005493	retrieve restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005494	search for restaurants which have no review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005495	i need to find restaurant which have telephone PHONE_NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000005496	i need to get restaurant which have over 7 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 => notify
S5000005497	get restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005498	get restaurant in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005499	i need to know the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005500	which are the restaurants with rating 12 and 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 and param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005501	i want review having 10 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 10 => notify
S5000005502	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005503	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005504	i need restaurants that have rating lower than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005505	what QUOTED_STRING_0 gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005506	retrieve restaurant with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005507	what are the restaurants which have summary QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005508	what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005509	show me what 's the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005510	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005511	i would like restaurant that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005512	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005513	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005514	search for restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005515	retrieve restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005516	what restaurant get rating 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005517	i would like to search for review which have rating one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000005518	get reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005519	i am looking for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005520	i want restaurant that have review count 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000005521	i would like to search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005522	what is the address and cuisine of the restaurants with the highest review count ?	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000005523	retrieve restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005524	tell me what is the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005525	enumerate reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005526	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005527	search reviews having smaller rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000005528	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005529	find restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005530	list restaurant with smaller review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005531	what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005532	get restaurant having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005533	i need to know the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005534	what QUOTED_STRING_0 gets the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005535	search review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005536	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005537	find restaurant with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005538	i am looking to search for restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005539	i need to search for restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000005540	tell me what is the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005541	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005542	which reviews get rating 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000005543	where is the restaurants with rating 7	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 ) => notify
S5000005544	i want restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005545	where is the nearest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005546	i want restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000005547	i would like restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005548	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000005549	which restaurant get 6 or more review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005550	i am looking for restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005551	get reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000005552	what is the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005553	search the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005554	search for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005555	where are the restaurants with smaller rating than 4	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 ) => notify
S5000005556	tell me what is the distance from LOCATION_0 of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005557	show me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005558	what is the telephone of restaurant ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005559	what are restaurants around here which have 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 and param:geo:Location == location:current_location => notify
S5000005560	please search reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000005561	i would like the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005562	which restaurants get over 2 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005563	retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005564	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005565	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005566	please enumerate restaurant with NUMBER_0 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005567	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000005568	i am looking for the QUOTED_STRING_0 most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005569	i need restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005570	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000005571	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005572	find restaurant with over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005573	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005574	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005575	i need to find review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005576	which QUOTED_STRING_0 has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005577	what QUOTED_STRING_0 gets the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005578	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005579	i am looking for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005580	what is the description of restaurant ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005581	i am looking for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005582	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005583	what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005584	please list review having summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005585	i am looking for restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005586	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005587	i need restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005588	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005589	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005590	i need the QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005591	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005592	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005593	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005594	where are the restaurants with over 2 rating	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 2 ) => notify
S5000005595	retrieve restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005596	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005597	what are the restaurants which have QUOTED_STRING_0 in its summary ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005598	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005599	retrieve restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005600	search for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005601	i need the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005602	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005603	i need to get restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000005604	i am looking to find restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000005605	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005606	what is the city of restaurants	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005607	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005608	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005609	i want the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005610	i am looking for restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005611	i need to get restaurant which have over 7 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 => notify
S5000005612	search restaurant that have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005613	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005614	please enumerate restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005615	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005616	retrieve restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005617	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005618	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000005619	which are the restaurants with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005620	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005621	retrieve restaurant with more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005622	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005623	retrieve restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005624	i am looking for the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005625	search for restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000005626	what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005627	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005628	search for reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005629	retrieve restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005630	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005631	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005632	i need restaurants that do n't have rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005633	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005634	what are reviews with date published after DURATION_0 after next month ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:mon + DURATION_0 => notify
S5000005635	search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005636	what are restaurants within 12 miles radius of where i am now	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 12 unit:mi => notify
S5000005637	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005638	i want the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005639	i need to find restaurant with 1 review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000005640	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005641	i would like restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005642	what is the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005643	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005644	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005645	show me what is the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005646	i want to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005647	find reviews with over NUMBER_0 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000005648	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005649	i am looking for the QUOTED_STRING_0 most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005650	i want to search for restaurant that have 3 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005651	tell me what 's the cuisine of restaurants .	now => [ param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005652	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005653	i would like restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005654	what is the price range of restaurants ?	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005655	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005656	how many reviews are there in the nearest restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000005657	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005658	please list restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005659	i need the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005660	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005661	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005662	i am looking for the QUOTED_STRING_0 most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005663	i would like to get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005664	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005665	i am looking to search restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005666	which are the restaurants around me ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005667	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005668	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005669	i need restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005670	i would like to search for restaurants having 6 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005671	search for restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005672	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005673	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005674	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005675	i would like restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005676	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005677	tell me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005678	what restaurant get review count more than 8 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005679	i need to search restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005680	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005681	i am looking to retrieve reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000005682	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005683	retrieve restaurant with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005684	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005685	find the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005686	get restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005687	please get restaurants with no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005688	please list restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005689	search for restaurants with 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005690	please search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005691	get restaurants that have no rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005692	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005693	get restaurant which have review count 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005694	tell me what is the street of restaurant	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005695	find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005696	get restaurants having over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005697	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005698	i am looking to find restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005699	enumerate restaurant having less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000005700	i need to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005701	i am looking for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005702	i would like restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005703	get restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005704	i am looking for review having QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005705	i would like the QUOTED_STRING_0 most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005706	i would like review which have date published DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == DATE_0 => notify
S5000005707	i need to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005708	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005709	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005710	what is the country of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005711	what is the review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005712	search for restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005713	i would like restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005714	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005715	i want to find restaurants having greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005716	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005717	search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005718	where is restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000005719	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005720	i am looking to find review which have date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000005721	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005722	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005723	search the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005724	i am looking for restaurant around here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005725	search review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005726	search restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005727	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005728	retrieve restaurant with review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005729	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005730	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005731	where are restaurant that have cuisine QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
S5000005732	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005733	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005734	search for restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005735	tell me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005736	get restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005737	search the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005738	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005739	i want the QUOTED_STRING_0 which is farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005740	find restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005741	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005742	search for restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005743	search the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005744	i need restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005745	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005746	what are QUOTED_STRING_0 that have review count 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000005747	please get restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005748	i want to get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005749	search for restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005750	i am looking for restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005751	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005752	what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005753	i need the closest QUOTED_STRING_0 to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005754	search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000005755	show me what 's the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005756	i would like restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005757	i want to know the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005758	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005759	i would like to search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005760	i would like to get restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005761	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005762	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000005763	i want to search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005764	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005765	tell me what 's the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005766	find the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005767	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005768	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005769	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005770	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005771	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005772	search restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005773	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005774	what restaurant have 3 or less review count and 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 6 and param:aggregateRating.reviewCount:Number <= 3 => notify
S5000005775	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005776	tell me the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005777	i want review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005778	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005779	what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005780	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005781	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000005782	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005783	get the QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005784	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005785	show me what 's the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005786	i need to find restaurant with 1 review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000005787	where are restaurants that have rating greater than 9	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 ) => notify
S5000005788	retrieve restaurants which have review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005789	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005790	i want the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005791	tell me what is the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005792	i would like to know the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005793	get restaurants which have lower rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000005794	get restaurants which have lower rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000005795	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005796	list review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005797	which are the reviews having one or below rating that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= 1 => notify
S5000005798	please enumerate restaurants having over 11 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005799	i want review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000005800	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005801	where is the restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000005802	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005803	i would like review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005804	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005805	i need to search for restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000005806	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005807	which is the farthest QUOTED_STRING_0 from LOCATION_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005808	i need restaurants which have zero or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005809	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005810	i want to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005811	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000005812	which are restaurant having one or less review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005813	list review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005814	search the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005815	i want restaurant that have review count 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000005816	i want restaurants that have 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005817	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000005818	what is the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005819	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005820	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005821	which are restaurant which have review count not more than 12 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005822	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005823	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005824	search for restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000005825	i would like restaurant with lower review count than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005826	how many reviews does QUOTED_STRING_0 have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000005827	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005828	i need to find review having rating at least 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000005829	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005830	i need to get restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005831	i am looking to retrieve restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005832	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005833	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005834	i need to search for review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005835	i am looking for the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005836	i would like restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005837	i want restaurants which have review count NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000005838	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005839	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005840	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005841	retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005842	which reviews get rating 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000005843	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005844	how close are the restaurant with the lowest review count .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000005845	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005846	what are restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005847	please enumerate restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005848	get restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005849	show me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005850	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005851	find restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000005852	i want restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005853	show me what is the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005854	tell me what is the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005855	where are restaurants which have no review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
S5000005856	get restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005857	i would like to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005858	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005859	tell me what is the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005860	find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005861	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000005862	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005863	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005864	find restaurant with over 6 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005865	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005866	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005867	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005868	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005869	search for restaurants having more review count than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005870	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005871	find restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005872	i would like restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005873	i would like restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005874	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000005875	tell me what 's the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005876	i am looking for the QUOTED_STRING_0 most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005877	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005878	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005879	i am looking for restaurant around here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005880	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000005881	retrieve the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005882	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005883	where is restaurant that have rating 0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 ) => notify
S5000005884	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005885	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005886	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005887	please list restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005888	i need to retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005889	get restaurant with no fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000005890	i am looking to find restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000005891	tell me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005892	search for restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005893	tell me what 's the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005894	find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005895	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005896	i am looking for the QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005897	i need to retrieve restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000005898	list restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005899	what QUOTED_STRING_0 have rating equal to 5 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000005900	i want restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000005901	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005902	i need to find restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005903	show me what 's the summary of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005904	i want restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005905	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005906	where are restaurants that have review count 0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
S5000005907	list restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005908	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005909	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005910	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005911	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005912	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005913	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005914	please search reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005915	find the city of restaurant	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005916	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005917	i would like restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005918	i would like to search for review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000005919	get restaurants which have lower rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000005920	i need restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005921	what are the review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000005922	get restaurants having fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 10 => notify
S5000005923	which restaurants have review count 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005924	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005925	how many reviews in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000005926	i need restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005927	get restaurant with QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005928	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005929	i am looking for reviews with zero rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000005930	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005931	give me the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005932	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005933	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005934	i am looking to retrieve review with rating 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000005935	i need restaurant with smaller review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000005936	i need restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005937	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005938	what is the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005939	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000005940	i want restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000005941	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005942	i am looking to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005943	show me what is the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005944	i am looking for the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005945	tell me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005946	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005947	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005948	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005949	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000005950	i want restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005951	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000005952	list restaurant having more rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005953	get restaurants which do n't have review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005954	i want to get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000005955	i am looking for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005956	i need to get restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005957	i want review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000005958	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005959	search restaurant having cuisine including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005960	i am looking to get reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000005961	where are restaurants with QUOTED_STRING_0 in its description	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000005962	which restaurant serves QUOTED_STRING_0 cuisine and have location home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005963	search for restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005964	i am looking for restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005965	get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000005966	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005967	i am looking for review that have 8 or above rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000005968	i want restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005969	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005970	i want to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005971	show me what is the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005972	please list restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000005973	i want to find restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005974	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000005975	i need to get restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005976	retrieve the QUOTED_STRING_0 which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005977	i would like to search for reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000005978	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005979	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005980	i would like to know the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005981	which are the restaurant which have 10 or less rating , with address where i 'm now ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 and param:geo:Location == location:current_location => notify
S5000005982	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005983	what are reviews of QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000005984	i need to retrieve review with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000005985	i would like reviews that have rating 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000005986	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005987	i am looking to search for restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005988	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005989	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005990	i am looking for the distance of restaurant from where i am now	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000005991	which QUOTED_STRING_0 gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005992	please search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000005993	which restaurants have review count 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000005994	get restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005995	i would like to search for restaurants near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000005996	what restaurant have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005997	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000005998	enumerate restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000005999	enumerate restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006000	please search for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006001	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006002	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006003	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006004	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006005	i would like the QUOTED_STRING_0 nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006006	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000006007	please list reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006008	get reviews having 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006009	i need the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006010	i want to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006011	i would like the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006012	retrieve restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006013	i am looking to retrieve reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006014	which are restaurant here in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000006015	i want to search for restaurant which have QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000006016	i am looking to search for review that have smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006017	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006018	get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006019	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006020	i need to retrieve review with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006021	i am looking for reviews which have rating not less than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006022	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006023	i need reviews which have smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000006024	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006025	list review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006026	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006027	i am looking to search for review that have smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006028	i need restaurants that have rating lower than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006029	tell me what 's the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006030	what is the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006031	enumerate reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006032	i need to search for restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006033	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006034	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006035	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006036	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006037	get the most far away QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006038	i need to search restaurant which have lower review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000006039	find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000006040	i want restaurant that have review count 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000006041	i want to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006042	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006043	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006044	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006045	i would like review having 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000006046	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006047	i need restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006048	i am looking for restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006049	i want to search restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006050	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006051	get restaurant having 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006052	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006053	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006054	retrieve restaurant with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006055	what are reviews with over NUMBER_0 rating and lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000006056	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006057	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006058	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006059	find reviews with over NUMBER_0 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000006060	tell me what 's the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006061	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006062	please enumerate restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006063	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006064	i want to search restaurant having rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006065	i need to search for restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006066	i am looking for restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006067	i am looking to get restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006068	i need to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006069	where is the nearest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006070	which is the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006071	tell me what is the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006072	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006073	please find restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006074	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006075	which restaurants have 1 or higher rating and rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006076	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006077	i am looking for restaurant around here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006078	find restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000006079	please retrieve review with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006080	which are restaurant here in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000006081	which restaurant have review count 5 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006082	i want to find restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006083	which reviews have rating lower than 7 and date published DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number <= 7 => notify
S5000006084	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006085	i want to search for restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006086	tell me what is the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006087	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006088	please retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006089	i need restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006090	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006091	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006092	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006093	show me what is the distance to restaurant from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006094	i want to search for restaurant with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006095	get restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000006096	i would like the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006097	show me what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006098	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006099	get restaurant having 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006100	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006101	what restaurants have 3 reviews ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 3 => notify
S5000006102	what is the telephone of restaurant ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006103	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006104	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006105	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006106	retrieve restaurant with at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000006107	i am looking for reviews with zero rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006108	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006109	list restaurant with lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006110	i am looking for the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006111	i need to find restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006112	search restaurant which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 4 => notify
S5000006113	i am looking for restaurants which have review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006114	i need restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006115	i want restaurants which have review count NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006116	i want restaurant that have review count 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000006117	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006118	search for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006119	enumerate restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006120	where are the restaurants which have lower review count than 0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 ) => notify
S5000006121	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006122	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006123	retrieve restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006124	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006125	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006126	retrieve restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006127	i need to search for restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006128	what are the restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006129	i need to find restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006130	search for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000006131	search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006132	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006133	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006134	i am looking to search for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006135	i would like review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006136	i would like restaurant having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000006137	i would like restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006138	i want to search for review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000006139	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006140	i am looking for restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006141	where is the closest restaurant to me	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006142	i am looking to search for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006143	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000006144	list review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006145	enumerate restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006146	i need the QUOTED_STRING_0 that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006147	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006148	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006149	get restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006150	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006151	please enumerate restaurants that have lower rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006152	i want restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000006153	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006154	where are restaurant that have rating 0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 ) => notify
S5000006155	i need the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006156	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006157	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006158	show me what 's the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006159	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006160	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006161	tell me what 's the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006162	get review having 4 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000006163	please retrieve restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006164	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006165	get reviews which have over 1 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006166	what restaurant get description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006167	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006168	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000006169	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006170	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000006171	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006172	search the QUOTED_STRING_0 most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006173	find the state and address of the restaurant that is nearest to work .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006174	i would like the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006175	i want restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006176	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006177	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006178	get restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000006179	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006180	i want restaurants that have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006181	i would like to search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006182	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006183	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006184	retrieve restaurants having fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 10 => notify
S5000006185	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006186	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006187	please list review which have rating one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000006188	i want review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000006189	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006190	please get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006191	i want to retrieve review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000006192	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006193	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006194	what are reviews of QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006195	i am looking to retrieve review with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000006196	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006197	i want to search restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006198	i want restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006199	show me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006200	find restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006201	i would like restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006202	which QUOTED_STRING_0 has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006203	tell me what 's the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006204	i need to retrieve reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000006205	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006206	which QUOTED_STRING_0 gets the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006207	i need the closest QUOTED_STRING_0 to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006208	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006209	list restaurant with lower review count than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006210	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006211	retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006212	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006213	get restaurant with no fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000006214	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006215	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006216	get restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006217	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006218	what are QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006219	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006220	search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006221	i would like review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000006222	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006223	search review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006224	i would like the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006225	what are reviews that have rating 5 and have date published DURATION_0 after this month ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == start_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number == 5 => notify
S5000006226	search for the QUOTED_STRING_0 which is closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006227	enumerate restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006228	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006229	get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006230	i need restaurant with rating 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006231	i want the QUOTED_STRING_0 nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006232	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006233	i want to retrieve restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006234	i need to get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006235	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006236	get the QUOTED_STRING_0 that is nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006237	please list review having summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006238	i would like the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006239	get restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006240	i need restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006241	i would like review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006242	i am looking to find review which have date published after DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000006243	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006244	i am looking to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006245	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006246	search the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006247	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006248	show me the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006249	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006250	i am looking to search restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000006251	i am looking to search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006252	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006253	i would like to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006254	find restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006255	tell me the summary of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006256	show me what 's the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006257	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006258	i am looking for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006259	please get restaurant having location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006260	i am looking to search for restaurants with no more than 1 review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 1 => notify
S5000006261	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006262	please search for review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000006263	i need restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006264	find the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006265	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006266	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006267	retrieve reviews that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006268	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006269	i need to retrieve reviews which have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006270	what is the price range and address of the most far away restaurant	now => [ param:geo:Location , param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006271	show me what 's the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006272	i need to search for restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006273	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006274	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006275	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000006276	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006277	get restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006278	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006279	get restaurant without fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000006280	which restaurant get lower review count than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006281	which are restaurants in here which have less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 and param:geo:Location == location:current_location => notify
S5000006282	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006283	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006284	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006285	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000006286	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006287	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006288	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006289	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006290	what are the reviews for QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006291	get restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006292	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006293	tell me what is the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006294	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006295	i want the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006296	please search for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006297	i would like restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006298	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006299	i want to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006300	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006301	search for restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006302	i need to get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006303	i am looking for restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006304	i want the QUOTED_STRING_0 nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006305	i am looking to search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006306	count the QUOTED_STRING_0 .	now => aggregate count of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006307	i would like restaurants which have over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006308	where are the restaurants with 9 or less review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 ) => notify
S5000006309	search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006310	how far are the restaurants which has the minimum review count from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000006311	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006312	i am looking for restaurant nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006313	i would like to know the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006314	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006315	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006316	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006317	please enumerate restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006318	give me the street and summary of the restaurant most far away from LOCATION_0	now => [ param:address.streetAddress:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006319	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006320	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006321	i would like restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000006322	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006323	i would like the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006324	what restaurants serves QUOTED_STRING_0 cuisine and get 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006325	i want restaurant that have review count not more than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006326	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006327	i would like reviews which have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000006328	find the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006329	search for restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006330	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006331	i want restaurant which have 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006332	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006333	i would like to know the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006334	i would like to know the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006335	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006336	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006337	find the city of restaurant	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006338	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000006339	what QUOTED_STRING_0 gets the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006340	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006341	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006342	get restaurant without fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000006343	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006344	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006345	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006346	i would like restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006347	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006348	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006349	i am looking for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006350	i want to know the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006351	i want restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006352	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006353	i need restaurants having review count at least 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006354	retrieve restaurants having fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 10 => notify
S5000006355	what are review with QUOTED_STRING_0 as description and date published earlier than DURATION_0 after this month ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= start_of unit:mon + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000006356	i need to retrieve restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006357	which restaurant get 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006358	search the QUOTED_STRING_0 which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006359	please get restaurant having location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006360	i would like to search for review which have rating one .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000006361	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006362	where is the restaurant which have summary QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000006363	find restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000006364	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006365	show me what 's the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006366	i want restaurant which have 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006367	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006368	get restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006369	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006370	list restaurants that have review count 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006371	i want to find reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006372	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006373	search review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006374	i want restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006375	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006376	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006377	please get restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006378	i would like restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000006379	i want to find restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006380	search for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006381	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006382	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006383	search for restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006384	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006385	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000006386	what restaurant have cuisine being QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006387	i need restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006388	i would like the postal code and summary of the farthest restaurant .	now => [ param:address.postalCode:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006389	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006390	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006391	i would like restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006392	i am looking for the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006393	i am looking for the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006394	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000006395	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006396	retrieve restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006397	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006398	please search for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006399	i need to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006400	enumerate restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000006401	give me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006402	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006403	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006404	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006405	i want restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006406	search for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006407	i need restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006408	search for restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006409	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006410	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000006411	tell me what is the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006412	show me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006413	search restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006414	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000006415	i would like to search for reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006416	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006417	where is the restaurants that is farthest from where i 'm now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006418	find restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006419	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006420	what is the city of restaurants ?	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006421	which are the QUOTED_STRING_0 that have review count not more than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006422	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000006423	please list restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006424	what is the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006425	i want to search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006426	where is the most far away restaurant .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006427	tell me what 's the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006428	get restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006429	i would like to search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006430	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006431	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006432	show me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006433	search the QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006434	find review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000006435	i want to search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006436	i want to retrieve review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000006437	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006438	i want to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006439	i want review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000006440	please search for reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000006441	i need to get restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000006442	what are restaurant having rating not less than 7 and 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 and param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006443	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006444	i need restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006445	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006446	list restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006447	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006448	which are the restaurants around work ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006449	what restaurants have higher rating than 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006450	retrieve the QUOTED_STRING_0 most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006451	i want reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000006452	i want restaurant which have telephone PHONE_NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000006453	i am looking to search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006454	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006455	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006456	i want the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006457	find review with greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000006458	i am looking to search for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006459	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006460	i want to search for restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006461	get restaurant with lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006462	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006463	i need restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006464	i need to find review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006465	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000006466	i am looking to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000006467	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006468	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006469	where is the nearest restaurant to LOCATION_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006470	which restaurant have review count 5 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006471	i need restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006472	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006473	find restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006474	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006475	which are the restaurants with rating 12 and 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 and param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006476	i would like restaurants having summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006477	i want to search restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006478	please find reviews which have later date published than DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000006479	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006480	i would like to get restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006481	get restaurants having less rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006482	i am looking to find review which have date published after DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000006483	i am looking for the closest QUOTED_STRING_0 to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006484	show me what is the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006485	i want to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006486	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006487	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006488	please list restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006489	i would like restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006490	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000006491	show me what is the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006492	get restaurant having 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006493	what are reviews of QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006494	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006495	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006496	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006497	i need to get restaurant that have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006498	i want to find restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006499	i would like restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006500	please find restaurants that have 12 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 12 => notify
S5000006501	i am looking to search restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000006502	which restaurants have over one rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006503	what are the restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006504	i want to get review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006505	which are the restaurants that have review count 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006506	retrieve restaurant that have review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006507	where is the restaurants that have rating 2	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 ) => notify
S5000006508	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006509	where are restaurant which have 9 or less review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 ) => notify
S5000006510	show me the rating of reviews .	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006511	where are restaurants with 0 or less review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 ) => notify
S5000006512	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006513	get restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006514	what restaurant get postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 and is in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000006515	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006516	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000006517	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000006518	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006519	i need restaurant having rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006520	tell me what 's the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006521	search restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006522	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006523	i would like restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006524	list restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006525	i need restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006526	tell me what 's the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006527	get restaurants having more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000006528	please list restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000006529	i need to search for review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006530	get restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006531	show me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006532	get review having 4 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000006533	i need to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006534	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006535	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006536	please search reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006537	what is the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006538	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006539	i am looking to retrieve reviews that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006540	i want to search for restaurant that have over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006541	i would like to get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006542	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006543	show me what 's the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006544	please list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006545	get review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000006546	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006547	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006548	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006549	i need the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006550	i am looking for the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006551	list review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006552	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006553	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006554	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006555	i want reviews having 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006556	find restaurant with over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006557	give me the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006558	i want to get restaurants that have 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006559	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006560	tell me the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006561	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006562	tell me what 's the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006563	list restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006564	please list restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006565	i want review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000006566	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006567	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006568	find restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006569	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006570	tell me what 's the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006571	list restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006572	show me what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006573	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006574	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000006575	how near is the restaurants most far away from work from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000006576	search restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000006577	which are restaurants around work ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006578	i need to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006579	retrieve restaurants with rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006580	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006581	what is the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006582	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006583	i would like the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006584	i am looking to search for review that have smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006585	i want to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006586	tell me what 's the date published of reviews .	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006587	i want restaurants which have review count NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006588	i want restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006589	show me what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006590	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006591	which are restaurant here in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000006592	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006593	list restaurants near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006594	show me what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006595	i need restaurant that have 3 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006596	search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000006597	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006598	please enumerate restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006599	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006600	i would like restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006601	i want restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006602	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006603	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006604	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000006605	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006606	where is the restaurant with review count not less than 5 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 ) => notify
S5000006607	get reviews that have rating 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 5 => notify
S5000006608	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006609	i want to search for restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006610	i am looking for the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006611	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000006612	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006613	what is the distance from home of restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006614	i want restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006615	find restaurants having at least 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000006616	search restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006617	please search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000006618	i would like to know the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006619	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006620	please list restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000006621	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006622	please get restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006623	i would like restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006624	which are the restaurant which have no more than NUMBER_0 reviews and have address here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
S5000006625	i want to get restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006626	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006627	i need restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006628	which restaurant have QUOTED_STRING_0 in its description	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006629	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000006630	please get restaurant that have 3 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000006631	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006632	give me the description and telephone of the restaurants closest to here	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006633	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006634	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006635	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006636	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006637	i want restaurant with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006638	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006639	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006640	i want to get reviews having QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006641	what restaurant get review count more than 8 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006642	find restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006643	get reviews which have over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006644	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006645	how many reviews are there in QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006646	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006647	i need to find restaurant which have 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006648	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006649	i need the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006650	what are reviews with date published after DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:mon + DURATION_0 => notify
S5000006651	show me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006652	search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006653	retrieve restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006654	show me what 's the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006655	what restaurants get summary containing QUOTED_STRING_0 and are in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000006656	i want restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006657	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006658	i want restaurants that have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006659	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006660	tell me what 's the distance to restaurant from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006661	what is the distance to restaurant from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006662	i need restaurants with over one rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006663	which QUOTED_STRING_0 get location equal to where i 'm now ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006664	get restaurants having QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000006665	get restaurants having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000006666	i want the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006667	list restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006668	get restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006669	i want to search restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006670	list restaurant having one or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006671	i would like restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006672	i am looking to retrieve restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000006673	i need restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006674	tell me what 's the distance from LOCATION_0 of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006675	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006676	please retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006677	i want the closest QUOTED_STRING_0 to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006678	please list restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006679	i want restaurants that have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006680	enumerate restaurants which have more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000006681	i need the QUOTED_STRING_0 that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006682	i need restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006683	retrieve restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006684	i am looking for restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006685	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006686	i need to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006687	list restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006688	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006689	i need restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006690	get restaurants having at most 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000006691	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006692	which QUOTED_STRING_0 have NUMBER_0 or higher rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006693	what restaurant have smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006694	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006695	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006696	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006697	show me the price range and postal code of QUOTED_STRING_0	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006698	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006699	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006700	i would like to get restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006701	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006702	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006703	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006704	i need to get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006705	i would like to know the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006706	search for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006707	where is the restaurant with NUMBER_0 or above review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
S5000006708	find restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006709	where is the nearest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006710	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006711	i would like restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006712	show me what is the author of reviews	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000006713	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006714	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006715	where is restaurants with QUOTED_STRING_0 as summary	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000006716	which restaurants have zero or below rating and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006717	i would like restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006718	i would like restaurants that have lower rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006719	which QUOTED_STRING_0 has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006720	i need restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006721	i would like the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006722	tell me what is the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006723	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006724	tell me what 's the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006725	i need restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006726	what restaurant get more than 11 reviews and location work ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 and param:geo:Location == location:work => notify
S5000006727	tell me what is the distance of restaurants from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006728	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006729	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006730	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000006731	get restaurant having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000006732	i am looking for restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006733	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006734	get restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006735	i need to search for restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006736	get restaurant with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006737	tell me what 's the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006738	i would like the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006739	list restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006740	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006741	get restaurant with description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006742	get review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000006743	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006744	enumerate restaurant having less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000006745	search for restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006746	please search restaurant which have review count larger than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006747	enumerate restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006748	tell me what 's the distance from where i 'm now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006749	retrieve restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006750	find the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006751	get restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006752	search review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000006753	i need reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006754	i need to retrieve restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000006755	i would like restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006756	i need to search restaurant which have lower review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000006757	i would like to search for restaurants near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006758	tell me what 's the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006759	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006760	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006761	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006762	which are QUOTED_STRING_0 that have rating lower than 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006763	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006764	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006765	please enumerate restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006766	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006767	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006768	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006769	search restaurants which have lower review count than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006770	retrieve restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006771	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006772	i am looking to search restaurants which do not have review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006773	i would like to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006774	what review have QUOTED_STRING_0 in the description and date published DURATION_0 after the end of the week	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:week + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000006775	get review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000006776	i need to get restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006777	which are the QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000006778	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006779	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006780	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006781	please list restaurants which have QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006782	i need to search restaurants having rating zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006783	i need restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006784	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006785	get reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000006786	enumerate restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006787	i want restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006788	search review which have rating 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000006789	i am looking to search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006790	search for restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006791	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006792	what is the review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006793	get restaurants which have no review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006794	retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006795	please search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006796	please list restaurants having over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006797	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006798	find restaurants with over 9 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006799	get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000006800	i want to find reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006801	which restaurants have review count 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006802	i would like the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006803	which restaurants have 1 or higher rating and rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006804	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006805	i would like restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006806	i am looking for restaurant nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006807	find the most far away QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006808	what are the QUOTED_STRING_0 with review count at least 4 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006809	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006810	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006811	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006812	get restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006813	how close is QUOTED_STRING_0 to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
S5000006814	find restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006815	i am looking for restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006816	what is the distance from where i 'm now to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006817	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006818	i am looking to retrieve reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006819	enumerate restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006820	find restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006821	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006822	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006823	i am looking for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006824	i am looking to find review which have date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000006825	what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006826	get the QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006827	i would like the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006828	get restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006829	list restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006830	i want to get restaurants that have 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006831	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006832	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006833	what restaurant have review count not more than 9 and is in GENERIC_ENTITY_tt:country_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006834	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006835	what restaurants get description containing both QUOTED_STRING_0 and QUOTED_STRING_1 and serves QUOTED_STRING_2 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_2 => notify
S5000006836	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006837	i am looking to find restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006838	list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006839	i want to search restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006840	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006841	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006842	i am looking for restaurant which have review count at least 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006843	show me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006844	i want restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006845	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006846	list restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006847	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006848	get restaurant that have review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006849	find review having rating 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000006850	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006851	tell me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006852	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006853	please enumerate review having rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000006854	i would like restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006855	i am looking for the QUOTED_STRING_0 most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006856	what QUOTED_STRING_0 has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006857	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006858	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006859	search restaurants which have review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006860	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006861	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006862	please enumerate restaurant that have larger rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006863	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006864	show me what 's the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006865	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006866	i want to search for restaurants that have over 6 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006867	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000006868	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000006869	which restaurant get 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006870	i am looking to retrieve review with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000006871	i need restaurants that do n't have rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006872	i would like the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006873	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006874	tell me the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006875	i need to search restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006876	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006877	i want to know the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006878	i would like to know the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006879	i am looking to retrieve restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006880	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006881	i want to get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006882	what are QUOTED_STRING_0 with lower rating than 5 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000006883	i am looking to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006884	which are the restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006885	i want restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006886	get review with rating smaller than 5 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000006887	search for restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006888	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006889	search for restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006890	i need restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000006891	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006892	where are the restaurant with description QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000006893	please list restaurant having 2 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006894	i would like to search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000006895	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006896	i want to know the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006897	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000006898	get restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006899	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006900	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000006901	i want restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006902	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006903	i would like restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006904	retrieve restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000006905	please list review having summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006906	i would like restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006907	where is the restaurant closest to where i am now .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000006908	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006909	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000006910	i need to retrieve restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006911	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006912	i am looking for review that have 8 or above rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000006913	get restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000006914	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006915	show me what 's the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006916	i need restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006917	what restaurant get more than 11 reviews and location work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 and param:geo:Location == location:work => notify
S5000006918	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006919	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006920	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006921	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006922	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006923	tell me what 's the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006924	what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006925	show me the price range and postal code of QUOTED_STRING_0 .	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006926	i am looking for review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006927	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006928	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006929	which restaurant have 8 or above rating and are in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006930	i want to know the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006931	please enumerate restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006932	search restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006933	tell me what 's the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006934	what is the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006935	i want restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000006936	i would like to find restaurants having rating zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006937	list restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006938	what is the rating of restaurant ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006939	how many reviews are there in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006940	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006941	which are restaurants near where i 'm now that have over 10 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 10 and param:geo:Location == location:current_location => notify
S5000006942	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006943	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006944	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006945	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006946	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000006947	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006948	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006949	i need to search for review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006950	i would like restaurants which have over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006951	i am looking for restaurants which have review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006952	get restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006953	search restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006954	please enumerate restaurants with over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006955	i am looking for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006956	get restaurants which do n't have review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006957	i want review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000006958	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000006959	get restaurants having less rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006960	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006961	please get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006962	what are the restaurant which have 1 or above review count and have review count not more than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006963	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006964	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006965	i need restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006966	retrieve restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006967	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006968	get reviews which have over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000006969	i would like restaurant that have cuisine QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000006970	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000006971	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006972	i would like to know the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006973	what are restaurant which have 9 or less review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006974	which are restaurant here in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000006975	search restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006976	show me what 's the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006977	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006978	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006979	i am looking for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006980	i would like restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006981	list restaurants near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006982	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000006983	what reviews get summary containing QUOTED_STRING_0 and later date published than DURATION_0 after this year ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= start_of unit:year + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000006984	i want restaurant having rating 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006985	i would like restaurant which have review count 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000006986	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006987	search for review having QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006988	what is the distance from home of restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000006989	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000006990	i need the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006991	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000006992	i need restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000006993	i would like to search for reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000006994	i want to get review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006995	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000006996	i need restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006997	what are review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000006998	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006999	what restaurant have review count not more than 9 and is in GENERIC_ENTITY_tt:country_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007000	where are restaurants that have over one rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
S5000007001	i am looking for restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007002	what is the cuisine of restaurant	now => [ param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007003	tell me what 's the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007004	tell me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007005	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007006	where are restaurants which have lower review count than 1 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
S5000007007	enumerate restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007008	find restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007009	i would like to get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007010	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007011	please search restaurant that have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007012	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007013	search restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007014	i would like restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007015	please list restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007016	retrieve restaurant which have over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007017	list restaurant with lower review count than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007018	get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007019	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007020	i need to search restaurants having rating zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007021	i need to get restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007022	please search for restaurant which have review count at least 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007023	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007024	get reviews that have rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007025	get restaurant with higher rating than 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007026	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007027	get restaurant having rating not less than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007028	search for restaurants having QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007029	find restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007030	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007031	which is the QUOTED_STRING_0 with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007032	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007033	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007034	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007035	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007036	i need to retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007037	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007038	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007039	i would like restaurant which have review count 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000007040	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000007041	i would like the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007042	find restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007043	i would like restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007044	search restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007045	i want to search for review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000007046	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007047	i want restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007048	i want to search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007049	i want to find restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007050	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007051	tell me what 's the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007052	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007053	i need to get restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007054	what is the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007055	i need restaurant with description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007056	i need reviews that have greater rating than one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007057	get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007058	what QUOTED_STRING_0 gets the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007059	i want to find reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000007060	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007061	i would like restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007062	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007063	i am looking for restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007064	i need restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007065	i need the QUOTED_STRING_0 that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007066	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007067	i want reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007068	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007069	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000007070	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007071	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007072	what is the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007073	i would like restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007074	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007075	i am looking to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007076	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007077	please search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000007078	please get restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007079	i am looking for reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007080	how many reviews in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007081	get restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007082	search for restaurants having QUOTED_STRING_0 in the postal code .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007083	find restaurant which have 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007084	get the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007085	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007086	list reviews having rating less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
S5000007087	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007088	which are restaurant here in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000007089	show me what is the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007090	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007091	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007092	i want restaurants which have over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007093	i am looking for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007094	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007095	please enumerate restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007096	what is the closest QUOTED_STRING_0 to work ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007097	i want restaurants which have review count NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007098	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007099	find restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007100	which restaurants get 7 or less review count and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007101	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007102	get restaurants with over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007103	search restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007104	i need to find restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007105	i would like to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007106	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007107	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007108	i want restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007109	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007110	which is the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007111	i want restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007112	how many reviews do the restaurant that is nearest to work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007113	i want to retrieve reviews having QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007114	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007115	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007116	search for restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007117	search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007118	search for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000007119	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007120	please enumerate review having rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007121	i am looking to retrieve reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000007122	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007123	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007124	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007125	please list restaurants which have QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007126	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007127	i would like restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007128	give me the street and summary of the restaurant most far away from LOCATION_0	now => [ param:address.streetAddress:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007129	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000007130	what is the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007131	show me what 's the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007132	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007133	i would like restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007134	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007135	get review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007136	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007137	what are restaurant with rating lower than 11 and rating not less than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 11 and param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007138	what review have summary containing QUOTED_STRING_0 and date published DURATION_0 after the end of the week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:week + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000007139	search restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007140	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007141	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007142	what are the restaurant having cuisine being QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007143	search restaurant which have 9 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 => notify
S5000007144	what QUOTED_STRING_0 gets the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007145	i would like review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007146	tell me what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007147	i need restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007148	search for reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007149	i need restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007150	i am looking for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007151	what is the distance from LOCATION_0 of restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007152	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007153	where are restaurants that have review count 0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
S5000007154	i want to get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007155	get restaurant in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007156	where are restaurant having cuisine being QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
S5000007157	i would like to retrieve restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007158	i would like to know the distance to restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007159	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007160	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007161	i want to get restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007162	search reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000007163	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007164	which are restaurant in GENERIC_ENTITY_tt:us_state_0 around here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
S5000007165	retrieve restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007166	please enumerate reviews having 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007167	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007168	i would like to get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007169	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007170	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007171	search restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007172	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007173	get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007174	search for restaurants having no more than NUMBER_0 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000007175	find the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007176	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007177	get the QUOTED_STRING_0 which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007178	please enumerate restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007179	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007180	i am looking for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000007181	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007182	i want restaurants which have over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007183	i am looking for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007184	please enumerate reviews having 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007185	get restaurant with rating 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007186	get restaurants with 0 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007187	get restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007188	give me the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007189	i am looking to search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007190	i need restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007191	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007192	what restaurant get lower review count than 1 and location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 and param:geo:Location == location:current_location => notify
S5000007193	search reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000007194	i want to know the distance from home to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007195	retrieve restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007196	i would like to get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007197	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007198	find restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007199	search restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007200	retrieve restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007201	show me what 's the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007202	i am looking for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000007203	what are restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007204	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007205	i am looking to search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007206	please search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007207	tell me what 's the distance of restaurants from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007208	please enumerate restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007209	what is the street and city of the restaurant which is closest to work ?	now => [ param:address.addressLocality:String , param:address.streetAddress:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007210	i would like to know the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007211	i would like to find reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007212	list restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007213	i need to find restaurant which have telephone PHONE_NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000007214	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007215	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007216	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000007217	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007218	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007219	i am looking to retrieve restaurant without more than NUMBER_0 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000007220	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007221	search review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007222	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000007223	what is the postal code of restaurants ?	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007224	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007225	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007226	i am looking to retrieve restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007227	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007228	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007229	what are QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007230	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007231	what is the description of restaurant ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007232	what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007233	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007234	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007235	get reviews which have over 1 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007236	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007237	what QUOTED_STRING_0 have review count NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000007238	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007239	enumerate restaurants which have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000007240	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007241	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007242	i would like the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007243	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007244	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007245	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007246	search how near restaurants is from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007247	retrieve restaurant with more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007248	enumerate restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000007249	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007250	i would like to get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007251	i want to get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007252	show me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007253	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007254	please enumerate restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007255	list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007256	show me what 's the date published of reviews .	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007257	what QUOTED_STRING_0 gets the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007258	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007259	i need to retrieve restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000007260	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007261	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000007262	enumerate restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000007263	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007264	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007265	what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007266	i need restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007267	which restaurant have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007268	i would like restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007269	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007270	how close are the restaurant which has the highest review count .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000007271	i need to find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007272	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007273	find restaurants which have fewer than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000007274	what are the restaurants which have summary QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007275	search restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007276	i want to find restaurants having rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000007277	what is the number of reviews of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007278	enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007279	list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007280	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007281	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007282	tell me what 's the distance to restaurant from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007283	i would like to find restaurants having rating zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007284	show me what 's the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007285	i would like restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007286	i want to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007287	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007288	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007289	retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007290	i would like to know the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007291	enumerate restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007292	where are restaurant with over zero rating	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 ) => notify
S5000007293	tell me what is the distance from where i 'm now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007294	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007295	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007296	search restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007297	show me what 's the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007298	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007299	get restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000007300	i want to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007301	what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007302	how many reviews in QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007303	search restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007304	where are the restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000007305	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007306	search restaurants that do n't have rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007307	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007308	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007309	retrieve restaurant which have over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007310	search for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000007311	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007312	what is the number of reviews of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007313	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007314	i would like the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007315	i want restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007316	tell me what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007317	search for review having QUOTED_STRING_0 as summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007318	show me what 's the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007319	i need to find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007320	i need to get reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007321	please get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007322	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000007323	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007324	please get restaurant having location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007325	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007326	what restaurant have 7 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007327	i would like review having 6 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007328	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007329	tell me the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007330	i am looking to find restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007331	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007332	where is the restaurant closest to where i 'm now .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007333	enumerate reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007334	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007335	i want to search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007336	i am looking for review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007337	what review have both QUOTED_STRING_0 and QUOTED_STRING_1 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000007338	enumerate restaurant which have rating at most zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007339	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007340	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007341	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007342	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007343	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007344	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007345	which are restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007346	i want to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007347	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007348	i would like restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007349	find restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007350	i need to retrieve restaurant which have review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007351	which restaurants have the postal code containing either QUOTED_STRING_0 or QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String in_array~ [ QUOTED_STRING_0 , QUOTED_STRING_1 ] => notify
S5000007352	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007353	what are the review having larger rating than NUMBER_0 which have date published later than DURATION_0 before last week	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= ( start_of unit:week - 1 unit:week ) - DURATION_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000007354	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007355	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007356	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007357	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007358	tell me what 's the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007359	show me what 's the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007360	which are QUOTED_STRING_0 that have rating lower than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000007361	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007362	i would like review having 6 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007363	find restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007364	tell me what is the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007365	i want to get restaurants having review count more than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007366	search restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007367	i want restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007368	i need restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007369	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007370	i would like review having 6 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007371	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007372	i would like the QUOTED_STRING_0 most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007373	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007374	please get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000007375	please search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007376	retrieve restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007377	find restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007378	tell me what is the distance from where i am now of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007379	show me the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007380	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007381	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007382	i am looking to search for restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007383	retrieve restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007384	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007385	search for restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000007386	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007387	find reviews with over NUMBER_0 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000007388	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007389	enumerate restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007390	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007391	i would like restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007392	i would like to know the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007393	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007394	show me what 's the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007395	i would like the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007396	what review have date published before DURATION_0 before last year ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= ( end_of unit:year - 1 unit:year ) - DURATION_0 => notify
S5000007397	list restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007398	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007399	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007400	find restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007401	what is the most far away QUOTED_STRING_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007402	i want to search for restaurants that have over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007403	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007404	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007405	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007406	i am looking for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000007407	i would like reviews that have rating 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000007408	get restaurant which have more rating than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007409	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007410	where is restaurant having rating not less than 7 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 ) => notify
S5000007411	i would like restaurant that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007412	i would like to know the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007413	i want to know the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007414	get review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000007415	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007416	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007417	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007418	i would like restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007419	i am looking to search for restaurant with review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007420	search for the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007421	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007422	search restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007423	i want to find restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007424	i am looking to retrieve reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007425	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007426	tell me what is the distance from where i am now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007427	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007428	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007429	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007430	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007431	i need to get restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007432	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007433	where is the restaurants which have zero or higher review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 ) => notify
S5000007434	search restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007435	what are restaurants around LOCATION_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007436	i want to find restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007437	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007438	which restaurants get over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007439	i want to search for restaurant that have over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007440	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007441	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000007442	i need the street and state of QUOTED_STRING_0 .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:address.streetAddress:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007443	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007444	what are the QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007445	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007446	i would like the city of restaurant	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007447	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007448	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007449	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007450	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007451	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000007452	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007453	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007454	i want restaurant that have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007455	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007456	get restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007457	which restaurant have 8 or above rating and are in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007458	i want the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007459	retrieve restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007460	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007461	search restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007462	i would like restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007463	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007464	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007465	enumerate restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007466	i would like restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007467	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007468	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007469	search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007470	search the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007471	i want restaurants here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007472	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007473	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007474	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007475	i would like restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007476	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007477	i am looking to get restaurant having cuisine including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007478	i want restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007479	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007480	i am looking for reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007481	list restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007482	i am looking to search restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007483	tell me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007484	retrieve reviews that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007485	i am looking for review with rating smaller than 5 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000007486	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007487	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007488	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007489	i am looking to find review which have date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000007490	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007491	list reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007492	i am looking for restaurants that have rating lower than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000007493	show me the distance from LOCATION_0 to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007494	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007495	what is the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007496	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007497	search for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007498	i need reviews that have greater rating than one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007499	i want to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007500	retrieve restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007501	what is the postal code of restaurant	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007502	i need to get restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007503	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007504	i want to search for restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007505	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007506	find restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007507	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007508	what is the rating of review	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007509	please enumerate restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007510	i am looking for review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000007511	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007512	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007513	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007514	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007515	i want to know how close restaurant is	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007516	what restaurants get over 12 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007517	which are the restaurants having 5 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007518	which reviews get rating 11 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000007519	what are QUOTED_STRING_0 with lower rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000007520	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007521	please list review which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000007522	i want review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000007523	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007524	get restaurant having 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007525	i want review that have QUOTED_STRING_0 in the summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007526	i want to know the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007527	tell me the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007528	list restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000007529	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007530	i would like to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007531	i am looking for review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007532	get the QUOTED_STRING_0 which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007533	i want to find restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007534	i am looking to get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007535	retrieve restaurants with QUOTED_STRING_0 as summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007536	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007537	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007538	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007539	search restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007540	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007541	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007542	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007543	find the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007544	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007545	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000007546	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007547	i need restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007548	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007549	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007550	tell me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007551	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007552	enumerate restaurant having less review count than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000007553	what is the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007554	get restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007555	i want to find restaurants having rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000007556	i need to retrieve restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007557	search reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000007558	i need to search for restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007559	please enumerate review having rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007560	i am looking for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007561	get the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007562	where is restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000007563	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007564	get restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007565	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007566	get restaurant with higher rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007567	please enumerate restaurants having over 11 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007568	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007569	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007570	i am looking for reviews with zero rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000007571	i would like the postal code of restaurant	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007572	i need restaurant that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007573	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007574	i want to search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007575	i would like the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007576	i am looking for the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007577	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007578	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007579	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007580	i want restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007581	what is the distance from home to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007582	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007583	enumerate restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007584	i need the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007585	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007586	i would like to know the author of reviews	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007587	find review with rating smaller than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000007588	i need restaurant having rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007589	get restaurants having over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007590	i need to retrieve restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000007591	i need to get restaurant that have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007592	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007593	show me what 's the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007594	search for the closest QUOTED_STRING_0 to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007595	i am looking for reviews with zero rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000007596	get the QUOTED_STRING_0 which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007597	i want restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000007598	i want to get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007599	i need restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007600	how near are the most far away restaurant from LOCATION_0 to LOCATION_1 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_1 ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000007601	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007602	what QUOTED_STRING_0 gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007603	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007604	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007605	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007606	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007607	search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007608	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007609	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000007610	i want to find restaurants which have 6 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007611	search the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007612	get the QUOTED_STRING_0 which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007613	i need to search for restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007614	i need to find restaurant which have telephone PHONE_NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000007615	give me the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007616	i want restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007617	get restaurant having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007618	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007619	i want reviews having 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007620	i need restaurant having rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007621	i need restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007622	show me the price range and postal code of QUOTED_STRING_0	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007623	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007624	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007625	search the QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007626	i would like review that have over 5 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000007627	i would like review having 6 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007628	get restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000007629	i would like to know the distance of restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007630	what is the most far away QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007631	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007632	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007633	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007634	where is the restaurants which has the minimum review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000007635	list restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007636	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007637	retrieve restaurants with QUOTED_STRING_0 as summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007638	find restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007639	i would like to retrieve restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007640	find restaurants with 0 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007641	find restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007642	i am looking for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007643	i would like to search for restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007644	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007645	tell me the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007646	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007647	i need to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007648	i am looking to find review which have date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000007649	find restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007650	what restaurant have lower review count than 9 and rating 10 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 and param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007651	where are restaurants that have over one rating	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
S5000007652	i would like restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007653	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007654	please get review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007655	please list reviews which have rating less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
S5000007656	get restaurants with 0 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007657	where is restaurant having rating larger than 6	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 6 ) => notify
S5000007658	search for reviews having smaller rating than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000007659	please search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000007660	which review get rating greater than 11 and later date published than DURATION_0 after the end of the week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:week + DURATION_0 and param:reviewRating.ratingValue:Number >= 11 => notify
S5000007661	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007662	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007663	search restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007664	show me what is the description of reviews	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007665	i want the QUOTED_STRING_0 nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007666	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007667	i need the closest QUOTED_STRING_0 to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007668	tell me what 's the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007669	where are the restaurants with smaller rating than 4 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 ) => notify
S5000007670	what restaurants have the description containing neither QUOTED_STRING_0 nor QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter not param:description:String =~ QUOTED_STRING_0 or not param:description:String =~ QUOTED_STRING_1 => notify
S5000007671	please find restaurants that have 12 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 12 => notify
S5000007672	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007673	search restaurant which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 4 => notify
S5000007674	what restaurants serves QUOTED_STRING_0 cuisine and get 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007675	i want to retrieve review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007676	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007677	i am looking to search for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007678	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007679	i am looking to find restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007680	i want restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007681	please list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007682	i need restaurant with description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007683	retrieve restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007684	please list restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000007685	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007686	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000007687	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007688	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007689	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000007690	i need to search for restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007691	i need restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007692	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007693	find restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007694	search restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007695	i need restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007696	which restaurant get state GENERIC_ENTITY_tt:us_state_0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007697	i need to get restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007698	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007699	i am looking to find review which have date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000007700	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007701	i am looking to search for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007702	how many reviews in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000007703	show me what is the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007704	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007705	show me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007706	tell me what 's the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007707	search restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007708	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007709	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007710	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007711	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007712	get restaurants having more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000007713	retrieve restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007714	i want the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007715	i need to retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007716	retrieve restaurant without more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000007717	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007718	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007719	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000007720	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007721	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000007722	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007723	find restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007724	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007725	i need reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000007726	tell me what is the distance from where i 'm now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007727	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007728	give me the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007729	i need to find review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007730	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007731	i would like restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007732	i would like to search for restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007733	which are the restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007734	where is the restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000007735	what restaurants serves QUOTED_STRING_0 cuisine and get 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007736	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000007737	which reviews have rating lower than 7 and date published DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number <= 7 => notify
S5000007738	i would like the postal code and summary of the farthest restaurant	now => [ param:address.postalCode:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007739	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007740	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007741	retrieve restaurant with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007742	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007743	where is the closest restaurants to LOCATION_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007744	please enumerate restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007745	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007746	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007747	i need to get restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000007748	i am looking to retrieve reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007749	i need to know the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007750	i need to get reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007751	show me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007752	find restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007753	i want to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000007754	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007755	enumerate restaurants which have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000007756	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007757	i want restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007758	i would like restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007759	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007760	show me what 's the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007761	search restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007762	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007763	i am looking for restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000007764	i want to know the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007765	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007766	which are the reviews having date published DURATION_0 before next year ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:year - DURATION_0 => notify
S5000007767	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007768	get restaurants with over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007769	i would like restaurants that have lower rating than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007770	list restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007771	i would like restaurant with review count 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007772	i need to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007773	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007774	which are the reviews for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007775	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007776	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000007777	what is the author of reviews	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000007778	i am looking for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007779	i need to retrieve restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000007780	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007781	get reviews with zero rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000007782	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007783	which QUOTED_STRING_0 gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007784	show me what 's the distance of restaurants from LOCATION_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007785	please retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007786	i would like restaurant that have cuisine QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007787	which are restaurants which have QUOTED_STRING_0 in its summary ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007788	i am looking for the distance from here of restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007789	which are the restaurants with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000007790	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000007791	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007792	please list restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000007793	search restaurants having review count not more than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007794	please search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007795	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007796	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007797	retrieve restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007798	please search for restaurants having more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000007799	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007800	get restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007801	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007802	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007803	get restaurant with description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007804	i am looking to retrieve reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007805	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007806	which restaurant get lower review count than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007807	get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007808	please find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007809	retrieve restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007810	tell me the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007811	list restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007812	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007813	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007814	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007815	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007816	tell me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007817	retrieve restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007818	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007819	i would like restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007820	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007821	i want restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000007822	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007823	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007824	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007825	which review get date published after DURATION_0 after this month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= start_of unit:mon + DURATION_0 => notify
S5000007826	which are the restaurants within 5 miles radius of where i am now	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 5 unit:mi => notify
S5000007827	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007828	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007829	please find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000007830	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007831	get the QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007832	please search reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007833	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007834	please enumerate restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007835	please enumerate restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007836	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007837	where are restaurants that have over one rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
S5000007838	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007839	please enumerate restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007840	where is the restaurants which has the maximum review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000007841	what restaurants serves QUOTED_STRING_0 cuisine and get 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007842	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007843	i want restaurant which have review count at least 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007844	what is the distance from here to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007845	i would like restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007846	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007847	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007848	i need restaurants that have no rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007849	tell me what is the city of restaurants .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007850	i need restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007851	show me what is the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007852	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007853	i need to know the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007854	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007855	what are the QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007856	what restaurants have the postal code including QUOTED_STRING_0 but not QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter not param:address.postalCode:String =~ QUOTED_STRING_1 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007857	i need to retrieve reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000007858	please list restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007859	search restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007860	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007861	i need restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007862	please search for restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007863	search for restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007864	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007865	i want reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000007866	i am looking to find restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000007867	retrieve the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007868	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007869	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007870	i want to know the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007871	i want to get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007872	i want the QUOTED_STRING_0 which is farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007873	i want to find restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007874	i need restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007875	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007876	please search for reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000007877	please list restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007878	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007879	find the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007880	please retrieve restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007881	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007882	get restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007883	i need restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007884	please list restaurants which have 6 or greater rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007885	retrieve restaurants with QUOTED_STRING_0 as summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007886	please get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000007887	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007888	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007889	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007890	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007891	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007892	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007893	where is the restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000007894	i need to get restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007895	tell me the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007896	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000007897	i want review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007898	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007899	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000007900	please retrieve restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007901	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007902	find restaurants which have fewer than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000007903	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007904	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007905	find the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007906	i want to know the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007907	what are reviews for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007908	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007909	which are restaurants which have lower review count than 0 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000007910	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007911	i would like the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007912	i am looking to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007913	i am looking for restaurant around here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007914	i want to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000007915	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007916	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007917	search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000007918	search the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007919	find restaurants with over 9 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007920	where are restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000007921	please list review having summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007922	tell me what 's the distance to restaurant from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007923	search for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007924	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007925	where are the restaurants that do not have rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 ) => notify
S5000007926	i am looking to search for restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007927	i am looking to search restaurants which have QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007928	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007929	which restaurants have 1 or higher rating and rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007930	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007931	i want to retrieve restaurants having review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007932	enumerate restaurants which have more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000007933	i am looking to search for restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007934	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007935	please find reviews which have later date published than DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000007936	retrieve restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007937	find restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007938	retrieve reviews which have rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000007939	retrieve restaurant which have over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007940	find restaurants having at least 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000007941	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000007942	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007943	show me what 's the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007944	find restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007945	search reviews without rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000007946	what are restaurant with rating lower than 11 and rating not less than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 11 and param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007947	i need restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000007948	get restaurant having rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007949	i want restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000007950	get review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000007951	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007952	i would like to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007953	what is the distance from LOCATION_0 of restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007954	i am looking for restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007955	i need restaurants that have rating not less than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007956	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007957	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007958	find the distance from here of restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000007959	i am looking for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007960	i would like the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007961	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007962	find the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007963	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007964	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007965	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000007966	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007967	show me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007968	i am looking to search restaurants which have QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007969	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007970	please list restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007971	what review get rating lower than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000007972	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007973	list restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007974	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007975	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000007976	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000007977	search reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000007978	get restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007979	get restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000007980	show me what is the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007981	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000007982	get restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000007983	please enumerate restaurants with over one rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007984	what are the restaurants which have rating lower than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007985	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000007986	what are restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000007987	i would like to find reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000007988	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007989	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007990	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007991	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007992	search for restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007993	get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000007994	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000007995	please list review with 11 or higher rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 11 => notify
S5000007996	where is the most far away restaurant	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000007997	what is the address and rating of the restaurant which has the lowest review count	now => [ param:aggregateRating.ratingValue:Number , param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000007998	i would like to retrieve restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000007999	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008000	please get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008001	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008002	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008003	i would like restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008004	where are the restaurants that have 7 or less review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 ) => notify
S5000008005	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008006	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008007	search for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008008	find reviews with over NUMBER_0 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000008009	i am looking for review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000008010	i am looking for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008011	please enumerate restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008012	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008013	i would like the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008014	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008015	i would like to search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008016	i would like to search for restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008017	get restaurants which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008018	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008019	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008020	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008021	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008022	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008023	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008024	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008025	show me what is the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008026	i want restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008027	what is the location and country of the restaurants which has the minimum rating ?	now => [ param:address.addressCountry:Entity(tt:country) , param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000008028	tell me what 's the distance of restaurants from LOCATION_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008029	please search reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008030	where is the nearest restaurants to me	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008031	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008032	i need restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008033	show me the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008034	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008035	i want to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008036	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008037	what is the address of restaurant ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008038	please get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008039	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008040	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008041	i would like the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008042	where is the most far away restaurant	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008043	i need to search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000008044	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008045	show me what is the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008046	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008047	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008048	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008049	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000008050	i need restaurant having rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008051	get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008052	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000008053	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008054	i need to get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000008055	search for restaurant that have larger rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008056	i need to search for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000008057	what is the description of restaurants ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008058	i want restaurants here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008059	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008060	get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008061	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008062	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008063	i am looking to search restaurants which have QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008064	i want restaurants which have over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008065	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008066	i am looking for restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008067	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008068	i want restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008069	where is restaurants in GENERIC_ENTITY_tt:us_state_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000008070	i need to know the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008071	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008072	what QUOTED_STRING_0 get over NUMBER_0 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000008073	what are the restaurants that have rating equal to 9 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000008074	please search for review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000008075	where is the restaurant that is most far away from where i 'm now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008076	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008077	show me what 's the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008078	tell me what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008079	i need restaurants that have rating lower than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008080	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008081	retrieve restaurant having more rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008082	what restaurant get no fewer than 0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 0 => notify
S5000008083	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008084	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008085	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008086	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008087	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008088	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008089	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008090	search restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008091	find restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008092	i would like to search for reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000008093	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008094	get reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000008095	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000008096	what restaurants serves QUOTED_STRING_0 cuisine and get 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008097	i need to find restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008098	enumerate restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008099	i am looking to search restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008100	i need restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008101	list restaurant with lower review count than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008102	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008103	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000008104	retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008105	please enumerate restaurants having more review count than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008106	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000008107	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008108	i need to search for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008109	i want restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008110	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008111	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008112	i want restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008113	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008114	i would like restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008115	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008116	get restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008117	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008118	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008119	i need the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008120	i need restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008121	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008122	i would like to search for reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000008123	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008124	i would like to know the distance to restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008125	please list reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000008126	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008127	i want restaurants here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008128	i would like to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008129	please list restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008130	search for restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008131	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000008132	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008133	i need restaurants without review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008134	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008135	i am looking to search for review which have 9 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008136	i am looking to search restaurants which have QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008137	i am looking for the distance of restaurant from where i am now	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008138	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008139	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008140	what are restaurants with 1 or above review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008141	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008142	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008143	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008144	i need restaurants without review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008145	get restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008146	where is the restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000008147	which are restaurant which have 1 review and have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 and param:aggregateRating.ratingValue:Number == 10 => notify
S5000008148	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000008149	i need restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000008150	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008151	i want reviews with date published after DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000008152	what is the state of restaurants ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008153	find the distance of restaurant from LOCATION_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008154	search restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008155	i would like to know the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008156	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008157	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008158	i want review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008159	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008160	tell me what 's the date published of reviews .	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008161	which restaurants have over 5 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008162	find the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008163	give me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008164	give me the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008165	i need restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000008166	get reviews which have over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008167	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008168	i am looking for restaurant having rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008169	i need restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008170	search for restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008171	search restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000008172	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008173	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008174	tell me the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008175	i want restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000008176	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008177	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008178	i am looking for restaurants that have rating lower than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008179	tell me what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008180	get restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008181	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008182	which restaurant have over 0 rating and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008183	i am looking for the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008184	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000008185	i would like to get restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000008186	i need restaurants here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008187	please get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008188	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008189	please enumerate restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008190	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008191	i want the QUOTED_STRING_0 nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008192	i would like the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008193	enumerate restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008194	what is the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008195	tell me what is the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008196	how many reviews in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000008197	i am looking to get restaurants that have over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008198	search for restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008199	what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008200	i want restaurants which have review count NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000008201	search for review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000008202	show me the distance from LOCATION_0 to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008203	what is the state of restaurants ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008204	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008205	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008206	find review with greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008207	tell me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008208	i would like to know the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008209	please retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008210	search restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008211	please enumerate restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008212	i would like the QUOTED_STRING_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008213	i want to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008214	i need to retrieve reviews which have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008215	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008216	please retrieve restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008217	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008218	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008219	please search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008220	i am looking for the country and state of the restaurants which has the minimum rating .	now => [ param:address.addressCountry:Entity(tt:country) , param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000008221	i want to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008222	i want the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008223	which QUOTED_STRING_0 gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008224	find the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008225	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008226	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008227	list restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008228	please search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008229	i need to get restaurant which have over 7 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 => notify
S5000008230	get review having 10 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 10 => notify
S5000008231	where is the restaurant with the fewest reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000008232	please get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000008233	list review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000008234	i need to get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008235	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008236	get restaurant with rating 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008237	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008238	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008239	what is the description of restaurants ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008240	i need to find restaurant which have telephone PHONE_NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000008241	i want to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008242	how many reviews does the restaurant that is nearest to here have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008243	get review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000008244	retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008245	i want restaurants here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008246	search review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000008247	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008248	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008249	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008250	get restaurants having over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008251	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008252	i need restaurant that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008253	search restaurants with 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008254	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008255	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008256	i need restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008257	tell me what is the cuisine of restaurants	now => [ param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008258	i want restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008259	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008260	i want to find reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000008261	what QUOTED_STRING_0 get rating equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000008262	i need restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008263	find restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008264	find reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008265	i would like restaurants having less rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008266	i want to search restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008267	i need restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008268	retrieve the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008269	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008270	search for restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008271	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008272	search for restaurant that have larger rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008273	list restaurants that have 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008274	get reviews which have over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008275	get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000008276	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008277	i want restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008278	retrieve restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008279	where is the closest restaurants to LOCATION_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008280	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008281	i am looking for the QUOTED_STRING_0 most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008282	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008283	where are restaurants having QUOTED_STRING_0 in the postal code	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
S5000008284	i am looking to get restaurants that have over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008285	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000008286	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008287	i need to retrieve restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000008288	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008289	list restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008290	show me what 's the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008291	search restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008292	retrieve review with rating greater than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 11 => notify
S5000008293	get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008294	i want to search for restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008295	i would like restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008296	where are the restaurant which have 1 or above review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
S5000008297	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008298	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008299	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000008300	i want to know the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008301	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008302	give me the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008303	please find reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000008304	i want to know the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008305	find review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000008306	i am looking to retrieve restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008307	find restaurants with over 9 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008308	i need restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008309	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008310	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008311	please search restaurant that have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008312	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008313	get restaurants having at most 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000008314	please enumerate restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008315	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008316	tell me what is the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008317	what is the street of restaurant	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008318	i want restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008319	i would like to find restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008320	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008321	find restaurant that have location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008322	i want to search for restaurants with rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008323	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008324	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008325	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008326	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008327	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008328	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008329	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008330	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008331	where is the restaurants that is farthest from where i 'm now .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008332	show me what is the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008333	i am looking to search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008334	i need restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008335	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008336	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008337	please enumerate restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008338	i need to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008339	search the QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008340	i would like restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008341	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008342	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008343	i am looking to retrieve reviews that have rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000008344	i want to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008345	find the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008346	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008347	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008348	i want to search for review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008349	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008350	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008351	tell me what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008352	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008353	please find restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008354	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008355	search restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008356	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008357	get restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008358	search for restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008359	search restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008360	search for restaurants having QUOTED_STRING_0 in the postal code .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000008361	i am looking to retrieve restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008362	what restaurants is in GENERIC_ENTITY_tt:country_0 and have review count zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000008363	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008364	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008365	enumerate restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008366	i want to retrieve reviews having QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008367	i need to search for review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008368	i would like restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008369	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008370	find the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008371	find restaurants with 0 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008372	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008373	get restaurant with QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008374	get restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008375	what are restaurants that have over 0 rating and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008376	find the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008377	i would like restaurants having location LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008378	get restaurant which have larger review count than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008379	i would like restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008380	retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008381	what restaurant have 7 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000008382	i am looking to find restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008383	where are the restaurant having rating 1	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
S5000008384	i need to get restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008385	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008386	i want to find restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008387	i would like to know the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008388	which review get date published sooner than DURATION_0 before yesterday	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= ( start_of unit:day - 1 unit:day ) - DURATION_0 => notify
S5000008389	i need to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008390	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008391	show me what is the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008392	retrieve restaurant having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008393	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008394	get restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008395	retrieve restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008396	get restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008397	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008398	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008399	i need the QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008400	show me what is the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008401	get reviews that have larger rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000008402	i need restaurants with QUOTED_STRING_0 in its description	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008403	i am looking for the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008404	please enumerate restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008405	tell me what is the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008406	i need the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008407	i want to find restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008408	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008409	what is the review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008410	please enumerate restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008411	i need to search for restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008412	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008413	get reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000008414	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008415	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008416	find restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008417	i want to find restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008418	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008419	where is restaurants having 11 or greater review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 ) => notify
S5000008420	please find reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000008421	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008422	i need to find restaurant with 1 review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000008423	i want restaurant that have review count not more than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008424	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008425	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000008426	find restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008427	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008428	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008429	i need to search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008430	search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008431	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008432	please retrieve restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008433	i am looking for restaurants with 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008434	i am looking for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008435	get restaurant with QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008436	which restaurant get 6 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008437	get restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008438	enumerate restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000008439	find restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008440	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008441	get restaurant which have larger review count than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008442	i want to search for restaurant that have over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008443	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008444	retrieve restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008445	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008446	i need review which have rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008447	get restaurant which have review count larger than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008448	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008449	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008450	tell me what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008451	search for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008452	what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008453	get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008454	i am looking for restaurants with 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008455	i would like to know the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008456	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008457	retrieve restaurant with review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008458	i am looking to get review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000008459	get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008460	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008461	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008462	what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008463	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008464	i need restaurants without review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008465	i want to find restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008466	i need restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008467	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008468	tell me what is the distance from LOCATION_0 of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008469	get review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000008470	search for review with higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008471	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008472	where is the restaurant closest to where i am now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008473	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008474	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008475	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008476	retrieve restaurants with review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008477	which restaurants have 1 or higher rating and rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008478	i am looking to search for restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008479	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008480	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008481	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008482	enumerate restaurant which have lower review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000008483	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008484	please search restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008485	tell me what is the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008486	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008487	search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008488	search restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008489	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008490	i am looking for restaurants having 6 or more review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008491	please search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008492	i want to know how close restaurant is .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008493	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008494	please enumerate restaurant that have larger rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008495	where is the restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000008496	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008497	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008498	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008499	what is the distance of restaurants from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008500	i need to search for restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008501	i want restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008502	i need restaurant with description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008503	i would like restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008504	i need reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008505	retrieve the QUOTED_STRING_0 which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008506	search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008507	list review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000008508	please list restaurant having 2 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008509	please get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008510	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008511	please find restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008512	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008513	i want restaurant with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008514	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008515	list restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008516	i need to search for restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008517	what reviews get rating lower than 8 and date published earlier than DURATION_0 after yesterday ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= ( start_of unit:day - 1 unit:day ) + DURATION_0 and param:reviewRating.ratingValue:Number <= 8 => notify
S5000008518	i want restaurants here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008519	i want to retrieve restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008520	retrieve restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008521	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008522	i want to search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008523	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000008524	enumerate restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008525	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008526	please enumerate restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008527	i am looking to search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008528	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008529	find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008530	i need to retrieve restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000008531	what are restaurants within 12 miles radius of where i am now ?	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 12 unit:mi => notify
S5000008532	i would like to search for review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008533	i need to search for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008534	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008535	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008536	i want restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008537	retrieve restaurants with rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008538	show me what 's the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008539	find restaurant which have larger review count than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008540	show me what is the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008541	how far is the nearest restaurant to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000008542	show me what 's the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008543	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000008544	i need to retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008545	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008546	which are restaurants within 3 km from LOCATION_0	now => ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 3 unit:km => notify
S5000008547	which restaurant have 8 or above rating and are in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008548	find restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008549	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008550	show me what 's the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008551	which restaurants get rating greater than 2 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008552	find restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000008553	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008554	i would like review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008555	please list review which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000008556	what are restaurants in here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008557	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008558	where are restaurant which have greater rating than 3	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 ) => notify
S5000008559	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000008560	get restaurant with no fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000008561	please retrieve reviews which have rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000008562	search for restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000008563	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008564	get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008565	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008566	i want the QUOTED_STRING_0 nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008567	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008568	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008569	i would like reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008570	please search for restaurant having 2 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008571	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008572	i need the closest QUOTED_STRING_0 to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008573	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008574	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008575	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008576	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008577	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008578	which are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000008579	get reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000008580	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008581	i need to know the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008582	i need restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008583	i would like to retrieve restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008584	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008585	what are restaurants which have 11 or greater review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008586	get restaurants having more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000008587	enumerate restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008588	please get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008589	tell me what is the distance from where i 'm now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008590	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008591	search restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008592	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008593	i would like to find restaurant with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008594	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008595	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008596	how close is the restaurants which has the minimum review count from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000008597	what are restaurant nearby ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008598	how far is the nearest restaurant to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000008599	get restaurants having review count at least 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008600	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008601	i am looking for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008602	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008603	i would like the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008604	which restaurants get telephone PHONE_NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
S5000008605	enumerate restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008606	i need to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008607	search restaurant which have review count not more than 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008608	tell me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008609	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008610	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008611	i need restaurants that have no rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008612	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008613	give me the description and telephone of the restaurants closest to here	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008614	find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000008615	tell me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008616	search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008617	list restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008618	get restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008619	what restaurants have rating equal to 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000008620	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008621	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008622	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008623	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008624	i need restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008625	retrieve restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008626	i would like to search review that have summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008627	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008628	i would like the postal code of restaurant	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008629	i am looking for restaurants with 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008630	i want to find restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008631	get restaurant with rating 12 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008632	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008633	get review having 4 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000008634	get restaurant in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008635	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008636	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008637	what are reviews that have rating 5 and have date published DURATION_0 after this month ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == start_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number == 5 => notify
S5000008638	search for review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000008639	please search restaurant which have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008640	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008641	search restaurants which have lower review count than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008642	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008643	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008644	what restaurants have rating equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008645	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008646	search the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008647	how many reviews do the nearest restaurant have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008648	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008649	list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008650	show me what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008651	get restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008652	i am looking for restaurant around here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008653	what are reviews that have later date published than DURATION_0 after today ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= start_of unit:day + DURATION_0 => notify
S5000008654	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008655	get restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008656	i would like to search for review which have rating one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000008657	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008658	get restaurant in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008659	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000008660	i am looking for restaurants with 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008661	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008662	i need to get restaurants with review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000008663	i need restaurants without review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008664	search restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008665	i want to retrieve restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008666	i need to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008667	tell me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008668	search for restaurants having more review count than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008669	find restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008670	get restaurants having less rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008671	i want restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008672	where are restaurants having more than 9 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 ) => notify
S5000008673	i am looking for review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000008674	what is the cuisine of restaurant	now => [ param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008675	show me what is the description of reviews	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008676	i would like restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008677	tell me what 's the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008678	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008679	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008680	i would like reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000008681	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008682	i would like review that have over 5 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000008683	get restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000008684	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008685	i need to get restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008686	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008687	show me what is the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008688	search review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000008689	get review having 4 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000008690	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008691	get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008692	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008693	search for restaurants having QUOTED_STRING_0 in the postal code .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000008694	retrieve restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008695	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008696	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008697	find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008698	show me what 's the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008699	i want to search for restaurant with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008700	what restaurant get over 7 review count and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008701	get reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000008702	i would like restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008703	list review which have rating less than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000008704	which QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008705	i need to get reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008706	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008707	i am looking to retrieve review with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000008708	what restaurants is in GENERIC_ENTITY_tt:country_0 and have review count zero ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000008709	i want to search for restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008710	i am looking for review that have 8 or above rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008711	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008712	what is the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008713	which are the restaurant near where i am now which have smaller rating than 12 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 12 and param:geo:Location == location:current_location => notify
S5000008714	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008715	i need to search for restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008716	i am looking for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008717	list restaurants with QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008718	search for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008719	retrieve restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008720	i am looking to get restaurant which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008721	please search for reviews having QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008722	which are the restaurant having no fewer than 3 reviews that have 0 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 3 and param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008723	tell me the review count of restaurant .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008724	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008725	get restaurants which have rating lower than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000008726	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008727	what is the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008728	i would like to search for reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000008729	i am looking to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000008730	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008731	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000008732	tell me what 's the distance to restaurant from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008733	i need review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008734	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000008735	which is the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008736	please find restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008737	search review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008738	i want the QUOTED_STRING_0 nearest to where i 'm now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008739	show me what 's the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008740	which restaurants have 1 or higher rating and rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008741	what are the restaurant in GENERIC_ENTITY_tt:country_0 in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000008742	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000008743	i would like restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008744	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008745	i need to get restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008746	search for restaurants having no more than NUMBER_0 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000008747	i would like restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008748	get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000008749	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008750	please list restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008751	search review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008752	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000008753	retrieve restaurant with more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008754	i want to find restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008755	which are QUOTED_STRING_0 having rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000008756	get restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008757	get restaurants having more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000008758	what are the restaurant around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008759	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008760	show me the rating of reviews .	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008761	get restaurants with over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008762	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008763	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008764	find restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008765	tell me the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008766	i want restaurant with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008767	i would like restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008768	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008769	i am looking to get restaurant which have more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008770	where is the restaurants having zero reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 ) => notify
S5000008771	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008772	get review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000008773	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000008774	where are restaurants which have 6 or greater rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 6 ) => notify
S5000008775	what are restaurants around here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008776	get review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000008777	get restaurant which have review count 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008778	i am looking for restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008779	show me what 's the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008780	what are restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008781	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008782	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008783	find restaurants with over 9 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008784	what are the restaurant around LOCATION_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008785	i would like restaurants having rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000008786	what review have summary containing QUOTED_STRING_0 and date published DURATION_0 after the end of the week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:week + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000008787	i need restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008788	find restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008789	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008790	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008791	i want to search for restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008792	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008793	i want to retrieve review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008794	get restaurant without fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000008795	where is the restaurants closest to where i am now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008796	tell me the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008797	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008798	i need the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008799	i need to search for restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000008800	show me what is the author of reviews .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008801	find review having rating 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000008802	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008803	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008804	which are the restaurant within 10 mi from work ?	now => ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 10 unit:mi => notify
S5000008805	find restaurants having at least 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000008806	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008807	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008808	get restaurant having rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000008809	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008810	what restaurant have smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008811	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000008812	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008813	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008814	list restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008815	i need to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008816	i need restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008817	what restaurants get more rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008818	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008819	i want restaurants that have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008820	please search restaurant having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000008821	please enumerate restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008822	how close is QUOTED_STRING_0 to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
S5000008823	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008824	find the most far away QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008825	get restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008826	i am looking for review having QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008827	please find restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008828	retrieve restaurants having fewer than 10 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 10 => notify
S5000008829	i am looking to search restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008830	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000008831	i am looking to search restaurants with QUOTED_STRING_0 in its description .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008832	i want to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008833	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008834	please list restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008835	what QUOTED_STRING_0 has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008836	i would like to find reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000008837	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008838	search restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008839	get restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000008840	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008841	search restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008842	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008843	find restaurants with over 9 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008844	show me what is the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008845	i want restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000008846	search for review having lower rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000008847	give me the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008848	what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008849	search how near restaurants is from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008850	i want to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008851	i would like to search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008852	retrieve restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008853	search for restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000008854	search the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008855	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000008856	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008857	where is the nearest restaurant to LOCATION_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008858	get restaurant in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000008859	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000008860	tell me what 's the distance of restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008861	i would like to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008862	i want to find reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000008863	i need to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008864	find restaurants having at least 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000008865	i want reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000008866	which are restaurants that have 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008867	what is the country of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008868	where are restaurant that have rating not less than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
S5000008869	find restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008870	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008871	find the distance from here of restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008872	what are QUOTED_STRING_0 that have review count equal to NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000008873	list restaurants with QUOTED_STRING_0 as summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008874	i need restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008875	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008876	search for restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008877	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008878	i want restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008879	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008880	search restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008881	how many reviews do the nearest restaurants to work have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008882	i would like to search for restaurants near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008883	search for restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008884	what is the price range of restaurants	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008885	i would like restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008886	i want to know the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008887	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008888	search restaurants which have lower review count than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008889	search the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008890	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008891	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008892	show me what 's the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008893	i want restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000008894	i would like restaurant that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008895	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008896	show me what 's the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008897	enumerate restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008898	i would like to get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008899	search for restaurants having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000008900	what restaurant get rating 11 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008901	get restaurant having rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000008902	find restaurant with over 6 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008903	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008904	i need review which have rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008905	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008906	i would like restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008907	i am looking to search restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008908	search restaurant having cuisine including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008909	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008910	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008911	i need to get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008912	i would like to know the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000008913	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008914	i would like restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008915	find restaurant with over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008916	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008917	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000008918	i need restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008919	get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008920	where is the closest restaurants	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008921	please list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008922	show me what 's the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008923	find the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008924	i want to get review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000008925	i would like the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008926	tell me what 's the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008927	please list reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008928	i need to search for review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000008929	show me what is the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008930	i need to get restaurant having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008931	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000008932	find the state and address of the restaurant that is nearest to work	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000008933	give me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008934	i need restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008935	i am looking to search for restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008936	i am looking for review that have 8 or above rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008937	get restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008938	i need to get restaurant which have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008939	i would like to find review which have 9 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000008940	get reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000008941	find review with greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008942	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008943	what is the number of reviews of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008944	i would like reviews that have rating 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000008945	find restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008946	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008947	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008948	find review with rating smaller than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000008949	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008950	i would like to search for restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008951	search for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008952	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000008953	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008954	find restaurants with 0 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008955	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000008956	search for restaurants with 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008957	tell me what 's the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008958	i want restaurants which have over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008959	find restaurants with over 9 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008960	i need restaurant which have review count 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008961	i want to search restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008962	please list reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000008963	what reviews get date published later than DURATION_0 before the end of the week ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:week - DURATION_0 => notify
S5000008964	i need to get reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000008965	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008966	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000008967	search for restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000008968	enumerate restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008969	show me what is the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008970	i need restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008971	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008972	search for restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008973	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008974	i am looking for reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000008975	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008976	i am looking for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008977	where is restaurants having less rating than 1 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
S5000008978	which are restaurants that have 11 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008979	what are QUOTED_STRING_0 with lower rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000008980	i want review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000008981	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008982	i am looking to get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008983	search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008984	how near are the most far away restaurant from LOCATION_0 to LOCATION_1	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_1 ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000008985	i want restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000008986	get restaurant having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008987	which are review with rating equal to 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000008988	please enumerate restaurants having over 11 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008989	please list reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000008990	find restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000008991	i need restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008992	where is restaurant which have summary QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000008993	get restaurant which have review count larger than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008994	search the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008995	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008996	retrieve restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000008997	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000008998	find review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000008999	where are the restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000009000	please list restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009001	retrieve restaurants which have review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009002	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009003	i want to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009004	get the most far away QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009005	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009006	which reviews have rating lower than 7 and date published DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == end_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number <= 7 => notify
S5000009007	show me what is the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009008	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009009	please list restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009010	enumerate restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009011	search the QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009012	which are restaurants that have 11 or above rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009013	i would like review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000009014	i need to get restaurant that have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009015	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009016	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009017	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009018	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009019	search for restaurants having QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009020	tell me what is the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009021	enumerate restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009022	where are the restaurants having more than 11 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 ) => notify
S5000009023	find restaurant that have location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009024	please find restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009025	please search for reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009026	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009027	please search for review having lower rating than 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 11 => notify
S5000009028	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009029	i need to get restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000009030	get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009031	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009032	i need to get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009033	please find reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000009034	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009035	get restaurant in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009036	i would like the QUOTED_STRING_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009037	list restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009038	tell me what 's the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009039	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009040	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009041	i want to search restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009042	list restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009043	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009044	please search for restaurant having 2 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009045	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009046	i want to know the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009047	i am looking for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009048	i want restaurants which have over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009049	what is the cuisine of restaurants	now => [ param:servesCuisine:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009050	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009051	show me the price range and postal code of QUOTED_STRING_0 .	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000009052	i need to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009053	i need restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009054	which are the QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009055	i need to search for restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009056	search restaurant that have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009057	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009058	which are restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009059	enumerate reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009060	where is the nearest restaurant to LOCATION_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009061	please enumerate restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009062	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009063	i want to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009064	tell me what is the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009065	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009066	retrieve the QUOTED_STRING_0 most far away from where i 'm now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009067	find the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009068	i would like the postal code and summary of the farthest restaurant	now => [ param:address.postalCode:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009069	i need to find restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009070	what are restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009071	i want to get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009072	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009073	enumerate restaurants which have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000009074	retrieve restaurant which have over 4 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009075	i am looking for restaurants with 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009076	i need to get restaurant having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009077	show me the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009078	i need restaurants without review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009079	i need the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009080	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009081	i am looking for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009082	i need restaurant having rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009083	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009084	get reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009085	which are the reviews for QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009086	get restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009087	i would like restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009088	i want restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009089	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009090	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009091	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009092	i want restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009093	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009094	what are restaurant having location here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009095	show me what 's the description of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009096	find restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009097	get restaurant which have larger review count than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009098	i need restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009099	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009100	i want to know the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009101	i would like to search for restaurants near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009102	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009103	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009104	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009105	enumerate restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009106	retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009107	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009108	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000009109	i need to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009110	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009111	i want restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009112	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009113	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009114	find restaurant which have 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009115	tell me what 's the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009116	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009117	get restaurants having QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009118	i want to find restaurants that have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009119	what are restaurant within one km of here	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 1 unit:km => notify
S5000009120	please find restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009121	i am looking for restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009122	i need restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009123	please retrieve restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009124	search restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000009125	retrieve restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009126	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009127	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009128	show me what 's the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009129	tell me what is the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009130	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009131	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009132	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009133	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009134	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009135	where is restaurant that have rating 7	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 ) => notify
S5000009136	what are QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009137	show me what 's the rating of restaurants .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009138	where is the restaurant which has the highest rating .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000009139	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009140	i want to retrieve restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009141	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009142	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009143	i want to find restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009144	search the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009145	search restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009146	please search for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009147	which restaurant get address equal to here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009148	retrieve the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009149	what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009150	i want restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009151	search the QUOTED_STRING_0 which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009152	i would like the city of restaurant	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009153	retrieve restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009154	i need to retrieve reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009155	i want to get restaurants that have 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009156	i want restaurant with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009157	i am looking to retrieve review with rating 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000009158	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009159	i am looking for restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009160	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009161	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009162	enumerate restaurant that have 3 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009163	i need to search for restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009164	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009165	i would like to search for restaurant that have review count not more than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009166	get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009167	i am looking to search restaurants which have QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009168	i would like the QUOTED_STRING_0 that is closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009169	search for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009170	i am looking for restaurants with 9 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009171	search restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009172	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009173	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009174	i would like restaurants having less rating than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009175	i am looking to get restaurant having cuisine including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009176	tell me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009177	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009178	get restaurants with over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009179	i am looking to search for review that have smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000009180	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009181	i need reviews which have smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000009182	where is the restaurant which have summary QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000009183	where is the restaurant with NUMBER_0 or above review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
S5000009184	which are the reviews having one or below rating that have QUOTED_STRING_0 in the summary ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= 1 => notify
S5000009185	i am looking to retrieve restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009186	find restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009187	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009188	which restaurant have QUOTED_STRING_0 in its description	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009189	which restaurant have review count 5 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009190	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009191	what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009192	please list restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009193	search for restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009194	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009195	get the QUOTED_STRING_0 which is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009196	i need to get restaurants that have rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009197	find the summary and city of the farthest restaurants from LOCATION_0	now => [ param:address.addressLocality:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009198	search restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009199	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009200	i need restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009201	search the QUOTED_STRING_0 with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009202	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009203	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009204	search restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009205	i need restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009206	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009207	list review which have rating less than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000009208	list review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009209	get restaurant having less review count than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000009210	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009211	i want restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009212	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009213	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009214	please list restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009215	please search restaurant which have review count larger than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009216	which restaurant get 6 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009217	get restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009218	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009219	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009220	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000009221	which restaurant have review count 5 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009222	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009223	i need to search for restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009224	i want to get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009225	list restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009226	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009227	i need restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009228	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009229	enumerate restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009230	which review get date published sooner than DURATION_0 before yesterday	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= ( start_of unit:day - 1 unit:day ) - DURATION_0 => notify
S5000009231	get restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009232	search the postal code of restaurant	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009233	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009234	find restaurants with over 9 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009235	i would like the QUOTED_STRING_0 with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009236	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009237	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009238	i want to get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009239	which is the QUOTED_STRING_0 most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009240	tell me what 's the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009241	show me what 's the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009242	get restaurants having over 8 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009243	get restaurants with 0 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009244	i need restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009245	i need to search for restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009246	i want to search for restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009247	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009248	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009249	please retrieve restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009250	search for restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009251	tell me the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009252	i would like to search for restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009253	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009254	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009255	search for restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009256	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009257	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009258	show me what is the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009259	get restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009260	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009261	what is the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009262	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009263	search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009264	what is the price range of restaurant ?	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009265	i would like reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000009266	tell me what is the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009267	get restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009268	i need restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009269	i want to know the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009270	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009271	enumerate restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009272	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009273	search for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009274	i would like review having 6 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000009275	please enumerate restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009276	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009277	how many reviews does QUOTED_STRING_0 have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000009278	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009279	i would like restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009280	i need restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009281	show me what is the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009282	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000009283	show me what is the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009284	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009285	i want to search restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009286	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009287	i would like restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009288	i need to search for restaurant that have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009289	find restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009290	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009291	search restaurant that have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009292	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009293	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000009294	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009295	enumerate restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009296	search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009297	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009298	retrieve restaurants with rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009299	how many reviews do the restaurants which is nearest to work have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009300	show me what is the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000009301	please get restaurants that have one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000009302	i want restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009303	where is the restaurant closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009304	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009305	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009306	i would like to get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009307	show me what 's the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009308	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009309	which reviews get 4 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000009310	search for restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009311	get restaurants having at most 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000009312	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009313	i am looking for restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009314	i want to get restaurants having review count more than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009315	i am looking for review with QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009316	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009317	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009318	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009319	list restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009320	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009321	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009322	retrieve restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009323	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000009324	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009325	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009326	i am looking to search for review that have smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000009327	i need to search for restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009328	show me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009329	search for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009330	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009331	i would like restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009332	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009333	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009334	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009335	i want to search for restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009336	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009337	i need restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009338	what restaurants have higher rating than 0 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009339	list restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009340	get the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009341	please search for reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009342	i would like to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009343	retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009344	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009345	i need to search for restaurants with address work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009346	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009347	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009348	i need the QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009349	i would like reviews which have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000009350	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009351	list review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000009352	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009353	i am looking for restaurants with 9 or more review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009354	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009355	list restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009356	i would like to search for restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009357	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009358	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009359	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009360	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000009361	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009362	i would like restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009363	i want to search for restaurant that have over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009364	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000009365	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009366	tell me what 's the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000009367	i am looking to search for review that have smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000009368	what are the review having 10 or greater rating which have date published earlier than DURATION_0 after tomorrow	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:day + DURATION_0 and param:reviewRating.ratingValue:Number >= 10 => notify
S5000009369	what is the location of restaurant ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009370	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009371	show me the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009372	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009373	where is the restaurant in GENERIC_ENTITY_tt:us_state_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000009374	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009375	what is the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009376	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009377	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009378	i would like to know the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009379	please get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009380	i want to know the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009381	find restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009382	i would like restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009383	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009384	i need the QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009385	i want to know the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009386	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009387	show me the price range and postal code of QUOTED_STRING_0	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000009388	which review have date published DURATION_0 before last year ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == ( end_of unit:year - 1 unit:year ) - DURATION_0 => notify
S5000009389	i need the farthest QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009390	search for restaurants having over 8 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009391	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009392	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009393	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009394	i am looking to search restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009395	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000009396	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009397	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009398	i would like to search for restaurants having 6 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009399	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009400	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009401	i want to get review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009402	i want to get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009403	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009404	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000009405	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009406	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000009407	list restaurant having one or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009408	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009409	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009410	i am looking for the country and state of the restaurants which has the minimum rating .	now => [ param:address.addressCountry:Entity(tt:country) , param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000009411	i would like restaurant that have cuisine QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009412	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009413	get restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009414	i want reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000009415	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009416	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009417	where are restaurant with 9 or lower rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 ) => notify
S5000009418	i am looking to search for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009419	get restaurant which have larger review count than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009420	find review with greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000009421	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009422	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009423	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009424	i would like restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009425	get restaurant without fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000009426	please get restaurants that have one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000009427	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009428	search restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009429	i would like to search for restaurants near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009430	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009431	i need the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009432	i need the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009433	retrieve restaurants which have review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009434	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009435	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000009436	i am looking for restaurant with address here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009437	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009438	i am looking for restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009439	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009440	show me what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009441	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009442	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009443	enumerate restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009444	get restaurant having less review count than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000009445	find the distance from here of restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009446	what is the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009447	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009448	i want to search for restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009449	search restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009450	get restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009451	show me what 's the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009452	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009453	list restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009454	search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009455	get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009456	i would like restaurant which have review count 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000009457	i would like to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009458	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009459	i want reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000009460	show me what 's the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009461	i would like to know the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000009462	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009463	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009464	i need the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009465	find review with greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000009466	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009467	i am looking for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009468	i want restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009469	i would like restaurant that have description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009470	search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009471	i would like restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009472	retrieve restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009473	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009474	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009475	i need to retrieve restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009476	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009477	i want to know the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009478	please enumerate restaurants with over one rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009479	show me what 's the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009480	show me what 's the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009481	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009482	please enumerate restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009483	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009484	search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009485	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009486	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009487	get restaurant having 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009488	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009489	i need to get restaurants having no more than NUMBER_0 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000009490	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009491	where is the restaurants which has the highest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000009492	i would like to retrieve restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009493	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009494	find restaurant with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009495	please list restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009496	search restaurants which have lower review count than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009497	show me the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000009498	i want to get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009499	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009500	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009501	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009502	please find restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009503	which restaurants get postal code containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009504	show me what is the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009505	which restaurant have review count 5 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009506	i would like to search for reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000009507	i would like to get restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009508	search for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009509	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000009510	tell me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009511	which are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009512	show me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009513	find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009514	please enumerate restaurants having more review count than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009515	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009516	what are reviews having summary containing QUOTED_STRING_0 that have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= 3 => notify
S5000009517	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009518	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000009519	i need restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009520	i need to get restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009521	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009522	what are restaurant having location here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009523	i need to search for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009524	tell me the review count of restaurant .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009525	find the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009526	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009527	search restaurant which have 9 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 => notify
S5000009528	search review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000009529	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009530	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009531	what are the restaurants with address work and zero or higher review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 and param:geo:Location == location:work => notify
S5000009532	tell me what is the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009533	tell me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009534	what is the summary of restaurant ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009535	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009536	i want to search restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009537	what restaurant get review count more than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009538	please enumerate review having rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000009539	i want to search for restaurant which have QUOTED_STRING_0 in the postal code	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009540	i would like restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009541	i am looking to get reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000009542	i want restaurants which have review count NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000009543	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009544	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009545	list restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009546	i am looking for restaurant around here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009547	i am looking for restaurant having rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009548	i am looking for restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009549	what are the QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009550	enumerate restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009551	what QUOTED_STRING_0 get over NUMBER_0 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000009552	tell me what 's the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009553	i need to know the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009554	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009555	i would like to know the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009556	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009557	i am looking to search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009558	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009559	i need to get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009560	tell me what is the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009561	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009562	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009563	i need restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009564	enumerate restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009565	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000009566	i need to get restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000009567	please enumerate reviews which have greater rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009568	retrieve the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009569	which are reviews for QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009570	which QUOTED_STRING_0 have one or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000009571	what is the country of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009572	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009573	i want restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009574	get restaurant which have review count larger than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009575	find restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009576	where are the restaurant that have 6 or more review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 ) => notify
S5000009577	please list restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009578	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009579	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009580	i am looking to find restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009581	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009582	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009583	i need the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009584	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009585	i need to get reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009586	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009587	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009588	get restaurant which have review count 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009589	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009590	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009591	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009592	get restaurant in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009593	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009594	get restaurant that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009595	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009596	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009597	i need restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009598	tell me the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009599	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009600	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009601	what are the restaurant around LOCATION_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009602	i want restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000009603	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009604	i want to search for restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009605	search for restaurants having no more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000009606	i am looking for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009607	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009608	i need restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009609	enumerate restaurants which have lower review count than 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009610	tell me what is the street of restaurants .	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009611	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009612	tell me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009613	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009614	tell me what 's the distance of restaurants from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009615	i would like restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009616	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009617	find restaurants having at least 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 7 => notify
S5000009618	tell me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009619	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009620	show me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009621	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009622	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009623	i need restaurant that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009624	i want review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009625	i need restaurants that have rating not less than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009626	search for the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009627	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009628	i want to find restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009629	i need to search for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009630	search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009631	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009632	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009633	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009634	tell me what 's the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009635	enumerate restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009636	enumerate restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009637	what restaurants get larger rating than 5 and are in GENERIC_ENTITY_tt:country_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009638	enumerate restaurants which have more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000009639	show me what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009640	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009641	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009642	show me the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009643	i would like to know the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009644	please get restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009645	get review having 4 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000009646	list restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009647	get reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000009648	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009649	i need restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009650	get reviews that have rating 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 5 => notify
S5000009651	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009652	what restaurant have 9 or lower rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 => notify
S5000009653	get review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000009654	i am looking to search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009655	i need to retrieve restaurant which have review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009656	where is the restaurants having no more than 7 reviews	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 ) => notify
S5000009657	i want to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009658	show me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009659	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009660	i am looking to get reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000009661	show me what 's the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009662	find review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000009663	what are review with over 0 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000009664	get restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009665	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009666	i need restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009667	i need restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009668	enumerate review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009669	i need to find restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009670	i need restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009671	i need restaurants that have rating lower than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009672	please enumerate restaurants having over 11 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009673	tell me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009674	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009675	i need restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009676	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009677	show me the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009678	where is restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000009679	i would like to know the distance to restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009680	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009681	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009682	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009683	show me what is the distance of restaurants from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009684	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009685	i would like restaurant having rating 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009686	i want to find restaurants which have 6 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009687	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009688	please find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000009689	i want to retrieve review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009690	list restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009691	enumerate review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009692	tell me the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009693	i want restaurant that have location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009694	list restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000009695	i am looking for restaurant that have review count 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000009696	list restaurants that have review count 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009697	i want to get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009698	tell me what 's the distance from where i 'm now of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009699	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009700	i need to find restaurant which have 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009701	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009702	search restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009703	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009704	get restaurant having 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009705	i want restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000009706	i am looking to search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009707	tell me what is the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009708	i need restaurant which have lower review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000009709	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009710	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009711	where is the restaurant closest to where i am now	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009712	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009713	i would like restaurant which have review count 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000009714	where is the QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000009715	i would like to search for restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009716	please search for reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000009717	i am looking for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009718	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009719	i need to find restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009720	what are restaurants nearby that have rating equal to 1 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 and param:geo:Location == location:current_location => notify
S5000009721	enumerate restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009722	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009723	search restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009724	search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009725	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009726	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009727	please enumerate reviews having 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000009728	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009729	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009730	show me what 's the description of reviews .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000009731	i am looking for restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009732	tell me the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009733	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009734	what is the distance from LOCATION_0 to restaurants ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009735	i need to retrieve reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000009736	please find restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009737	find review having rating 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000009738	enumerate restaurants that have 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000009739	please retrieve restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009740	i would like to find restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009741	please list restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009742	please list restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009743	i would like to know the distance of restaurants from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009744	enumerate restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009745	which restaurants get over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009746	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009747	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009748	i would like the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009749	please get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009750	i am looking for the QUOTED_STRING_0 most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009751	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009752	i am looking for review with QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009753	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009754	enumerate restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000009755	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009756	i want the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009757	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000009758	show me what 's the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009759	show me what 's the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009760	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009761	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009762	i would like review that have over 5 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000009763	which is the QUOTED_STRING_0 which has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009764	i am looking to retrieve restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009765	get review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000009766	search for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009767	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009768	i need restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009769	please list restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009770	tell me the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009771	i am looking for the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009772	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009773	retrieve reviews that have lower rating than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000009774	i would like to know the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009775	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009776	where is the nearest restaurants	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009777	please get restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009778	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009779	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000009780	show me the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009781	i would like restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009782	enumerate restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009783	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009784	i want to get reviews which have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009785	find review with rating smaller than 5	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000009786	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000009787	i would like restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009788	get restaurants that have no rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009789	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009790	i need restaurants having rating zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009791	search for the QUOTED_STRING_0 which is closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009792	i need restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009793	show me the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009794	show me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009795	i would like restaurants which have over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009796	i want to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009797	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009798	what are the restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009799	get the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009800	i need to get restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000009801	what restaurant have review count 3 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009802	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009803	list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009804	i am looking for restaurant nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009805	i am looking to search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009806	show me what 's the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009807	what is the telephone of restaurants ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009808	i need to get restaurant which have over 5 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009809	i want restaurants that have rating not less than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009810	search for the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009811	where is restaurants having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 ) => notify
S5000009812	get restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009813	get restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009814	i am looking for the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009815	please enumerate restaurants having review count not less than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009816	i need the closest QUOTED_STRING_0 to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009817	i need restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009818	get reviews which have over 1 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000009819	please search restaurant having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000009820	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009821	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009822	search for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000009823	find restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009824	get restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009825	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000009826	search for restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009827	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009828	search restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009829	enumerate restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009830	get restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000009831	please retrieve restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009832	i want to know the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009833	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009834	search how near restaurants is from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009835	search the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009836	i would like to find reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000009837	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009838	get restaurants having QUOTED_STRING_0 in the postal code .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000009839	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009840	search the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009841	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009842	i need to get restaurant which have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009843	get restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009844	i want to get restaurants having review count more than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009845	get restaurant having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000009846	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009847	what are the reviews for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000009848	i want the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009849	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009850	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000009851	please retrieve restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009852	i would like to know the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009853	i would like restaurant which have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000009854	i am looking for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000009855	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009856	i want to search for restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009857	which restaurants are in GENERIC_ENTITY_tt:us_state_0 and get over 6 review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009858	tell me the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009859	enumerate restaurants that have 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000009860	tell me what 's the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009861	enumerate restaurant having less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000009862	what are the restaurants that have 2 or higher review count , with review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 and param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009863	get review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000009864	find restaurants having no more than NUMBER_0 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000009865	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009866	find restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009867	i would like to know the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009868	what is the location of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009869	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009870	tell me what is the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009871	where is restaurants in GENERIC_ENTITY_tt:us_state_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000009872	i am looking for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009873	i would like restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009874	i would like to retrieve restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009875	get restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009876	i need to retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009877	find reviews with over NUMBER_0 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000009878	i need restaurants that have no rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009879	which are the restaurant in here in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
S5000009880	i need restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009881	list restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009882	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009883	what reviews get summary containing QUOTED_STRING_0 and later date published than DURATION_0 after this year	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= start_of unit:year + DURATION_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000009884	please enumerate restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009885	get restaurant with lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009886	get restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009887	i would like to search for restaurants having 6 or more review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009888	please find review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000009889	where is restaurants that have review count 3 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 ) => notify
S5000009890	i am looking for restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009891	what are restaurants around here which have 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 and param:geo:Location == location:current_location => notify
S5000009892	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009893	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009894	which restaurants have rating lower than 11 and is in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number <= 11 => notify
S5000009895	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009896	please enumerate restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009897	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009898	i am looking for restaurants with review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009899	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009900	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000009901	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009902	where is the nearest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000009903	get reviews which have over 1 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000009904	i want to find restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009905	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009906	which are restaurants which have lower review count than 0 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009907	i want the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009908	show me the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009909	where is the restaurants having no more than 7 reviews	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 ) => notify
S5000009910	i want to search for review that have greater rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000009911	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009912	which restaurants get lower rating than 7 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009913	i am looking for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009914	please search for reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000009915	show me what 's the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009916	find restaurants with 0 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009917	get restaurant having more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009918	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000009919	show me what 's the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009920	what is the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009921	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009922	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009923	i want restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000009924	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000009925	what is the telephone of restaurant	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009926	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009927	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009928	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009929	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009930	i want to get restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009931	get restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009932	which restaurant get state GENERIC_ENTITY_tt:us_state_0 and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009933	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009934	i would like restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009935	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009936	i would like the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009937	please list restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009938	i am looking to retrieve reviews that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000009939	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009940	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000009941	get restaurant having 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009942	search review that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009943	show me what 's the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009944	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009945	tell me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009946	what restaurant have 9 reviews and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 9 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000009947	i want restaurant that have location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009948	retrieve restaurant around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000009949	what QUOTED_STRING_0 has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009950	i would like restaurant that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009951	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009952	i need restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009953	i want to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009954	i would like review that have over 5 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 5 => notify
S5000009955	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009956	get the QUOTED_STRING_0 that is nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009957	get restaurant that have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009958	please list reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000009959	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009960	what is the address of restaurants ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009961	get restaurants which do n't have review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009962	which are the restaurant around me ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009963	i would like restaurant that have description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009964	retrieve review which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000009965	what is the distance from LOCATION_0 to restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000009966	i am looking for reviews with zero rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000009967	show me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009968	search restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009969	please search reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009970	find review having rating 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 8 => notify
S5000009971	enumerate restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009972	where are restaurants that have 12 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 12 ) => notify
S5000009973	what restaurants get description containing both QUOTED_STRING_0 and QUOTED_STRING_1 and serves QUOTED_STRING_2 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_2 => notify
S5000009974	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009975	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009976	i want to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000009977	get restaurants with review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000009978	i want restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009979	search for restaurants having more review count than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009980	get restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009981	what are restaurant within one km of here ?	now => ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) filter param:distance:Measure(m) <= 1 unit:km => notify
S5000009982	please get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009983	i would like to search review that have summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009984	i need to retrieve restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009985	i want restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009986	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000009987	i want to find restaurants having rating lower than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009988	search the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009989	search for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009990	what is the price range of restaurants ?	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009991	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009992	search restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009993	show me the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000009994	i would like to search for reviews that have rating 0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000009995	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000009996	retrieve restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000009997	retrieve reviews that have description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000009998	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009999	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010000	i am looking for restaurant with 1 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000010001	i am looking to retrieve restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010002	i am looking for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010003	search for restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010004	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010005	search for restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010006	i would like the QUOTED_STRING_0 most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010007	please list restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010008	what is the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010009	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010010	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010011	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010012	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010013	show me what is the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010014	which reviews get rating less than 10 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010015	get restaurants having more than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000010016	i would like restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010017	what are restaurant near here which have review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
S5000010018	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010019	search the QUOTED_STRING_0 which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010020	search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010021	i would like reviews that have rating 11	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000010022	i am looking for the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010023	list restaurant having one or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010024	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010025	i need restaurant with description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010026	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000010027	i need review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010028	i would like the QUOTED_STRING_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010029	search for reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010030	i need restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010031	tell me what 's the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010032	i want restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000010033	find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010034	which QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010035	i would like restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010036	i am looking for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010037	get restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010038	show me the rating of reviews .	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010039	retrieve restaurant around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010040	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010041	i am looking for restaurant with address here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010042	tell me what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010043	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010044	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010045	i need the QUOTED_STRING_0 that is closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010046	tell me what 's the distance of restaurants from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010047	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010048	i am looking to find restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010049	find the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010050	get restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010051	search the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010052	find restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010053	i want to get restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010054	please search for reviews which have 9 or below rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000010055	get reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000010056	i am looking for restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010057	i need to search restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010058	which are the restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000010059	i want the QUOTED_STRING_0 nearest to where i am now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010060	what are restaurants that have rating 10 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010061	i am looking for the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010062	what are the restaurant around LOCATION_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010063	i would like restaurants having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010064	get restaurants with 0 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010065	i would like to get restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010066	get restaurant with description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010067	i am looking for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010068	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010069	search for review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000010070	i want to know the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010071	which are reviews with rating more than 4 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010072	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010073	i would like restaurants that have lower rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000010074	i want to find reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000010075	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010076	get the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010077	i would like to know the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010078	i want restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010079	please list restaurants having over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010080	give me the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010081	get the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010082	list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010083	i would like to know the distance to restaurants from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010084	get restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010085	search for restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010086	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010087	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010088	where are restaurants which have over 12 review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 ) => notify
S5000010089	retrieve the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010090	get restaurant with no fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000010091	find the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010092	list reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000010093	i need restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010094	i am looking to search for restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010095	search for restaurants having more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000010096	get restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010097	i need the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010098	i would like to know the author of reviews	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010099	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010100	get restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010101	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010102	i would like to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010103	search for review having 4 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000010104	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010105	where is the restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000010106	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010107	i need reviews that have greater rating than one	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000010108	i would like the QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010109	retrieve restaurant with more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010110	i want reviews with date published after DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010111	find review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000010112	please search restaurant that have rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010113	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010114	what is the distance from where i 'm now to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010115	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010116	please get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010117	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010118	please retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010119	show me what 's the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010120	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010121	i want to search restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010122	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010123	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010124	i would like restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010125	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010126	i need to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010127	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010128	where is the nearest restaurants	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000010129	i would like to get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010130	get restaurant without fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000010131	i would like restaurant near where i 'm now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010132	i need to search for restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010133	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010134	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010135	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010136	which is the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010137	get restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010138	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010139	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010140	i would like to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010141	which are reviews having sooner date published than DURATION_0 before next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:mon - DURATION_0 => notify
S5000010142	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010143	i need restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010144	find restaurant with over 6 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010145	what reviews have 7 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000010146	retrieve restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010147	enumerate restaurants that have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010148	where are restaurant having one or higher review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
S5000010149	i need to get restaurant having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010150	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010151	search for review with more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000010152	list restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010153	tell me what is the distance from LOCATION_0 to restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010154	please enumerate reviews having 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000010155	i would like review which have rating less than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010156	i want restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010157	i want to find restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010158	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010159	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000010160	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010161	list review which have rating less than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010162	show me the distance from LOCATION_0 to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010163	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010164	i need to search for restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010165	get restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010166	what are restaurants around work in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:work => notify
S5000010167	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010168	please search restaurant having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010169	please enumerate restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010170	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010171	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010172	i need to get restaurant which have over 7 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 => notify
S5000010173	i want to find restaurants which have 6 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010174	i want review that have QUOTED_STRING_0 in the summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010175	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010176	show me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010177	please enumerate restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010178	where are restaurant that have summary QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000010179	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010180	i need to retrieve restaurant which have review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010181	search restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010182	search restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010183	i want restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010184	tell me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010185	find the distance of restaurant from LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010186	i want the nearest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010187	what are the restaurant having cuisine being QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010188	retrieve restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010189	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010190	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010191	which are the restaurant having rating zero which have higher review count than zero ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010192	find restaurants here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010193	enumerate restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010194	where is the restaurants which has the highest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000010195	search for restaurant with lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010196	get reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010197	search restaurants that have no rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010198	what is the address of restaurant ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010199	get restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010200	please enumerate reviews which have greater rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000010201	please get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010202	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010203	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010204	tell me the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010205	tell me what 's the summary of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010206	i would like restaurant having rating 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010207	i want the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010208	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010209	what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010210	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010211	search for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010212	i would like to search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010213	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000010214	where are restaurants that have over 5 review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 ) => notify
S5000010215	i want to know the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010216	i need restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010217	list review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010218	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010219	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010220	show me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010221	find the state and address of the restaurant that is nearest to work	now => [ param:address.addressRegion:Entity(tt:us_state) , param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000010222	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000010223	please enumerate restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010224	i want to know how close restaurant is .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010225	i need restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010226	please enumerate restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010227	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010228	please enumerate restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010229	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010230	retrieve the QUOTED_STRING_0 with the largest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010231	what QUOTED_STRING_0 have rating equal to 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000010232	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010233	i want restaurants having more than 9 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000010234	i need restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010235	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010236	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010237	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010238	i would like restaurant with review count 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000010239	tell me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010240	i want the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010241	show me what 's the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010242	find restaurants which have fewer than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000010243	i need restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010244	i want to search for review that have greater rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 0 => notify
S5000010245	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000010246	i am looking for restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010247	find the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010248	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010249	show me what 's the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010250	list restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000010251	what are the reviews in QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010252	i need to retrieve reviews with smaller rating than zero .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000010253	i would like restaurants with postal code containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000010254	i would like to search review that have summary containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010255	i need to get restaurant having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010256	search restaurants which have lower review count than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010257	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010258	how many reviews in the QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000010259	get restaurant having rating not less than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010260	i am looking to search for restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010261	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000010262	get restaurants that have no rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010263	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010264	search restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010265	i am looking to search for restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010266	get reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010267	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010268	i need restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010269	what are the restaurant having cuisine being QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010270	i need reviews that have greater rating than one .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000010271	where are the restaurants having review count not less than 5	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 ) => notify
S5000010272	get the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010273	search restaurants which have lower review count than 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010274	i need the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010275	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010276	get restaurant in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010277	get the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010278	i want restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010279	i want the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010280	where are restaurants which have 6 or greater rating .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 6 ) => notify
S5000010281	please search restaurant which have review count larger than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010282	i want to search restaurant having 12 or below review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010283	where is the restaurants which has the highest review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000010284	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010285	i would like restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010286	i need to get restaurants that have rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010287	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010288	find reviews with over NUMBER_0 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
S5000010289	i would like to know the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010290	i would like restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010291	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010292	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010293	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010294	retrieve restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010295	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010296	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010297	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010298	please get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010299	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010300	show me what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010301	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010302	i want reviews with rating smaller than 6 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000010303	i would like reviews which have rating less than 3	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000010304	search restaurant which have 9 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 9 => notify
S5000010305	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010306	what QUOTED_STRING_0 has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010307	i am looking for the QUOTED_STRING_0 which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010308	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010309	enumerate reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010310	where is restaurants with 9 or less review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 ) => notify
S5000010311	i am looking for the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010312	please search for restaurant having 2 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010313	please get restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010314	get restaurant having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010315	search restaurant that have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010316	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010317	tell me what is the review count of restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010318	i need to find review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010319	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010320	what is the state of restaurant ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010321	get restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000010322	i need to get restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010323	list reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010324	tell me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010325	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010326	i need to search restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010327	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010328	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000010329	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010330	i am looking to retrieve review with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 3 => notify
S5000010331	please enumerate restaurants having zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010332	retrieve restaurant without more than NUMBER_0 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 => notify
S5000010333	please list restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010334	i want to search restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010335	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010336	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010337	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010338	i would like restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010339	i want to know the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010340	get restaurant which have larger review count than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010341	which are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010342	i would like to search for restaurant near where i 'm now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010343	enumerate restaurant near where i am now	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010344	i need to retrieve restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010345	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010346	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010347	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010348	i am looking for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010349	get restaurants having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010350	tell me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010351	search restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000010352	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010353	i want to search restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010354	list restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010355	please list reviews which have later date published than DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010356	i need to retrieve restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010357	tell me the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010358	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010359	i want the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010360	i am looking for restaurants which have review count lower than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010361	i need to retrieve restaurant which have review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010362	get restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010363	i would like to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010364	i would like restaurant having rating not less than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010365	i am looking to search for restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010366	search restaurants which have review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010367	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010368	get restaurant having rating not less than 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010369	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010370	i need reviews having rating greater than 1 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000010371	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010372	please enumerate review having rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000010373	i am looking to find restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010374	i am looking for restaurants having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010375	get restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010376	get restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010377	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010378	what are the restaurant around here that have 8 or less review count ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 and param:geo:Location == location:current_location => notify
S5000010379	i want to know the country of restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010380	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010381	search for reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010382	i am looking for restaurants that have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010383	get restaurants that have rating greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010384	list restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010385	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010386	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010387	find restaurant with over 12 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010388	where are restaurants in GENERIC_ENTITY_tt:country_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
S5000010389	i need restaurant having rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010390	search for the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010391	which reviews have 9 or greater rating and rating lower than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 8 and param:reviewRating.ratingValue:Number >= 9 => notify
S5000010392	what are the QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010393	which review get rating smaller than 6 and date published DURATION_0 after this month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date == start_of unit:mon + DURATION_0 and param:reviewRating.ratingValue:Number <= 6 => notify
S5000010394	tell me the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010395	what restaurant get more than 11 reviews and location work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 and param:geo:Location == location:work => notify
S5000010396	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010397	show me what 's the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010398	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010399	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010400	retrieve restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010401	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010402	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010403	i am looking for restaurants with smaller rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000010404	get reviews which have over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000010405	i am looking for restaurants in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010406	i am looking to retrieve restaurant which have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010407	find restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010408	what restaurants is in GENERIC_ENTITY_tt:country_0 and have review count zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000010409	find restaurants which have lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010410	list restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010411	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010412	tell me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010413	i am looking for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010414	which restaurants have one or lower rating ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010415	show me what 's the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010416	i would like reviews that have rating 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 11 => notify
S5000010417	get restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000010418	where are restaurant which have over 7 review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 ) => notify
S5000010419	search for restaurants near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010420	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010421	i am looking to search restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010422	i want review that have QUOTED_STRING_0 in the summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010423	i want to get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010424	get reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000010425	i need the QUOTED_STRING_0 most far away from where i am now .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010426	where is restaurant which have zero or higher review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 ) => notify
S5000010427	search for restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010428	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010429	i would like to know the author of reviews .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010430	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000010431	please enumerate restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010432	search restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000010433	get restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010434	i need reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010435	please list restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010436	what are the restaurant with address work ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010437	please retrieve restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010438	what restaurant is in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010439	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010440	list restaurant with review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010441	i am looking to search for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010442	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010443	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010444	i want the QUOTED_STRING_0 nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010445	get restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010446	find the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010447	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010448	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010449	i want restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010450	i would like restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000010451	i want to search restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010452	i would like to retrieve review that have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010453	where is the restaurants which serves QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
S5000010454	please list review having summary containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010455	get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010456	which restaurants get postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 and serves QUOTED_STRING_2 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_2 => notify
S5000010457	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010458	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010459	i want restaurant having one or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010460	please get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010461	show me what is the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010462	tell me what is the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010463	retrieve restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010464	enumerate reviews which have over 4 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010465	get restaurant having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010466	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010467	search for restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010468	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010469	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010470	tell me the description of restaurants .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010471	i need to get restaurant which have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010472	find restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010473	i need to retrieve reviews which have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010474	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010475	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010476	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010477	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010478	search for review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000010479	get restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010480	please retrieve restaurant having review count not more than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010481	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010482	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010483	what are restaurant which have 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010484	get the QUOTED_STRING_0 most far away from where i am now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010485	please search restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010486	please list restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010487	please get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010488	which is the QUOTED_STRING_0 most far away from where i 'm now	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010489	what is how close restaurant is	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010490	i need restaurants which have 11 or greater review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010491	what are QUOTED_STRING_0 that have review count 10 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000010492	where are the restaurant with no more than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 ) => notify
S5000010493	i need to find restaurant with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010494	find restaurant which have more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010495	get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010496	retrieve restaurant with review count lower than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010497	please list restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010498	i want to find restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010499	search restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010500	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010501	get the QUOTED_STRING_0 which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010502	i would like restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010503	i need restaurant with rating 12	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010504	i need to retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010505	search for restaurants that have zero or below rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010506	what is the country of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010507	what are restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010508	i am looking to find restaurants which have review count one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000010509	get restaurant which have 1 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010510	list restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010511	search for restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010512	i would like reviews which have rating less than 3 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 3 => notify
S5000010513	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010514	search the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010515	i want to get reviews which have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010516	what is the most far away QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010517	i am looking to search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010518	what are the restaurant having cuisine being QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010519	i need review which have QUOTED_STRING_0 as description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010520	i am looking to find restaurant with 11 or lower review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010521	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010522	get restaurants with over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010523	search restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010524	i need to get restaurants near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010525	show me what is the summary of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010526	please list reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010527	i am looking for restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010528	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010529	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010530	tell me what is the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010531	i am looking for review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010532	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010533	i want the QUOTED_STRING_0 nearest to where i 'm now	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010534	which are reviews having date published later than DURATION_0 before tomorrow ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:day - DURATION_0 => notify
S5000010535	where is the restaurants that have rating 2 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 ) => notify
S5000010536	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010537	what are the review having 10 or greater rating which have date published earlier than DURATION_0 after tomorrow	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:day + DURATION_0 and param:reviewRating.ratingValue:Number >= 10 => notify
S5000010538	i am looking for restaurant having rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010539	i am looking to search for restaurant having more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010540	i would like restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010541	which are the restaurants with review count lower than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010542	please enumerate restaurants having rating not more than one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010543	where is the restaurant which has the minimum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000010544	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010545	tell me what 's the distance from work to restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010546	where is restaurant which have review count at most 5	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 5 ) => notify
S5000010547	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010548	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010549	tell me what 's the distance from LOCATION_0 of restaurants .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010550	i would like to retrieve review with rating 5 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 5 => notify
S5000010551	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010552	get the QUOTED_STRING_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010553	i need restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010554	tell me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010555	please get restaurants with larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010556	how close are the closest restaurant to LOCATION_0 from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) ) => notify
S5000010557	which are the restaurant here in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
S5000010558	i need restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010559	i am looking to search for restaurants around work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010560	search restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010561	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010562	i would like restaurants having zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010563	please get restaurants having review count more than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010564	get restaurants which have more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000010565	i need to find review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010566	what is the country of restaurants ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010567	i would like restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010568	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010569	tell me what 's the price range of restaurant .	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010570	find restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010571	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010572	i want to find restaurants that have rating not less than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010573	where is the restaurants having no more than 7 reviews .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 ) => notify
S5000010574	list restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010575	what are reviews of QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010576	i would like restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010577	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010578	i would like to know the distance of restaurant from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010579	i want the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010580	i am looking for restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010581	i would like to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010582	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010583	give me the street and summary of the restaurant most far away from LOCATION_0 .	now => [ param:address.streetAddress:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000010584	search for restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010585	search reviews having smaller rating than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 1 => notify
S5000010586	please get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010587	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010588	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010589	what restaurant get rating 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010590	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010591	retrieve the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010592	search restaurants which have larger rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010593	get review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000010594	search the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010595	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010596	what are the reviews of QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010597	i need restaurant near where i am now .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010598	please enumerate restaurants with address work .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010599	which is the QUOTED_STRING_0 which has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010600	search for restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010601	where is the restaurants which have over 7 review count .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 7 ) => notify
S5000010602	get reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000010603	i need to retrieve restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010604	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010605	i want to retrieve reviews having QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010606	get reviews with rating more than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010607	get restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010608	i need to search restaurant which have lower review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000010609	which are QUOTED_STRING_0 's reviews .	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010610	get restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010611	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010612	please enumerate restaurant that have larger rating than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010613	get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010614	show me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010615	get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010616	where are the restaurant which have 1 or above review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
S5000010617	i want to search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010618	please retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010619	which restaurant get address equal to here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010620	show me the price range and postal code of QUOTED_STRING_0	now => [ param:address.postalCode:String , param:priceRange:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000010621	list review that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000010622	get restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010623	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000010624	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010625	get restaurants with 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010626	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010627	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010628	search restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010629	get restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010630	i am looking for restaurant with 1 review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 1 => notify
S5000010631	i am looking to search for restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010632	which are the reviews having one or below rating that have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= 1 => notify
S5000010633	what is the number of reviews of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010634	please find restaurants with over one rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010635	show me what 's the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010636	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010637	get the QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010638	where is the QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000010639	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010640	i would like to know the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010641	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010642	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010643	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010644	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010645	search for review with higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000010646	please search restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010647	retrieve restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010648	get restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000010649	please list restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010650	i need review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010651	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010652	get restaurant which have more rating than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010653	i would like the QUOTED_STRING_0 with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010654	i am looking to retrieve reviews that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000010655	i want to retrieve review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010656	get restaurants having 10 or less rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010657	i would like restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010658	show me the rating of reviews	now => [ param:reviewRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010659	which QUOTED_STRING_0 gets the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010660	i need restaurants with postal code containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
S5000010661	get restaurants which have no review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010662	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010663	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010664	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010665	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010666	i want to retrieve review with more rating than 8	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 8 => notify
S5000010667	i need to retrieve reviews which have QUOTED_STRING_0 in the description	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010668	get restaurant which have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010669	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010670	tell me what is the date published of reviews	now => [ param:datePublished:Date ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000010671	i need restaurants without review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010672	i need to search for restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010673	i want restaurants here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010674	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010675	i want to know the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010676	search the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010677	find restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010678	i am looking to retrieve restaurant which have 7 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010679	search restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010680	list review which have rating less than 10 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010681	search review with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000010682	i want to search restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010683	where is the nearest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000010684	what is the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010685	please get restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010686	find the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010687	i am looking for reviews without rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000010688	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010689	how close are the restaurant which has the highest review count	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000010690	i am looking to get restaurant with 3 or above rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010691	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010692	tell me what is the state of restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010693	search the nearest QUOTED_STRING_0 from here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010694	i need restaurant that have rating 7	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010695	get restaurant with review count not less than 6 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010696	i need restaurants with 12 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010697	retrieve restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010698	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010699	search restaurant having review count not more than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010700	i would like restaurant which have review count 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000010701	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010702	i want to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010703	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010704	search the review count of restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010705	i want restaurants with 9 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010706	search restaurant with greater review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010707	i would like to know the distance of restaurant from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010708	i need to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010709	what are the restaurant that have summary QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010710	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010711	tell me what is the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010712	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010713	i am looking for restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010714	which reviews get rating higher than 3 ?	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 3 => notify
S5000010715	please get restaurants with larger rating than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010716	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010717	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010718	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010719	i am looking for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010720	retrieve review with rating greater than 11 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 11 => notify
S5000010721	get restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010722	i am looking for the country and state of the restaurants which has the minimum rating .	now => [ param:address.addressCountry:Entity(tt:country) , param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) => notify
S5000010723	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000010724	search the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010725	retrieve restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010726	find restaurants in here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010727	i would like the rating of restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010728	i want to search restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010729	list restaurants which have rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010730	show me what 's the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010731	i would like restaurant that have cuisine QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010732	i would like to retrieve restaurants which serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010733	what restaurants have over 4 review count and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010734	tell me what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010735	search restaurants which have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010736	i am looking for restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010737	get restaurant nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010738	search the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010739	show me what 's the country of restaurant .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010740	i would like restaurants which have higher review count than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010741	how many reviews are there in QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000010742	get reviews with less rating than 2 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000010743	which is the QUOTED_STRING_0 most far away from where i 'm now ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010744	i would like to search for restaurants having 6 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010745	search restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010746	find restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010747	i am looking to get restaurants that have over 6 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010748	what is the summary of restaurants ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010749	i am looking for restaurant with address here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010750	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010751	what is the summary of restaurant ?	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010752	please enumerate restaurants having over 11 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010753	i am looking for reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000010754	what is the distance from here to restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010755	i need to search for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000010756	i want to find restaurant with 11 or lower review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010757	i want to search restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010758	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010759	tell me the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010760	where is restaurants having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 ) => notify
S5000010761	i want the closest QUOTED_STRING_0 to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010762	i am looking to get restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010763	i want to get reviews which have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010764	find the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010765	show me what is the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010766	i would like restaurants having location LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010767	search for the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010768	retrieve restaurants which serves QUOTED_STRING_0 cuisine .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010769	i need to search for restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010770	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010771	retrieve restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010772	what are QUOTED_STRING_0 with lower rating than 5 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000010773	i would like restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010774	i need restaurants that have zero or below rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010775	get restaurant with 3 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010776	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010777	what is the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010778	tell me what 's the reviews of restaurant .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010779	which restaurant get state GENERIC_ENTITY_tt:us_state_0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000010780	please list restaurant which have greater rating than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010781	i would like to know the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010782	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000010783	where are the restaurants which have lower review count than 0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 ) => notify
S5000010784	enumerate restaurants that have 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000010785	what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010786	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010787	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010788	show me what is the reviews of restaurants .	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010789	i need restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010790	i need the closest QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010791	i need restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010792	i want to search for restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010793	i need the closest QUOTED_STRING_0 to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010794	i would like restaurants which have higher review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010795	i want restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010796	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010797	i am looking for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010798	i would like to know the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010799	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010800	which QUOTED_STRING_0 has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010801	i want to search restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010802	search for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010803	get restaurants that have rating 2 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010804	i want reviews with date published after DATE_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010805	i am looking to get restaurant which have summary QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010806	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010807	i want to find restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010808	i want restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010809	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010810	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010811	i want restaurants having at most 8 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000010812	find restaurants which have fewer than 11 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 11 => notify
S5000010813	show me the distance from LOCATION_0 to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010814	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010815	i need restaurants that have no rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010816	i would like restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010817	please enumerate restaurants having review count not less than 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010818	i need reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000010819	i want to know the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010820	i need to search restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010821	get restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010822	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010823	i want to find restaurants having rating lower than 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010824	get the QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010825	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010826	search review with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000010827	search restaurants that have rating greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010828	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010829	i need restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010830	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010831	i would like to get restaurants which have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010832	show me what is the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010833	i would like restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010834	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010835	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010836	find restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010837	which restaurants get QUOTED_STRING_0 as description and serves QUOTED_STRING_1 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
S5000010838	list restaurant having more rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010839	i need restaurant with at least one reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010840	what are QUOTED_STRING_0 's reviews	now => ( ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Review ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Review) in_array param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) => notify
S5000010841	please find reviews which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010842	i would like to know the location of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010843	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010844	i need restaurant having postal code containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:address.postalCode:String =~ QUOTED_STRING_1 => notify
S5000010845	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010846	i am looking for the QUOTED_STRING_0 most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010847	i am looking to get restaurant which have more rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010848	i am looking for restaurants having over 2 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010849	i need the street and state of QUOTED_STRING_0	now => [ param:address.addressRegion:Entity(tt:us_state) , param:address.streetAddress:String ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) => notify
S5000010850	search the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010851	what are reviews which have sooner date published than DURATION_0 after tomorrow	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= end_of unit:day + DURATION_0 => notify
S5000010852	please retrieve restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010853	get restaurants having description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010854	please list restaurant having 2 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010855	i need restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010856	retrieve restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010857	what is the postal code of restaurants	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010858	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010859	i would like to know the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010860	find the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010861	find the summary and city of the farthest restaurants from LOCATION_0 .	now => [ param:address.addressLocality:String , param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000010862	what is the review count of restaurant ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010863	what are restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010864	get restaurants having 10 or less rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010865	where is the restaurant which have 12 or below review count	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 ) => notify
S5000010866	search for restaurants that have 7 or less review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010867	what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010868	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000010869	i would like review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010870	i need restaurant that have 3 or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010871	show me what is the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010872	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000010873	i want restaurant with at least one review .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 1 => notify
S5000010874	where are restaurant that have cuisine QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
S5000010875	give me the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010876	what are reviews with date published after DURATION_0 after next month	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= end_of unit:mon + DURATION_0 => notify
S5000010877	get restaurant nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010878	i need to search for restaurant that have review count 8 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010879	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000010880	which restaurant get over 2 rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010881	what are the reviews of restaurant ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010882	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010883	i need to get reviews having description including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010884	please list review which have later date published than DATE_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date >= DATE_0 => notify
S5000010885	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010886	i want the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010887	search restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010888	search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010889	tell me what is the description of restaurant .	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010890	get restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010891	where are the restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
S5000010892	give me the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010893	i need the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010894	tell me what 's the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010895	get restaurant having location here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010896	i am looking to search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010897	show me what is the description of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010898	get restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010899	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000010900	i am looking for restaurants having rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010901	get review having 4 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000010902	get restaurants having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010903	what is the address of restaurant ?	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010904	retrieve restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010905	search restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010906	get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010907	get restaurant that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010908	i need restaurants with smaller rating than 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000010909	what is the review count of restaurants ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010910	i am looking to find restaurants which have review count one	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000010911	get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010912	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000010913	get restaurants having description QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010914	i am looking to get reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010915	get restaurants having more than 11 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 11 => notify
S5000010916	get restaurant that have review count 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010917	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010918	i need restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010919	i want to search for restaurants having over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010920	what is the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010921	i want to know the state of restaurants .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010922	i need to find restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010923	which review have 4 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000010924	get restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010925	i would like to find restaurants that have review count not more than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010926	i want restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010927	what are the restaurant having review count not more than 9 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010928	please search restaurant which have review count larger than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010929	i need restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010930	i want to find restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010931	which are the restaurant which have no more than NUMBER_0 reviews and have address here ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
S5000010932	search the QUOTED_STRING_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010933	tell me what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010934	list restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010935	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010936	i am looking for restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010937	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010938	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010939	how close are the restaurant with the lowest review count	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Restaurant ) ) [ 1 ] ) ) => notify
S5000010940	list review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000010941	i need restaurants with QUOTED_STRING_0 in its description	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010942	i would like to know the price range of restaurant	now => [ param:priceRange:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010943	i need restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010944	i want the QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010945	enumerate restaurants that have 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000010946	i need to search restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010947	i would like the QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010948	retrieve restaurant around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010949	get reviews having QUOTED_STRING_0 in its summary .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010950	get restaurant having 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010951	i need to retrieve reviews which have 9 or below rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 9 => notify
S5000010952	i am looking to search for restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010953	please enumerate restaurants that have over 5 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010954	i need restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010955	tell me the summary of restaurant	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010956	retrieve reviews that have lower rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000010957	what are the restaurant having review count not more than 9 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010958	i want restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010959	list restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000010960	get restaurants which have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010961	show me the address of restaurants .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010962	get reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000010963	i want to find restaurants having greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010964	list restaurant in here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010965	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000010966	retrieve restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010967	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010968	i would like review with more rating than 7	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000010969	i need restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000010970	i am looking for restaurant having rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010971	search for restaurant having rating greater than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010972	retrieve the nearest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010973	which review get date published before DURATION_0 before today	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:datePublished:Date <= start_of unit:day - DURATION_0 => notify
S5000010974	i am looking for restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010975	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010976	search restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010977	get the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010978	i want restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000010979	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010980	what are the QUOTED_STRING_0 with review count at least 4	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000010981	get restaurant with over zero rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010982	retrieve restaurants nearby .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010983	get restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010984	please list reviews which have smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 10 => notify
S5000010985	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010986	i would like to search for review which have rating one .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 1 => notify
S5000010987	i am looking for restaurant which have review count not less than 6	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010988	what is the location of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010989	i am looking for restaurant which have lower review count than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 3 => notify
S5000010990	please enumerate reviews which have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000010991	what is the telephone of restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010992	what is how close restaurant is	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000010993	i want restaurant having rating 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010994	i am looking for restaurants having over 2 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010995	please search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000010996	give me the telephone of restaurant .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000010997	search restaurants which have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010998	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000010999	where is the restaurants which serves QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
S5000011000	get reviews without rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000011001	please retrieve review which have 7 or less rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000011002	retrieve restaurant which have more review count than 11 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011003	get restaurants that have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011004	where is restaurant that have review count lower than NUMBER_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
S5000011005	where is the restaurant having rating 10	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 ) => notify
S5000011006	i am looking to retrieve restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000011007	show me what 's the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011008	where is the most far away restaurant .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000011009	tell me what 's the distance to restaurant from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011010	what is the street of restaurants	now => [ param:address.streetAddress:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011011	retrieve the closest QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011012	search for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011013	list restaurants having more than 9 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 9 => notify
S5000011014	i am looking to get restaurant which have more rating than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000011015	get restaurant with greater review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000011016	which are the restaurant which do n't have more than NUMBER_0 reviews and have address here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
S5000011017	which restaurants have QUOTED_STRING_0 in the summary	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011018	i want to search restaurants which do n't have review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011019	i need to know the address of restaurants	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011020	i would like to get restaurant around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011021	get the nearest QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011022	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011023	tell me the review count of restaurant	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011024	i am looking to get restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011025	i want restaurant having one or higher review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011026	i would like the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011027	please search for restaurants in GENERIC_ENTITY_tt:country_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000011028	please enumerate restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011029	get reviews having QUOTED_STRING_0 in its summary	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011030	which are restaurant which have summary containing QUOTED_STRING_0 and having rating not less than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000011031	which QUOTED_STRING_0 has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011032	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011033	which are the restaurants having 5 or above review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000011034	i would like to find restaurants that have review count not more than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011035	i want restaurants that have rating 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011036	what QUOTED_STRING_0 gets the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011037	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011038	get restaurant that have zero reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000011039	enumerate restaurants having at most 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 8 => notify
S5000011040	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011041	which are restaurants around home that have summary QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
S5000011042	get restaurant having rating not more than one .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000011043	get restaurants in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011044	i need to find restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000011045	i need to retrieve review with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000011046	i am looking for review with 12 or more rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000011047	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011048	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000011049	please get restaurant having 12 or below review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000011050	get restaurant having less review count than 8	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000011051	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011052	i need restaurants around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011053	please retrieve review which have 7 or less rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 7 => notify
S5000011054	get restaurant that have zero reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 0 => notify
S5000011055	i would like to search for reviews with smaller rating than zero	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 0 => notify
S5000011056	i want to get restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011057	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011058	search review that have QUOTED_STRING_0 in the description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011059	retrieve reviews that have lower rating than 4 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000011060	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011061	please list restaurant that have rating 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000011062	list restaurant with smaller review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000011063	retrieve reviews that have description QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011064	get restaurant around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011065	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011066	please enumerate restaurant with rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000011067	tell me what is the distance from LOCATION_0 of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011068	get restaurant without fewer than 10 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) >= 10 => notify
S5000011069	i am looking for restaurants with address LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011070	list restaurants which have rating at least 5 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000011071	tell me what is the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011072	please retrieve restaurant which have 9 or less review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000011073	what is the distance to restaurant from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011074	retrieve restaurant which have more review count than 11	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011075	find restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000011076	i am looking for the QUOTED_STRING_0 closest to LOCATION_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011077	list reviews having rating 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000011078	i am looking to retrieve reviews that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 0 => notify
S5000011079	i want to search restaurants which have no review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011080	i want restaurants having rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000011081	what is the country of restaurant	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011082	please get reviews with less rating than 2	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 2 => notify
S5000011083	i am looking for the QUOTED_STRING_0 closest to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011084	show me what is the city of restaurant .	now => [ param:address.addressLocality:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011085	please retrieve restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011086	tell me what is the distance from where i 'm now of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011087	tell me what 's the distance from where i 'm now of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011088	i want to know the state of restaurants	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011089	i want to search for restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011090	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011091	give me the country of restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011092	get restaurants around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011093	enumerate restaurants that have 8 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 8 => notify
S5000011094	list restaurant having location here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011095	i am looking for review with rating smaller than 5 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 5 => notify
S5000011096	enumerate restaurants that have 1 or above review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011097	search the address of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011098	get reviews that have rating NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
S5000011099	tell me the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011100	i would like to know the distance of restaurant from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011101	i am looking to retrieve review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000011102	find restaurant with over 12 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000011103	i need restaurants which have 11 or greater review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011104	i am looking for restaurants with address LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011105	i would like restaurants that have lower rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000011106	what are the reviews of restaurant	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011107	tell me what is the telephone of restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011108	i am looking to search for restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000011109	show me what is the state of restaurant	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011110	i need restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000011111	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000011112	what QUOTED_STRING_0 has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011113	show me what 's the rating of restaurants	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011114	retrieve restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011115	tell me what is the distance from LOCATION_0 of restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011116	please get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011117	i want to find reviews having rating 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number == 12 => notify
S5000011118	get restaurant near here .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011119	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011120	i would like restaurant which have review count 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000011121	i am looking to search for review with more rating than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000011122	i need to search for review with 12 or more rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 12 => notify
S5000011123	get restaurant that have 3 or lower rating	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000011124	i need to find restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000011125	i want review having smaller rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000011126	i would like to search restaurants around work	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:work => notify
S5000011127	find restaurants around home .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000011128	retrieve restaurant having rating greater than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000011129	get reviews having description including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011130	show me what 's the description of reviews	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Review ) => notify
S5000011131	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011132	what is the distance from where i 'm now to restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) => notify
S5000011133	please list restaurant near here	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011134	i would like the rating of restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011135	i want the QUOTED_STRING_0 that is farthest from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011136	get the QUOTED_STRING_0 which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011137	i want the QUOTED_STRING_0 nearest to where i am now .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011138	search for restaurant with lower review count than 0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011139	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011140	where are the restaurant with description QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
S5000011141	get restaurants with review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000011142	i want review having lower rating than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 4 => notify
S5000011143	i want to search for restaurants that have over 6 review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000011144	i need to get restaurant that have larger rating than 10	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000011145	i need review which have QUOTED_STRING_0 as description .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
S5000011146	please list restaurant which have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000011147	get restaurants in GENERIC_ENTITY_tt:country_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 => notify
S5000011148	please list restaurants that have rating 2	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000011149	get restaurants having less rating than 1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000011150	search restaurant having cuisine including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000011151	i want to retrieve restaurant having review count larger than zero	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011152	i want to retrieve restaurant having review count larger than zero .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011153	what restaurant have 9 reviews and serves QUOTED_STRING_0 cuisine ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) == 9 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000011154	get restaurants having no more than 7 reviews	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000011155	show me what is the address of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011156	get reviews with rating more than 4	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000011157	search restaurants which have review count greater than 9	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000011158	get restaurant which have review count 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000011159	what are the reviews of restaurants	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011160	what is the postal code of restaurant ?	now => [ param:address.postalCode:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011161	what QUOTED_STRING_0 get rating equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 => notify
S5000011162	i am looking to search for review which have 9 or greater rating	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 9 => notify
S5000011163	tell me what 's the location of restaurant .	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011164	get restaurants having no more than 7 reviews .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter count ( param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ) <= 7 => notify
S5000011165	what restaurant have rating smaller than 0 and serves QUOTED_STRING_0 cuisine	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000011166	i would like to get restaurants around LOCATION_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011167	retrieve restaurant which have over 4 review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000011168	tell me what is the location of restaurant	now => [ param:geo:Location ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011169	what restaurants get summary containing QUOTED_STRING_0 and are in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 => notify
S5000011170	i want restaurant having cuisine being QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
S5000011171	list restaurants that have review count 0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011172	please enumerate restaurant with rating at least 5	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000011173	i need to find restaurants having rating 3 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000011174	get reviews which have over 4 rating .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 4 => notify
S5000011175	i would like restaurant around me .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011176	i am looking for restaurants nearby	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011177	i want restaurant having rating 1 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000011178	please search reviews having rating greater than 1	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 1 => notify
S5000011179	i am looking for restaurants with 11 or above rating .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000011180	get reviews with rating smaller than 6	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 6 => notify
S5000011181	please enumerate restaurant with description containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
S5000011182	list restaurant with rating 3	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000011183	please list restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 => notify
S5000011184	i would like restaurants around me	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011185	which is the farthest QUOTED_STRING_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011186	i want to find restaurant around LOCATION_0 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
S5000011187	get review having smaller rating than 12	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number <= 12 => notify
S5000011188	i want to search restaurants which do n't have review count	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011189	i am looking to search restaurant in this area	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011190	please enumerate restaurants with 12 or higher review count .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000011191	what is the postal code and location of the nearest restaurants to LOCATION_0	now => [ param:address.postalCode:String , param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , LOCATION_0 ) of ( @edu.stanford.cs294s.sierra.Restaurant ) ) ) [ 1 ] ) => notify
S5000011192	retrieve restaurants around home	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:home => notify
S5000011193	tell me what is the summary of restaurants	now => [ param:description:String ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011194	what are the reviews of restaurants ?	now => [ param:review:Array(Entity(edu.stanford.cs294s.sierra:Review)) ] of ( @edu.stanford.cs294s.sierra.Restaurant ) => notify
S5000011195	i want to retrieve review with more rating than 7 .	now => ( @edu.stanford.cs294s.sierra.Review ) filter param:reviewRating.ratingValue:Number >= 7 => notify
S5000011196	get restaurants in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
S5000011197	get restaurants with review count greater than 9 .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000011198	what QUOTED_STRING_0 has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:id:Entity(edu.stanford.cs294s.sierra:Restaurant) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011199	find restaurant in this area .	now => ( @edu.stanford.cs294s.sierra.Restaurant ) filter param:geo:Location == location:current_location => notify
