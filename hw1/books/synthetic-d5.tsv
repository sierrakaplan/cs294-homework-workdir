S3000000000	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000001	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000002	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000003	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000004	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000005	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000006	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000007	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000008	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000009	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000010	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000011	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000012	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000013	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000014	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000015	what are book ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000016	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000017	find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000018	i need to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000019	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000020	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000021	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000022	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000023	please search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000024	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000025	search book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000026	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000027	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000028	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000029	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000030	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000031	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000032	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000033	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000034	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000035	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000036	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000037	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000038	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000039	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000040	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000041	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000042	i am looking to find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000043	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000044	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000045	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000046	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000047	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000048	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000049	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000050	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000051	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000052	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000053	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000054	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000055	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000056	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000057	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000058	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000059	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000060	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000061	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000062	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000063	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000064	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000065	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000066	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000067	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000068	i would like to find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000069	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000070	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000071	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000072	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000073	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000074	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000075	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000076	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000077	i would like to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000078	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000079	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000080	which are book ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000081	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000082	please retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000083	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000084	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000085	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000086	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000087	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000088	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000089	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000090	list book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000091	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000092	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000093	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000094	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000095	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000096	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000097	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000098	list book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000099	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000100	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000101	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000102	enumerate books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000103	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000104	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000105	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000106	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000107	i want to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000108	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000109	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000110	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000111	i am looking to find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000112	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000113	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000114	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000115	i am looking to retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000116	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000117	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000118	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000119	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000120	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000121	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000122	i need to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000123	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000124	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000125	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000126	please retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000127	i would like to get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000128	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000129	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000130	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000131	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000132	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000133	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000134	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000135	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000136	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000137	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000138	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000139	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000140	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000141	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000142	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000143	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000144	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000145	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000146	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000147	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000148	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000149	please search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000150	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000151	i need to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000152	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000153	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000154	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000155	which are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000156	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000157	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000158	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000159	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000160	i am looking to find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000161	which are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000162	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000163	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000164	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000165	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000166	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000167	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000168	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000169	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000170	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000171	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000172	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000173	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000174	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000175	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000176	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000177	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000178	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000179	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000180	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000181	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000182	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000183	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000184	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000185	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000186	i would like to retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000187	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000188	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000189	please retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000190	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000191	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000192	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000193	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000194	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000195	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000196	i am looking to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000197	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000198	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000199	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000200	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000201	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000202	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000203	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000204	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000205	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000206	i need to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000207	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000208	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000209	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000210	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000211	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000212	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000213	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000214	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000215	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000216	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000217	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000218	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000219	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000220	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000221	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000222	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000223	please list person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000224	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000225	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000226	i would like to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000227	what are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000228	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000229	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000230	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000231	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000232	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000233	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000234	i am looking to find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000235	i am looking to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000236	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000237	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000238	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000239	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000240	list book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000241	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000242	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000243	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000244	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000245	please enumerate book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000246	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000247	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000248	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000249	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000250	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000251	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000252	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000253	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000254	please find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000255	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000256	i want books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000257	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000258	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000259	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000260	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000261	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000262	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000263	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000264	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000265	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000266	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000267	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000268	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000269	i would like to find person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000270	i am looking to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000271	which are book ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000272	please find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000273	i need to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000274	i need to retrieve person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000275	search person .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000276	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000277	i want books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000278	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000279	i need to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000280	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000281	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000282	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000283	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000284	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000285	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000286	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000287	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000288	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000289	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000290	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000291	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000292	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000293	please get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000294	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000295	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000296	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000297	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000298	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000299	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000300	please retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000301	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000302	what are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000303	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000304	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000305	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000306	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000307	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000308	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000309	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000310	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000311	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000312	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000313	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000314	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000315	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000316	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000317	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000318	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000319	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000320	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000321	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000322	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000323	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000324	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000325	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000326	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000327	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000328	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000329	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000330	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000331	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000332	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000333	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000334	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000335	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000336	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000337	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000338	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000339	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000340	i want to get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000341	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000342	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000343	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000344	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000345	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000346	please find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000347	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000348	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000349	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000350	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000351	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000352	i need to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000353	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000354	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000355	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000356	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000357	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000358	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000359	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000360	please find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000361	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000362	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000363	i need to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000364	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000365	i want book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000366	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000367	which are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000368	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000369	i am looking for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000370	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000371	which are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000372	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000373	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000374	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000375	i need to retrieve person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000376	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000377	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000378	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000379	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000380	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000381	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000382	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000383	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000384	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000385	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000386	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000387	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000388	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000389	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000390	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000391	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000392	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000393	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000394	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000395	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000396	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000397	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000398	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000399	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000400	find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000401	please search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000402	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000403	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000404	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000405	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000406	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000407	enumerate books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000408	i am looking to find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000409	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000410	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000411	i would like to find person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000412	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000413	i am looking to retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000414	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000415	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000416	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000417	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000418	i am looking for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000419	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000420	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000421	i would like to get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000422	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000423	i need to get person .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000424	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000425	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000426	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000427	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000428	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000429	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000430	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000431	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000432	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000433	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000434	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000435	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000436	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000437	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000438	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000439	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000440	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000441	what are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000442	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000443	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000444	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000445	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000446	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000447	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000448	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000449	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000450	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000451	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000452	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000453	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000454	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000455	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000456	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000457	i would like to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000458	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000459	i would like to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000460	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000461	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000462	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000463	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000464	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000465	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000466	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000467	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000468	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000469	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000470	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000471	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000472	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000473	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000474	i need to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000475	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000476	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000477	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000478	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000479	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000480	i am looking to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000481	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000482	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000483	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000484	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000485	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000486	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000487	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000488	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000489	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000490	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000491	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000492	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000493	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000494	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000495	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000496	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000497	i would like to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000498	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000499	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000500	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000501	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000502	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000503	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000504	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000505	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000506	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000507	i need to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000508	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000509	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000510	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000511	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000512	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000513	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000514	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000515	i want person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000516	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000517	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000518	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000519	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000520	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000521	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000522	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000523	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000524	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000525	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000526	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000527	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000528	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000529	i am looking to retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000530	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000531	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000532	i am looking to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000533	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000534	i need to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000535	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000536	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000537	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000538	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000539	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000540	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000541	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000542	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000543	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000544	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000545	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000546	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000547	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000548	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000549	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000550	find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000551	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000552	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000553	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000554	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000555	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000556	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000557	please enumerate book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000558	i would like to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000559	please search for book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000560	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000561	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000562	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000563	i want to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000564	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000565	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000566	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000567	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000568	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000569	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000570	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000571	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000572	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000573	please list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000574	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000575	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000576	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000577	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000578	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000579	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000580	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000581	please retrieve book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000582	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000583	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000584	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000585	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000586	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000587	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000588	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000589	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000590	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000591	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000592	i need to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000593	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000594	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000595	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000596	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000597	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000598	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000599	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000600	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000601	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000602	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000603	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000604	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000605	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000606	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000607	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000608	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000609	i am looking to search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000610	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000611	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000612	please search book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000613	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000614	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000615	i would like to get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000616	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000617	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000618	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000619	i want to find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000620	i would like to get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000621	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000622	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000623	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000624	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000625	i am looking to find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000626	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000627	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000628	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000629	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000630	please list book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000631	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000632	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000633	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000634	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000635	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000636	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000637	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000638	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000639	enumerate books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000640	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000641	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000642	list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000643	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000644	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000645	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000646	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000647	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000648	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000649	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000650	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000651	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000652	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000653	i would like to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000654	i want to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000655	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000656	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000657	please retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000658	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000659	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000660	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000661	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000662	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000663	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000664	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000665	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000666	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000667	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000668	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000669	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000670	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000671	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000672	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000673	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000674	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000675	please find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000676	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000677	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000678	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000679	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000680	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000681	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000682	i would like to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000683	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000684	which are book ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000685	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000686	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000687	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000688	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000689	please search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000690	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000691	i want to get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000692	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000693	search book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000694	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000695	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000696	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000697	i am looking for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000698	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000699	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000700	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000701	i would like to get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000702	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000703	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000704	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000705	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000706	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000707	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000708	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000709	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000710	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000711	which are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000712	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000713	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000714	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000715	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000716	please list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000717	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000718	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000719	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000720	what are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000721	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000722	which are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000723	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000724	what are book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000725	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000726	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000727	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000728	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000729	i would like to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000730	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000731	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000732	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000733	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000734	i would like to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000735	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000736	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000737	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000738	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000739	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000740	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000741	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000742	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000743	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000744	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000745	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000746	i would like to get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000747	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000748	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000749	get person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000750	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000751	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000752	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000753	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000754	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000755	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000756	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000757	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000758	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000759	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000760	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000761	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000762	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000763	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000764	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000765	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000766	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000767	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000768	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000769	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000770	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000771	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000772	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000773	i am looking to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000774	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000775	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000776	which are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000777	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000778	find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000779	i am looking to find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000780	i would like to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000781	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000782	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000783	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000784	please retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000785	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000786	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000787	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000788	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000789	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000790	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000791	which are book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000792	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000793	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000794	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000795	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000796	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000797	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000798	i am looking to find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000799	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000800	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000801	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000802	i am looking to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000803	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000804	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000805	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000806	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000807	i need to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000808	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000809	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000810	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000811	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000812	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000813	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000814	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000815	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000816	i need to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000817	please search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000818	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000819	please find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000820	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000821	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000822	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000823	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000824	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000825	i would like to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000826	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000827	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000828	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000829	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000830	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000831	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000832	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000833	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000834	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000835	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000836	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000837	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000838	please list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000839	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000840	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000841	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000842	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000843	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000844	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000845	please get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000846	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000847	what are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000848	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000849	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000850	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000851	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000852	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000853	i am looking for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000854	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000855	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000856	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000857	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000858	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000859	i am looking to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000860	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000861	i am looking to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000862	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000863	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000864	please search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000865	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000866	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000867	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000868	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000869	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000870	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000871	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000872	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000873	please search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000874	i want to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000875	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000876	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000877	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000878	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000879	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000880	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000881	i would like to search for person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000882	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000883	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000884	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000885	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000886	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000887	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000888	what are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000889	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000890	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000891	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000892	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000893	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000894	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000895	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000896	i would like books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000897	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000898	i am looking to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000899	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000900	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000901	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000902	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000903	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000904	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000905	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000906	i am looking to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000907	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000908	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000909	enumerate books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000910	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000911	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000912	i need to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000913	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000914	i would like to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000915	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000916	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000917	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000918	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000919	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000920	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000921	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000922	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000923	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000924	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000925	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000926	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000927	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000928	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000929	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000930	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000931	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000932	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000933	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000934	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000935	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000936	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000937	i need to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000938	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000939	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000940	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000941	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000942	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000943	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000944	i want to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000945	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000946	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000947	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000948	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000949	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000950	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000951	i am looking for book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000952	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000953	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000954	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000955	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000956	search book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000957	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000958	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000959	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000960	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000961	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000962	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000963	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000964	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000965	i would like to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000966	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000967	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000968	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000969	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000970	i am looking for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000971	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000972	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000973	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000974	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000975	enumerate books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000976	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000977	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000978	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000979	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000980	find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000981	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000982	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000983	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000984	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000985	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000986	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000987	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000988	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000989	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000990	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000991	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000992	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000993	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000994	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000000995	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000996	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000997	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000998	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000000999	i want to search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001000	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001001	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001002	i am looking to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001003	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001004	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001005	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001006	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001007	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001008	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001009	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001010	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001011	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001012	what are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001013	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001014	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001015	what are book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001016	i want book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001017	i need to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001018	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001019	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001020	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001021	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001022	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001023	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001024	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001025	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001026	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001027	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001028	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001029	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001030	please retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001031	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001032	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001033	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001034	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001035	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001036	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001037	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001038	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001039	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001040	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001041	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001042	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001043	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001044	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001045	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001046	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001047	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001048	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001049	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001050	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001051	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001052	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001053	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001054	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001055	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001056	search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001057	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001058	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001059	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001060	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001061	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001062	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001063	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001064	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001065	which are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001066	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001067	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001068	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001069	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001070	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001071	i am looking to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001072	i need to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001073	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001074	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001075	i am looking for book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001076	i would like to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001077	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001078	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001079	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001080	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001081	i want to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001082	i want to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001083	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001084	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001085	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001086	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001087	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001088	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001089	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001090	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001091	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001092	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001093	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001094	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001095	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001096	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001097	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001098	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001099	i am looking to search books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001100	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001101	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001102	i am looking to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001103	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001104	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001105	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001106	i want books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001107	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001108	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001109	list book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001110	list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001111	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001112	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001113	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001114	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001115	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001116	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001117	i am looking for book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001118	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001119	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001120	please search book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001121	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001122	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001123	which are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001124	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001125	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001126	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001127	i want to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001128	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001129	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001130	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001131	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001132	search book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001133	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001134	which are person ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001135	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001136	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001137	i am looking to retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001138	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001139	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001140	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001141	retrieve book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001142	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001143	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001144	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001145	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001146	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001147	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001148	i am looking for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001149	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001150	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001151	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001152	please list person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001153	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001154	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001155	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001156	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001157	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001158	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001159	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001160	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001161	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001162	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001163	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001164	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001165	which are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001166	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001167	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001168	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001169	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001170	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001171	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001172	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001173	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001174	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001175	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001176	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001177	retrieve book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001178	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001179	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001180	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001181	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001182	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001183	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001184	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001185	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001186	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001187	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001188	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001189	please get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001190	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001191	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001192	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001193	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001194	i would like to search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001195	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001196	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001197	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001198	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001199	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001200	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001201	list book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001202	search person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001203	search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001204	i am looking to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001205	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001206	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001207	i want books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001208	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001209	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001210	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001211	please retrieve book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001212	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001213	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001214	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001215	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001216	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001217	i am looking to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001218	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001219	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001220	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001221	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001222	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001223	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001224	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001225	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001226	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001227	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001228	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001229	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001230	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001231	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001232	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001233	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001234	what are book ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001235	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001236	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001237	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001238	i am looking to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001239	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001240	i am looking to search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001241	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001242	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001243	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001244	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001245	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001246	i need to get person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001247	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001248	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001249	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001250	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001251	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001252	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001253	i want to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001254	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001255	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001256	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001257	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001258	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001259	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001260	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001261	i am looking for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001262	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001263	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001264	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001265	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001266	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001267	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001268	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001269	i need to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001270	which are books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001271	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001272	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001273	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001274	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001275	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001276	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001277	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001278	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001279	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001280	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001281	search book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001282	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001283	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001284	i am looking to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001285	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001286	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001287	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001288	i want to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001289	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001290	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001291	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001292	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001293	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001294	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001295	what are the books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001296	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001297	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001298	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001299	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001300	list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001301	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001302	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001303	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001304	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001305	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001306	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001307	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001308	i want books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001309	i am looking to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001310	i am looking to find books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001311	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001312	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001313	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001314	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001315	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001316	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001317	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001318	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001319	i would like to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001320	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001321	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001322	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001323	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001324	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001325	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001326	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001327	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001328	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001329	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001330	please get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001331	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001332	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001333	search book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001334	i am looking for person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001335	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001336	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001337	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001338	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001339	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001340	retrieve book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001341	i would like to retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001342	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001343	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001344	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001345	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001346	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001347	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001348	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001349	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001350	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001351	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001352	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001353	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001354	i want to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001355	what are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001356	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001357	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001358	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001359	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001360	i would like to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001361	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001362	i need to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001363	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001364	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001365	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001366	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001367	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001368	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001369	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001370	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001371	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001372	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001373	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001374	list book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001375	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001376	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001377	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001378	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001379	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001380	please get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001381	i am looking for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001382	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001383	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001384	i need to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001385	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001386	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001387	i am looking to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001388	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001389	which are the book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001390	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001391	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001392	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001393	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001394	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001395	search for book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001396	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001397	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001398	search book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001399	please search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001400	i need to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001401	find books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001402	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001403	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001404	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001405	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001406	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001407	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001408	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001409	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001410	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001411	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001412	please search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001413	i am looking to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001414	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001415	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001416	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001417	i need to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001418	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001419	which are book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001420	what are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001421	list book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001422	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001423	enumerate books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001424	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001425	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001426	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001427	please search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001428	please find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001429	i am looking for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001430	please search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001431	i am looking to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001432	i am looking for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001433	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001434	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001435	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001436	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001437	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001438	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001439	i need books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001440	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001441	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001442	i am looking to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001443	i need to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001444	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001445	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001446	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001447	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001448	please enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001449	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001450	i am looking to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001451	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001452	search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001453	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001454	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001455	which are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001456	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001457	i want to search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001458	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001459	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001460	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001461	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001462	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001463	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001464	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001465	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001466	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001467	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001468	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001469	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001470	please enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001471	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001472	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001473	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001474	retrieve books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001475	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001476	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001477	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001478	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001479	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001480	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001481	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001482	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001483	what are books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001484	i am looking for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001485	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001486	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001487	please list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001488	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001489	enumerate people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001490	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001491	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001492	i would like to retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001493	i am looking for book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001494	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001495	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001496	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001497	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001498	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001499	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001500	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001501	i am looking to search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001502	please list books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001503	what are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001504	please find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001505	search person	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001506	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001507	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001508	find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001509	list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001510	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001511	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001512	search books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001513	i want to search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001514	get book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001515	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001516	what are the books ?	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001517	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001518	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001519	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001520	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001521	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001522	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001523	get book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001524	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001525	list people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001526	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001527	i would like to search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001528	which are people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001529	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001530	what are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001531	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001532	please get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001533	enumerate people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001534	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001535	please search for books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001536	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001537	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001538	i want books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001539	which are the people ?	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001540	i would like to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001541	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001542	i want people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001543	search for people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001544	i need to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001545	i want to get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001546	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001547	get person .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001548	i need people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001549	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001550	find book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001551	please retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001552	get people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001553	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001554	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001555	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001556	search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001557	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001558	i would like book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001559	get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001560	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001561	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001562	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001563	i need people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001564	get person .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001565	retrieve books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001566	get books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001567	get books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001568	i would like book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001569	retrieve people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001570	which are the people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001571	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001572	what are book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001573	i would like to find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001574	i would like book .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001575	please list people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001576	search people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001577	i want person .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001578	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001579	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001580	retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001581	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001582	i want people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001583	please retrieve people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001584	what are people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001585	i would like people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001586	search for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001587	i want to get people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001588	i need books	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001589	i would like books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001590	find people .	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001591	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001592	i need to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001593	please list books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001594	i would like to find people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001595	i am looking to search for books .	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001596	find book	now => @edu.stanford.cs294s.sierrakn.Book => notify
S3000001597	i am looking for people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001598	please search people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S3000001599	i would like people	now => @edu.stanford.cs294s.sierrakn.Person => notify
S4000001600	i need the book with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001601	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001602	i would like the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001603	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001604	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001605	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001606	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001607	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001608	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001609	give me the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001610	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001611	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001612	i would like the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001613	what is both the url and isbn of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001614	which are the books with number of pages 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 12 => notify
S4000001615	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001616	i would like to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001617	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001618	i need the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001619	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001620	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001621	retrieve the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001622	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001623	what is both the rating and image of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001624	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001625	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001626	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001627	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001628	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001629	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001630	what is the book format and isbn of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001631	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001632	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001633	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001634	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001635	what is the books with the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001636	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001637	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001638	i want the book which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001639	get the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001640	search for the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001641	show me both the image and url of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001642	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001643	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001644	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001645	search for the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001646	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001647	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001648	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001649	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000001650	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001651	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001652	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001653	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001654	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001655	i am looking for the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001656	i need the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001657	what is the image and in language of books	now => [ param:image:Entity(tt:picture) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001658	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001659	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001660	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001661	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001662	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001663	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001664	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001665	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001666	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001667	i need to know the book format and author of books .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001668	i want the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001669	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001670	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001671	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001672	what is both the book edition and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001673	which books has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001674	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001675	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001676	retrieve the books with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001677	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001678	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001679	i would like to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001680	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001681	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001682	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001683	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001684	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001685	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001686	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001687	which is the books with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001688	search the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001689	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001690	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001691	what book has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001692	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001693	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001694	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001695	search both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001696	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001697	get the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001698	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001699	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001700	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001701	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001702	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001703	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001704	what is both the link and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001705	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001706	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001707	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001708	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001709	i would like the book which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001710	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001711	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001712	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001713	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001714	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001715	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001716	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001717	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001718	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001719	search for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001720	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001721	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001722	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001723	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001724	search for the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001725	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001726	what is the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001727	search the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001728	find the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001729	what is the in language and url of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001730	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001731	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001732	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001733	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001734	what is the image and link of book ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001735	i need the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001736	retrieve the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001737	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001738	i need the book with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001739	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001740	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001741	what book get 0 or lower review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000001742	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001743	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001744	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001745	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001746	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001747	what are the book having rating count at least 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S4000001748	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001749	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001750	which books have rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S4000001751	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001752	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001753	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001754	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001755	what is both the url and book edition of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001756	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001757	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001758	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001759	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001760	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001761	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001762	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001763	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001764	give me both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001765	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001766	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001767	which are book that have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S4000001768	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001769	what is the image and link of book ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001770	which are book which have higher number of pages than 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S4000001771	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001772	what is the books which has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001773	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001774	search the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001775	what is both the image and book edition of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001776	what are book having 4 awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S4000001777	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001778	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001779	retrieve the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001780	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001781	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001782	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001783	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001784	i am looking for the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001785	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001786	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001787	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001788	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001789	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001790	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001791	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001792	what is both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001793	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001794	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001795	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001796	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001797	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001798	what is both the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001799	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001800	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001801	i want the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001802	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001803	which is the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001804	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001805	what is both the rating count and url of book ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001806	i need the book with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001807	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001808	i need the book with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001809	what is the book edition and url of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001810	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001811	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001812	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001813	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001814	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001815	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001816	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001817	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001818	what is the image and isbn of books ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001819	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001820	i need the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001821	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001822	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001823	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001824	i am looking for the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001825	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001826	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001827	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001828	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001829	what is the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001830	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001831	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001832	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001833	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001834	give me both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001835	get the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001836	search for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001837	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001838	retrieve the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001839	i am looking for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001840	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001841	get the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001842	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001843	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001844	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001845	which are book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S4000001846	i would like the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001847	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001848	search for the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001849	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001850	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001851	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001852	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001853	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001854	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001855	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001856	search for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001857	find the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001858	search the books which has the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001859	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001860	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001861	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001862	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001863	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001864	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001865	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001866	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001867	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001868	get the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001869	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001870	i would like the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001871	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001872	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001873	show me both the isbn and book edition of books	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001874	search the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001875	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001876	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001877	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001878	i am looking for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001879	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001880	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001881	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001882	i would like the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001883	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001884	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001885	which book get NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S4000001886	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001887	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001888	what is the url and in language of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001889	what are book with rating count 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 => notify
S4000001890	i need the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001891	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001892	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001893	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001894	search the book with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001895	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001896	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001897	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001898	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001899	i need the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001900	what is the image and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001901	what are the books with 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S4000001902	what is the link and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001903	search the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001904	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001905	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001906	which books get 1 or above number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S4000001907	i would like the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001908	what book get 0 or lower review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000001909	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001910	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001911	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001912	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001913	count the books	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001914	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001915	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001916	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001917	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001918	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001919	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001920	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001921	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001922	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001923	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001924	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001925	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001926	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001927	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001928	retrieve the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001929	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001930	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001931	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001932	i would like the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001933	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001934	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001935	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001936	retrieve the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001937	find the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001938	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001939	what is both the rating count and url of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001940	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001941	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001942	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001943	i want the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001944	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001945	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001946	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001947	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001948	i need the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001949	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001950	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001951	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001952	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001953	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001954	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001955	i am looking for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001956	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001957	search the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001958	which are books having 10 or more number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S4000001959	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001960	what is both the rating and in language of book	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001961	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001962	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001963	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001964	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001965	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001966	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001967	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001968	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001969	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001970	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001971	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000001972	i want the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001973	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001974	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001975	find the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001976	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001977	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001978	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001979	what is the review count and book format of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001980	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001981	what is the review count and rating count of books ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000001982	get the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001983	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001984	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001985	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000001986	search the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001987	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001988	i am looking for the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000001989	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001990	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001991	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001992	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001993	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001994	get the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001995	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001996	search for the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001997	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000001998	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000001999	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002000	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002001	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002002	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002003	retrieve the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002004	search for the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002005	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002006	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002007	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002008	what book gets the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002009	what are the books having review count at least 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S4000002010	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002011	i need the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002012	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002013	what is the image and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002014	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002015	what is the url and book format of book ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002016	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002017	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002018	find the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002019	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002020	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002021	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002022	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002023	what is the number of pages and in language of books	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002024	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002025	what is both the image and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002026	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002027	i need the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002028	which are books having 10 or more number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S4000002029	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002030	find the book which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002031	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002032	what is both the link and in language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002033	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002034	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002035	which book get rating at most 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S4000002036	what is both the book format and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002037	what is the in language and url of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002038	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002039	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002040	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002041	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002042	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002043	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002044	what is both the url and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002045	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002046	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002047	i am looking for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002048	search the books which has the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002049	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002050	which are books that have zero rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S4000002051	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002052	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002053	what is both the url and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002054	get the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002055	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002056	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002057	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002058	i am looking for the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002059	i need to know the book format and author of books .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002060	i would like the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002061	count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002062	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002063	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002064	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002065	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002066	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002067	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002068	i want the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002069	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002070	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002071	get the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002072	which is the books which has the minimum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002073	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002074	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002075	what is both the review count and url of book ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002076	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002077	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002078	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002079	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002080	which books gets the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002081	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002082	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002083	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002084	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002085	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002086	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002087	what books has the lowest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002088	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002089	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002090	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002091	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002092	i would like to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002093	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002094	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002095	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002096	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002097	what is the number of pages and rating count of book	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002098	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002099	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002100	retrieve the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002101	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002102	which books get rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S4000002103	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002104	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002105	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002106	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002107	what is both the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002108	what is the review count and book edition of book	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002109	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002110	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002111	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002112	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002113	what is both the link and review count of book ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002114	retrieve the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002115	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002116	i am looking for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002117	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002118	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002119	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002120	what is both the book format and url of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002121	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002122	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002123	search the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002124	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002125	search the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002126	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002127	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002128	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002129	what is both the image and isbn of books ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002130	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002131	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002132	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002133	i am looking for the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002134	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002135	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002136	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002137	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002138	get the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002139	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002140	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002141	which is the books which has the lowest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002142	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002143	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002144	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002145	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002146	what is the number of pages and url of book	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002147	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002148	search the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002149	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002150	what is the rating and author of books ?	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002151	what is the image and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002152	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002153	what is the rating count and isbn of books ?	now => [ param:aggregateRating.ratingCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002154	get the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002155	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002156	which book get rating greater than 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S4000002157	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002158	find the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002159	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002160	what are the book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000002161	i would like the books which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002162	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002163	find the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002164	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002165	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002166	i want the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002167	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002168	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002169	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002170	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002171	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002172	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002173	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002174	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002175	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002176	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002177	i want the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002178	i need the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002179	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002180	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002181	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002182	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002183	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002184	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002185	i need the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002186	what is the isbn and image of book ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002187	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002188	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002189	i want the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002190	i need the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002191	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002192	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002193	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002194	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002195	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002196	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002197	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002198	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002199	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002200	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002201	find the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002202	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002203	get the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002204	retrieve the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002205	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002206	i want the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002207	find the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002208	i need the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002209	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002210	what is the book format and link of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002211	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002212	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002213	what is both the in language and book edition of books ?	now => [ param:bookEdition:String , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002214	which is the book which has the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002215	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002216	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002217	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002218	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002219	which book have zero or below review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000002220	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002221	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002222	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002223	which are the books which have QUOTED_STRING_0 as book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S4000002224	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002225	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002226	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002227	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002228	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002229	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002230	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002231	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002232	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002233	what books gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002234	what is the review count and link of books ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002235	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002236	what book get lower number of pages than 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 8 => notify
S4000002237	which are the book which have 2 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S4000002238	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002239	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002240	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002241	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002242	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002243	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002244	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002245	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002246	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002247	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002248	i would like the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002249	i want the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002250	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002251	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002252	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002253	which are the books having 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S4000002254	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002255	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002256	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002257	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002258	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002259	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002260	what are book having QUOTED_STRING_0 in their book edition ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S4000002261	i want the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002262	what books get greater rating than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S4000002263	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002264	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002265	search for the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002266	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002267	search for the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002268	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002269	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002270	which book has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002271	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002272	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002273	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002274	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002275	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002276	find the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002277	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002278	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002279	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002280	i am looking for the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002281	get the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002282	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002283	what is the url and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002284	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002285	find the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002286	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002287	get the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002288	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002289	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002290	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002291	what books get higher review count than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S4000002292	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002293	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002294	what is the rating count and number of pages of books ?	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002295	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002296	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002297	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002298	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002299	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002300	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002301	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002302	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002303	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002304	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002305	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002306	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002307	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002308	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002309	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002310	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002311	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002312	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002313	which is the books with the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002314	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002315	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002316	which is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002317	what is the book edition and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002318	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002319	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002320	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002321	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002322	what is the link and rating count of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002323	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002324	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002325	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002326	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002327	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002328	i would like the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002329	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002330	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002331	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002332	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002333	which are the book that have 11 or less rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S4000002334	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002335	what is the rating count and url of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002336	which books gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002337	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002338	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002339	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002340	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002341	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002342	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002343	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002344	what is both the link and rating of book ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002345	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002346	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002347	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002348	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002349	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002350	search the books which has the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002351	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002352	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002353	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002354	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002355	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002356	what are book having rating count more than 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S4000002357	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002358	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002359	find the rating count and number of pages of books	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002360	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002361	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002362	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002363	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002364	what is both the link and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002365	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002366	which are the books having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S4000002367	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002368	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002369	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002370	give me the url and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002371	search the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002372	which are the books which have over zero review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S4000002373	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002374	which are the book that have 11 or less rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S4000002375	search the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002376	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002377	i need the book with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002378	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002379	what is the link and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002380	get the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002381	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002382	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002383	which are books with review count at most 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S4000002384	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002385	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002386	which are book with over 1 rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000002387	i want the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002388	what is both the rating and in language of books ?	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002389	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002390	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002391	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002392	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002393	i want the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002394	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002395	find the rating count and number of pages of books	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002396	i need the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002397	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002398	search for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002399	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002400	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002401	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002402	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002403	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002404	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002405	what books has the lowest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002406	retrieve the book with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002407	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002408	what is the link and book format of book ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002409	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002410	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002411	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002412	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002413	i would like the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002414	get the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002415	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002416	give me both the link and image of book .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002417	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002418	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002419	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002420	which are the books that have review count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S4000002421	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002422	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002423	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002424	retrieve the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002425	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002426	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002427	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002428	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002429	what are the books which have lower review count than 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S4000002430	what are book that have rating NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S4000002431	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002432	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002433	what is the author and in language of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002434	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002435	what is both the book edition and number of pages of books ?	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002436	what is both the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002437	what is both the number of pages and rating of book ?	now => [ param:aggregateRating.ratingValue:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002438	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002439	what is the image and book edition of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002440	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002441	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002442	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002443	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000002444	what are book with over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000002445	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002446	i want the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002447	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002448	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002449	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002450	give me the image and url of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002451	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002452	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002453	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002454	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002455	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002456	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002457	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002458	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002459	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002460	what book get 0 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S4000002461	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002462	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002463	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002464	what is the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002465	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002466	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002467	what is the isbn and link of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002468	what is the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002469	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000002470	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002471	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002472	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002473	give me both the link and image of book .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002474	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002475	what is both the review count and image of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002476	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002477	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002478	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002479	get the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002480	which is the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002481	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002482	retrieve the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002483	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002484	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002485	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002486	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002487	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002488	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002489	i need the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002490	search the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002491	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002492	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002493	i would like to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002494	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002495	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002496	what is both the image and url of book ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002497	retrieve the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002498	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002499	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002500	which is the books with the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002501	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002502	i am looking for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002503	get the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002504	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002505	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002506	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002507	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002508	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002509	what are the book that have number of pages smaller than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S4000002510	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002511	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002512	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002513	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002514	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002515	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002516	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002517	retrieve the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002518	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002519	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002520	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002521	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002522	i am looking for the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002523	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002524	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002525	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002526	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002527	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002528	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002529	what is the image and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002530	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002531	which is the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002532	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002533	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002534	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002535	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002536	which is the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002537	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002538	retrieve the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002539	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002540	i want the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002541	what is both the image and book edition of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002542	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002543	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002544	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002545	i would like the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002546	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002547	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002548	what is the rating count and book edition of books ?	now => [ param:aggregateRating.ratingCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002549	which is the book which has the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002550	get the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002551	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002552	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002553	which are the books with number of pages 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 12 => notify
S4000002554	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002555	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002556	i am looking for the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002557	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002558	retrieve the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002559	show me both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002560	i want the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002561	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002562	get the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002563	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002564	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002565	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002566	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002567	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002568	what is both the image and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002569	how many awards do book have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000002570	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002571	what is both the rating count and url of book	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002572	get the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002573	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002574	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002575	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002576	retrieve the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002577	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002578	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002579	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002580	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002581	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002582	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002583	search the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002584	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002585	what is the link and in language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002586	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002587	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002588	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002589	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002590	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002591	retrieve the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002592	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002593	which is the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002594	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002595	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002596	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002597	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002598	i am looking for the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002599	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002600	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002601	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002602	what is the number of pages and rating count of book ?	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002603	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002604	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002605	what is the books with the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002606	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002607	search for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002608	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002609	which are the books having larger rating count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S4000002610	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002611	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002612	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002613	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002614	give me the url and author of books .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002615	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002616	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002617	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002618	retrieve the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002619	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002620	what books has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002621	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002622	which are the book that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S4000002623	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002624	get the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002625	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002626	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002627	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002628	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002629	what is the image and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002630	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002631	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002632	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002633	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002634	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002635	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002636	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002637	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002638	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002639	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002640	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002641	what is the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002642	which books get 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S4000002643	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002644	retrieve the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002645	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002646	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002647	which books gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002648	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002649	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002650	what is both the url and number of pages of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002651	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002652	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002653	what is the link and book format of book	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002654	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002655	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002656	i need the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002657	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002658	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002659	search both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002660	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002661	what is both the url and book edition of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002662	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002663	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002664	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002665	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002666	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002667	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002668	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002669	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002670	i am looking for the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002671	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002672	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002673	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002674	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002675	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002676	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002677	what is both the number of pages and link of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002678	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002679	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002680	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002681	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002682	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002683	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002684	search for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002685	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002686	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002687	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002688	i need the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002689	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002690	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002691	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002692	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002693	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002694	i need the book with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002695	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002696	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002697	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002698	which are the books which have review count greater than 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S4000002699	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002700	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002701	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002702	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002703	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002704	what is the book format and in language of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002705	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002706	what book has the minimum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002707	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002708	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002709	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002710	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002711	what is the link and number of pages of book ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002712	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002713	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002714	which is the book with the lowest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002715	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002716	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002717	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002718	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002719	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002720	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002721	search for the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002722	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002723	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002724	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002725	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002726	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002727	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002728	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002729	what is both the book format and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002730	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002731	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002732	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002733	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002734	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002735	what is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002736	what books gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002737	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002738	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002739	i would like the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002740	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002741	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002742	what are the books with more rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000002743	i am looking for the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002744	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002745	which books have book format paperback ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S4000002746	i need the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002747	i would like the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002748	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002749	what is the link and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002750	give me the image and url of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002751	i need the book with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002752	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002753	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002754	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002755	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002756	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002757	get the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002758	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002759	i need the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002760	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002761	get the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002762	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002763	what is the isbn and number of pages of book	now => [ param:isbn:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002764	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002765	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002766	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002767	what is both the book format and book edition of books ?	now => [ param:bookEdition:String , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002768	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002769	find the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002770	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002771	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002772	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002773	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002774	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002775	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002776	search for the book with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002777	what is both the book format and image of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002778	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002779	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002780	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002781	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002782	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002783	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002784	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002785	what is both the url and number of pages of book	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002786	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002787	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002788	search the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002789	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002790	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002791	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002792	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002793	what book get greater rating count than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S4000002794	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002795	i need the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002796	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002797	what is the book format and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002798	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002799	which are book that have greater rating count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S4000002800	retrieve the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002801	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002802	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002803	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002804	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002805	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002806	which books gets the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002807	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002808	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002809	i need the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002810	which books gets the maximum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002811	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002812	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002813	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002814	what is the image and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002815	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002816	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002817	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002818	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002819	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002820	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002821	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002822	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002823	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002824	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002825	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002826	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002827	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002828	what are book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S4000002829	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002830	retrieve the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002831	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002832	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002833	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002834	i need the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002835	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002836	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002837	which is the books with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002838	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002839	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002840	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002841	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002842	what is both the image and rating count of book ?	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002843	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002844	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002845	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002846	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002847	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002848	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002849	i want the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002850	what is both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002851	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002852	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002853	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002854	i am looking for the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002855	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002856	what are the book that have rating count more than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S4000002857	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002858	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002859	which are the books which have review count at most 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S4000002860	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002861	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002862	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002863	what book get 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S4000002864	what are the books with number of pages greater than 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S4000002865	what is both the link and in language of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002866	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002867	which is the books which has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002868	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002869	what is the book with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002870	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002871	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002872	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002873	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002874	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002875	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002876	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002877	what is the image and url of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002878	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002879	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002880	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002881	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002882	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002883	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002884	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002885	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002886	what are books having 1 or below number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S4000002887	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002888	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002889	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002890	what is the in language and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002891	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002892	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002893	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002894	show me both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002895	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002896	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002897	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002898	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002899	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002900	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002901	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002902	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002903	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002904	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002905	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002906	retrieve the book which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002907	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002908	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002909	i would like the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002910	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002911	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002912	i am looking for the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002913	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002914	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002915	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002916	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002917	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002918	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002919	count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002920	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002921	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002922	i need the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002923	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002924	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002925	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002926	i would like the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002927	i am looking for the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002928	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002929	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002930	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002931	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002932	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002933	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002934	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002935	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002936	search the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002937	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002938	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002939	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002940	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002941	retrieve the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002942	what is both the url and in language of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002943	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002944	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002945	which books gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002946	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002947	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000002948	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002949	what is the link and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002950	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002951	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002952	search for the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002953	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002954	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002955	i need the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002956	get the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002957	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002958	what book get less review count than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S4000002959	search the books which has the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002960	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002961	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002962	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002963	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002964	i want the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002965	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002966	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000002967	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002968	what is the review count and number of pages of books ?	now => [ param:aggregateRating.reviewCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002969	i want the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002970	which is the book with the most awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002971	what is both the image and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002972	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002973	what is both the image and rating count of book	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002974	what is both the review count and isbn of books ?	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002975	i would like the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002976	what is both the url and book edition of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002977	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002978	which books have rating at most 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S4000002979	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002980	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002981	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002982	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002983	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002984	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002985	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002986	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002987	what is both the author and book format of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002988	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002989	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002990	retrieve the book with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002991	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000002992	which book have rating greater than 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S4000002993	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002994	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002995	i want the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002996	i would like the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000002997	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000002998	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000002999	which is the books with the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003000	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003001	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003002	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003003	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003004	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003005	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003006	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003007	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003008	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003009	find the book which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003010	i want the book which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003011	what books gets the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003012	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003013	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003014	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003015	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003016	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003017	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003018	what is the review count and image of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003019	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003020	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003021	search the book with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003022	i am looking for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003023	retrieve the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003024	which is the books which has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003025	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003026	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003027	i want the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003028	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003029	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003030	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003031	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003032	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003033	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003034	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003035	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003036	which book gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003037	what are the book which have one award ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S4000003038	what is the url and isbn of book	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003039	i need the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003040	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003041	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003042	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003043	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003044	what is the rating and number of pages of books ?	now => [ param:aggregateRating.ratingValue:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003045	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003046	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003047	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003048	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003049	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003050	search the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003051	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003052	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003053	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003054	i want the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003055	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003056	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003057	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003058	search for the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003059	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003060	give me the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003061	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003062	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003063	what are book with rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S4000003064	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003065	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003066	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003067	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003068	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003069	what are the QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003070	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003071	i would like the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003072	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003073	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003074	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003075	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003076	which books gets the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003077	i need the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003078	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003079	which books gets the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003080	what is both the url and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003081	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003082	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003083	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003084	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003085	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003086	get the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003087	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003088	i am looking for the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003089	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003090	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003091	i need the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003092	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003093	i am looking for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003094	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003095	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003096	i want the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003097	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003098	search the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003099	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003100	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003101	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003102	what books has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003103	which is the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003104	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003105	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003106	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003107	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003108	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003109	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003110	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003111	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003112	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003113	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003114	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003115	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003116	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003117	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003118	search for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003119	retrieve the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003120	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003121	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003122	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003123	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003124	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003125	i would like the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003126	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003127	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003128	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003129	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003130	what are book which have in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S4000003131	what is the books which has the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003132	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003133	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003134	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003135	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003136	find the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003137	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003138	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003139	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003140	search for the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003141	what are the book with book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S4000003142	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003143	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003144	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003145	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003146	i want the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003147	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003148	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003149	retrieve the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003150	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003151	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003152	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003153	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003154	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003155	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003156	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003157	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003158	i am looking for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003159	search the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003160	how many awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000003161	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003162	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003163	i want the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003164	i need the link and isbn of books .	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003165	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003166	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003167	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003168	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003169	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003170	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003171	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003172	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003173	what is both the in language and number of pages of books	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003174	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003175	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003176	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003177	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003178	which book has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003179	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003180	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003181	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003182	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003183	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003184	search the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003185	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003186	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003187	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003188	what is the rating and in language of books	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003189	i would like the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003190	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003191	i want the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003192	find the book which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003193	what is the books with the highest number of awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003194	search for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003195	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003196	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003197	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003198	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003199	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003200	i need the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003201	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003202	i would like the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003203	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003204	get the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003205	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003206	what is the author and link of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003207	search for the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003208	retrieve the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003209	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003210	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003211	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003212	i want the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003213	find the book which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003214	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003215	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003216	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003217	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003218	get the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003219	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003220	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003221	give me both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003222	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003223	i would like the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003224	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003225	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003226	search for the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003227	what is the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003228	what is the rating count and image of book ?	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003229	find the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003230	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003231	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003232	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003233	what books gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003234	i need both the url and rating count of books .	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003235	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003236	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003237	which are the book that have review count 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 4 => notify
S4000003238	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003239	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003240	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003241	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003242	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003243	what are the book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S4000003244	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003245	find the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003246	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003247	i want the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003248	i want the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003249	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003250	which are books with NUMBER_0 or greater rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S4000003251	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003252	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003253	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003254	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003255	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003256	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003257	search for the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003258	what is both the author and link of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003259	i need the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003260	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003261	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003262	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003263	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003264	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003265	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003266	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003267	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003268	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003269	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003270	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003271	i need to know the book format and author of books .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003272	what are book having rating count not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S4000003273	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003274	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003275	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003276	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003277	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003278	what is both the number of pages and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003279	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003280	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003281	i would like the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003282	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003283	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003284	search for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003285	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003286	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003287	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003288	what is the rating and in language of books	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003289	what are books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S4000003290	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003291	i am looking for the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003292	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003293	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003294	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003295	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003296	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003297	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003298	search for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003299	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003300	search both the author and image of book .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003301	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003302	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003303	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003304	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003305	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003306	what is the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003307	which books have rating count 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S4000003308	i am looking for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003309	i need the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003310	what is both the url and image of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003311	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003312	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003313	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003314	which is the books with the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003315	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003316	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003317	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003318	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003319	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003320	what is both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003321	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003322	i need the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003323	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003324	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003325	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003326	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003327	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003328	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003329	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003330	find the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003331	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003332	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003333	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003334	what is both the image and link of book ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003335	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003336	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003337	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003338	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003339	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003340	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003341	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003342	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003343	what books has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003344	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003345	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003346	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003347	i need to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003348	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003349	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003350	search for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003351	i would like the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003352	i want the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003353	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003354	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003355	i want the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003356	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003357	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003358	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003359	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003360	which books gets the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003361	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003362	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003363	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003364	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003365	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003366	find the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003367	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003368	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003369	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003370	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003371	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003372	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003373	which book gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003374	what is both the book format and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003375	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003376	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003377	i would like the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003378	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003379	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003380	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003381	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003382	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003383	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003384	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003385	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003386	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003387	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003388	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003389	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003390	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003391	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003392	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003393	what is both the author and link of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003394	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003395	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003396	i want the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003397	what is the review count and url of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003398	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003399	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003400	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003401	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003402	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003403	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003404	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003405	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003406	get the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003407	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003408	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003409	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003410	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003411	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003412	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003413	search for the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003414	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003415	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003416	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003417	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003418	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003419	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003420	what are books having 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S4000003421	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003422	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003423	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003424	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003425	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003426	what is the book edition and image of book ?	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003427	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003428	get the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003429	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003430	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003431	what is the review count and book format of book ?	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003432	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003433	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003434	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003435	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003436	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003437	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003438	search the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003439	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003440	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003441	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003442	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003443	i want the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003444	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003445	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003446	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003447	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003448	search for the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003449	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003450	get the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003451	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003452	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003453	i want the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003454	search for the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003455	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003456	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003457	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003458	i need the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003459	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003460	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003461	i am looking for the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003462	i would like the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003463	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003464	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003465	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003466	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003467	what is the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003468	search for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003469	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003470	i would like the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003471	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003472	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003473	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003474	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003475	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003476	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003477	i would like the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003478	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003479	i want the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003480	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003481	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003482	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003483	find the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003484	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003485	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003486	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003487	what is both the rating and book edition of book ?	now => [ param:aggregateRating.ratingValue:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003488	i am looking for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003489	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003490	retrieve the books with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003491	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003492	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003493	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003494	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003495	i want the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003496	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003497	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003498	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003499	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003500	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003501	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003502	i would like the books which has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003503	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003504	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003505	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003506	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003507	what books has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003508	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003509	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003510	i want the book which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003511	i need the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003512	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003513	what is the book format and rating count of book ?	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003514	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003515	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003516	what is the image and link of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003517	get the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003518	i need the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003519	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003520	i want the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003521	i need the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003522	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003523	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003524	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003525	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003526	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003527	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003528	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003529	what are the book which have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S4000003530	which books have higher rating count than 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S4000003531	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003532	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003533	search both the author and image of book .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003534	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003535	what is both the book edition and link of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003536	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003537	what is both the number of pages and image of books	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003538	what is both the book edition and isbn of book ?	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003539	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003540	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003541	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003542	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003543	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003544	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003545	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003546	what is both the review count and url of book	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003547	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003548	i need the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003549	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003550	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003551	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003552	i need the link and isbn of books .	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003553	how many awards does book have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000003554	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003555	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003556	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003557	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003558	what books gets the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003559	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003560	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003561	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003562	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003563	i am looking for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003564	what books gets the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003565	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003566	i want the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003567	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003568	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003569	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003570	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003571	get the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003572	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003573	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003574	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003575	i want the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003576	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003577	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003578	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003579	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003580	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003581	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003582	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003583	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003584	give me both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003585	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003586	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003587	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003588	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003589	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003590	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003591	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003592	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003593	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003594	i need the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003595	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003596	what book get greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S4000003597	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003598	what are the books that have higher review count than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S4000003599	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003600	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003601	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003602	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003603	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003604	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003605	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003606	search for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003607	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003608	what is the book edition and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003609	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003610	get the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003611	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003612	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003613	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003614	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003615	what is the link and book edition of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003616	search the books which has the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003617	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003618	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003619	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003620	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003621	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003622	i want the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003623	find the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003624	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003625	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003626	i want the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003627	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003628	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003629	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003630	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003631	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003632	which are the QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003633	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003634	what is both the image and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003635	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003636	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003637	retrieve the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003638	search the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003639	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003640	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003641	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003642	retrieve the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003643	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003644	which book has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003645	which are book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S4000003646	what are book that have rating NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S4000003647	what is both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003648	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003649	i would like the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003650	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003651	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003652	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003653	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003654	retrieve the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003655	what is the book which has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003656	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003657	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003658	get the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003659	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003660	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003661	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003662	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003663	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003664	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003665	which books have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S4000003666	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003667	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003668	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003669	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003670	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003671	i am looking for the books which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003672	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003673	what books has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003674	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003675	what books have 4 or more number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S4000003676	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003677	what is both the url and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003678	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003679	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003680	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003681	what is both the rating and in language of book	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003682	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003683	what is both the image and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003684	what books has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003685	what are the book having 1 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S4000003686	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003687	what is the image and in language of books	now => [ param:image:Entity(tt:picture) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003688	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003689	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003690	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003691	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003692	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003693	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003694	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003695	what book has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003696	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003697	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003698	how many awards does book have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000003699	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003700	find the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003701	i need the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003702	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003703	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003704	what is the review count and url of books ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003705	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003706	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003707	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003708	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003709	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003710	i would like the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003711	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003712	what is both the rating and image of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003713	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003714	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003715	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003716	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003717	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003718	what is the rating and url of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003719	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003720	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003721	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003722	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003723	retrieve the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003724	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003725	retrieve the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003726	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003727	what is both the book edition and link of book	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003728	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003729	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003730	retrieve the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003731	what is both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003732	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003733	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003734	get the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003735	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003736	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003737	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003738	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003739	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003740	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003741	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003742	retrieve the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003743	which is the books which has the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003744	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003745	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003746	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003747	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003748	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003749	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003750	i need the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003751	find the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003752	how many awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000003753	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003754	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003755	what is the books with the fewest awards ?	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003756	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003757	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003758	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003759	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003760	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003761	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003762	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003763	retrieve the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003764	i want the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003765	retrieve the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003766	i would like the book which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003767	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003768	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003769	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003770	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003771	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003772	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003773	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003774	i want the book which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003775	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003776	search for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003777	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003778	i am looking for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003779	what is the number of pages and image of books ?	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003780	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003781	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003782	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003783	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003784	search for the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003785	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003786	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003787	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003788	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003789	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003790	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003791	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003792	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003793	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003794	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003795	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003796	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003797	what is the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003798	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003799	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003800	what is the book edition and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003801	i want to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003802	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003803	i need the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003804	what is the book format and number of pages of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003805	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003806	what is the url and number of pages of book ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003807	count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003808	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003809	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003810	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003811	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003812	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003813	i need the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003814	i would like the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003815	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003816	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003817	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003818	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003819	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003820	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003821	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003822	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003823	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003824	find the book which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003825	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003826	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003827	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003828	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003829	what are books having rating at most 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S4000003830	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003831	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003832	which is the books with the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003833	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003834	find the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003835	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003836	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003837	what book have rating count less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S4000003838	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003839	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003840	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003841	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003842	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003843	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003844	what is both the review count and book format of books	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003845	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003846	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003847	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003848	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003849	search the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003850	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003851	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003852	what is both the url and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003853	what is the rating count and url of book	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003854	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003855	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003856	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003857	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003858	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003859	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003860	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003861	which is the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003862	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003863	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003864	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003865	which are the book having rating count one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S4000003866	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003867	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003868	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003869	i want the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003870	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003871	i want the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003872	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003873	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003874	i am looking for the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003875	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003876	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003877	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003878	what books get 8 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 8 => notify
S4000003879	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003880	what is the review count and in language of book	now => [ param:aggregateRating.reviewCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003881	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003882	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003883	which are the book that have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S4000003884	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003885	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003886	what is both the review count and isbn of books	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003887	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003888	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003889	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003890	i would like the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003891	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003892	what is both the review count and book format of books	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003893	what is both the review count and link of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003894	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003895	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003896	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003897	what books gets the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003898	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003899	i need the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003900	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003901	what is the review count and image of books	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003902	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003903	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003904	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003905	i would like the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003906	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003907	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003908	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003909	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003910	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003911	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003912	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003913	i need the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003914	retrieve the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003915	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003916	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003917	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003918	what is both the rating and link of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003919	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003920	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003921	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003922	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003923	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003924	what is both the link and rating count of book	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003925	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003926	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003927	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003928	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003929	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003930	what is both the rating and author of books	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003931	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003932	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003933	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003934	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003935	get the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003936	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003937	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003938	retrieve the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003939	what is the url and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003940	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003941	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003942	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003943	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003944	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003945	i would like the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003946	give me the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000003947	find the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003948	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003949	i need the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003950	retrieve the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003951	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003952	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003953	what is the url and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003954	what is the url and number of pages of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003955	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003956	show me both the isbn and book edition of books	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003957	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003958	which is the book which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003959	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003960	what is both the book edition and isbn of book	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003961	what is the author and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003962	i would like the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003963	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003964	i am looking for the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003965	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003966	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003967	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003968	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003969	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003970	what is both the isbn and link of book ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003971	what is the in language and image of book	now => [ param:image:Entity(tt:picture) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003972	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003973	give me both the link and image of book .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003974	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003975	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003976	what are the QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003977	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003978	search the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003979	what is both the author and book format of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003980	search for the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003981	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003982	what is the review count and number of pages of books ?	now => [ param:aggregateRating.reviewCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003983	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000003984	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003985	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003986	which is the books with the lowest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003987	what is both the url and in language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003988	find the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003989	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003990	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003991	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003992	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003993	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000003994	find the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003995	which is the book with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000003996	what is the book edition and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000003997	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003998	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000003999	i want the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004000	what is the rating count and image of books ?	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004001	what is the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004002	how many awards does books have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004003	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004004	i am looking for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004005	i want the book with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004006	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004007	what is both the isbn and image of books ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004008	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004009	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004010	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004011	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004012	retrieve the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004013	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004014	i need the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004015	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004016	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004017	how many awards does books have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004018	retrieve the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004019	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004020	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004021	get the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004022	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004023	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004024	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004025	i would like the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004026	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004027	search for the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004028	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004029	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004030	i would like to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004031	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004032	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004033	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004034	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004035	which are the books with isbn containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S4000004036	what is both the rating and image of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004037	what is the url and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004038	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004039	i would like the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004040	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004041	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004042	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004043	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004044	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004045	retrieve the books with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004046	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004047	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004048	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004049	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004050	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004051	what is both the author and review count of books	now => [ param:aggregateRating.reviewCount:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004052	get the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004053	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004054	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004055	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004056	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004057	what is the book format and link of book ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004058	what are the books having review count at least 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S4000004059	how many awards do book have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004060	which is the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004061	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004062	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004063	get the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004064	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004065	which book gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004066	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004067	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004068	what is the image and url of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004069	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004070	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004071	what is both the book edition and number of pages of book	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004072	i need the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004073	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004074	what is both the rating count and isbn of book ?	now => [ param:aggregateRating.ratingCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004075	what is the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004076	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004077	search for the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004078	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004079	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004080	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004081	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004082	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004083	i would like the book which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004084	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004085	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004086	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004087	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004088	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004089	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004090	what are books that have higher rating count than zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S4000004091	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004092	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004093	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004094	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004095	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004096	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004097	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004098	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004099	i would like the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004100	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004101	retrieve the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004102	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004103	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004104	what is both the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004105	retrieve the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004106	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004107	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004108	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004109	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004110	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004111	find the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004112	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004113	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004114	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004115	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004116	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004117	what is the url and rating count of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004118	i am looking for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004119	i would like the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004120	get the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004121	what is both the author and image of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004122	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004123	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004124	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004125	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004126	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004127	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004128	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004129	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004130	get the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004131	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004132	what is the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004133	which are book that have review count at least zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S4000004134	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004135	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004136	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004137	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004138	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004139	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004140	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004141	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004142	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004143	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004144	i need the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004145	i would like the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004146	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004147	what books has the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004148	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004149	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004150	i would like the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004151	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004152	search the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004153	what is the image and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004154	what is both the url and rating count of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004155	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004156	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004157	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004158	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004159	find the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004160	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004161	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004162	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004163	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004164	search the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004165	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004166	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004167	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004168	which books get NUMBER_0 or more number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S4000004169	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004170	find the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004171	i need the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004172	get the book with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004173	what is the in language and book edition of books	now => [ param:bookEdition:String , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004174	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004175	i need the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004176	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004177	i need the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004178	which are the books that have review count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S4000004179	i need the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004180	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004181	retrieve the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004182	i would like to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004183	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004184	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004185	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004186	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004187	which are the book that have higher rating count than 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S4000004188	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004189	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004190	how many awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004191	i need the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004192	i want the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004193	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004194	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004195	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004196	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004197	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004198	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004199	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004200	what books has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004201	what is both the book format and isbn of book	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004202	what books gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004203	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004204	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004205	what is the book edition and review count of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004206	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004207	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004208	what is both the author and rating of book	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004209	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004210	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004211	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004212	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004213	i would like the book with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004214	retrieve the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004215	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004216	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004217	find the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004218	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004219	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004220	what book get higher review count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S4000004221	get the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004222	i am looking for the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004223	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004224	what is both the in language and image of books ?	now => [ param:image:Entity(tt:picture) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004225	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004226	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004227	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004228	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004229	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004230	which book have NUMBER_0 or greater review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S4000004231	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004232	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004233	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004234	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004235	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004236	retrieve the book with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004237	i am looking for the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004238	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004239	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004240	find the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004241	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004242	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004243	show me both the image and url of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004244	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004245	which books gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004246	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004247	what books has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004248	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004249	what is both the url and in language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004250	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004251	i would like to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004252	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004253	i want the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004254	i need the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004255	get the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004256	search the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004257	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004258	i am looking for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004259	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004260	get the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004261	i need the books with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004262	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004263	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004264	get the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004265	search the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004266	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004267	i need the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004268	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004269	what book get less review count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S4000004270	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004271	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004272	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004273	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004274	i want the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004275	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004276	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004277	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004278	what is the rating count and number of pages of books	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004279	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004280	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004281	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004282	i am looking for the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004283	i want to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004284	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004285	i would like to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004286	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004287	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004288	find the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004289	search the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004290	search for the books with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004291	how many awards in a book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004292	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004293	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004294	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004295	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004296	what books get larger number of pages than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S4000004297	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004298	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004299	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004300	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004301	what is both the image and url of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004302	how many awards in a book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004303	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004304	which books have zero rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S4000004305	i would like the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004306	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004307	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004308	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004309	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004310	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004311	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004312	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004313	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004314	i am looking for the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004315	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004316	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004317	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004318	what is both the author and image of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004319	get the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004320	i need the book with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004321	what is the isbn and image of books	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004322	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004323	what is both the image and rating count of book	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004324	what are the books having 4 or more number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S4000004325	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004326	what are the book having 1 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S4000004327	search for the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004328	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004329	i want the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004330	search both the author and image of book .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004331	what is the image and link of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004332	show me both the isbn and book edition of books	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004333	what is both the review count and book format of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004334	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004335	what is both the isbn and book edition of books ?	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004336	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004337	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004338	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004339	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004340	what is both the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004341	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004342	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004343	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004344	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004345	find the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004346	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004347	i would like the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004348	i would like the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004349	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004350	i would like the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004351	what is the book edition and url of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004352	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004353	what is the image and number of pages of books ?	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004354	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004355	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004356	search the book with the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004357	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004358	get the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004359	what book have rating count less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S4000004360	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004361	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004362	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004363	i am looking for the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004364	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004365	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004366	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004367	i need the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004368	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004369	i need the books which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004370	i want the book which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004371	what is the rating count and review count of book ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004372	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004373	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004374	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004375	which books has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004376	i need the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004377	search for the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004378	i am looking for the books with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004379	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004380	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004381	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004382	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004383	what is the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004384	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004385	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004386	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004387	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004388	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004389	search for the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004390	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004391	which is the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004392	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004393	i am looking for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004394	search the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004395	what is the books which has the maximum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004396	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004397	what is the link and in language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004398	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004399	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004400	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004401	i would like the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004402	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004403	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004404	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004405	what is both the in language and url of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004406	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004407	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004408	what is both the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004409	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004410	i need the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004411	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004412	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004413	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004414	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004415	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004416	search for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004417	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004418	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004419	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004420	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004421	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004422	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004423	i would like the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004424	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004425	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004426	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004427	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004428	i am looking for the books with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004429	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004430	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004431	retrieve the books with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004432	i want the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004433	what book has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004434	retrieve the books with the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004435	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004436	find the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004437	get the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004438	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004439	get the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004440	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004441	i am looking for the books which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004442	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004443	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004444	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004445	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004446	i need to know the book format and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004447	what are books having 3 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S4000004448	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004449	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004450	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004451	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004452	count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004453	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004454	what is both the url and book edition of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004455	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004456	i would like the book which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004457	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004458	i would like the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004459	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004460	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004461	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004462	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004463	what is both the book format and image of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004464	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004465	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004466	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004467	get the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004468	search for the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004469	i would like the book with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004470	i would like to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004471	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004472	what is the review count and number of pages of books ?	now => [ param:aggregateRating.reviewCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004473	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004474	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004475	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004476	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004477	what is both the book format and link of book	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004478	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004479	retrieve the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004480	i need the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004481	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004482	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004483	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004484	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004485	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004486	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004487	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004488	retrieve the books which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004489	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004490	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004491	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004492	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004493	i need the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004494	what is the book with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004495	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004496	which books gets the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004497	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004498	which are the books that have over 1 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S4000004499	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004500	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004501	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004502	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004503	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004504	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004505	i am looking for the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004506	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004507	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004508	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004509	retrieve the book which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004510	what is the books with the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004511	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004512	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004513	i am looking for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004514	how many awards do book have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004515	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004516	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004517	i need the link and isbn of books .	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004518	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004519	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004520	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004521	find the books with the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004522	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004523	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004524	what is the url and rating of book ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004525	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004526	i want the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004527	which is the book which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004528	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004529	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004530	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004531	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004532	which are books with NUMBER_0 or greater review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S4000004533	retrieve the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004534	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004535	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004536	what books has the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004537	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004538	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004539	get the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004540	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004541	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004542	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004543	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004544	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004545	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004546	which books get 1 or above number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S4000004547	search for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004548	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004549	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004550	search for the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004551	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004552	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004553	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004554	get the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004555	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004556	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004557	what is the link and rating count of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004558	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004559	i would like both the rating count and book format of books	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004560	what is the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004561	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004562	what books has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004563	what is both the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004564	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004565	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004566	i would like the book with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004567	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004568	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004569	retrieve the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004570	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004571	retrieve the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004572	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004573	which is the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004574	get the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004575	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004576	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004577	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004578	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004579	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004580	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004581	i need the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004582	i would like the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004583	i need the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004584	i am looking for the books which has the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004585	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004586	what is both the link and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004587	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004588	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004589	what is both the link and rating count of book	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004590	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004591	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004592	i need to know the book format and author of books .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004593	search the books which has the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004594	show me both the isbn and book edition of books	now => [ param:bookEdition:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004595	which book has the maximum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004596	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004597	search for the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004598	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004599	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004600	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004601	what is both the isbn and image of book ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004602	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004603	i am looking for the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004604	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004605	i need the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004606	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004607	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004608	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004609	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004610	get the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004611	give me both the link and image of book .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004612	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004613	what is both the rating count and author of books	now => [ param:aggregateRating.ratingCount:Number , param:author:Entity(edu.stanford.cs294s.sierrakn:Person) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004614	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004615	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004616	search the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004617	which are books that have number of pages 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S4000004618	search for the book which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004619	i need the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004620	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004621	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004622	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004623	i would like both the rating count and book format of books .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004624	get the books which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004625	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004626	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004627	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004628	what is both the url and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004629	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004630	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004631	what is the number of pages and isbn of book	now => [ param:isbn:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004632	what is the review count and link of books ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004633	get the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004634	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004635	retrieve the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004636	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004637	what is the number of pages and isbn of book	now => [ param:isbn:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004638	i need the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004639	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004640	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004641	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004642	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004643	what book gets the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004644	i am looking for the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004645	get the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004646	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004647	what books get larger number of pages than 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S4000004648	retrieve the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004649	enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004650	get the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004651	what book gets the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004652	how many awards does books have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004653	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004654	i would like the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004655	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004656	show me both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004657	which is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004658	i am looking for the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004659	i need the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004660	which are the QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004661	i want the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004662	what is the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004663	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004664	get the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004665	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004666	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004667	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004668	which book gets the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004669	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004670	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004671	i am looking for the book with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004672	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004673	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004674	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004675	retrieve the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004676	retrieve the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004677	what is the book edition and url of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004678	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004679	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004680	retrieve the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004681	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004682	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004683	i am looking for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004684	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004685	retrieve the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004686	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004687	i want the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004688	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004689	i am looking for the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004690	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004691	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004692	get the book with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004693	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004694	get the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004695	i need the books with the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004696	i need the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004697	search for the books with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004698	i am looking for the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004699	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004700	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004701	what books has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004702	what book gets the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004703	search for the books with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004704	which books has the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004705	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004706	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004707	what are the book that have number of pages smaller than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S4000004708	i am looking for the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004709	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004710	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004711	search for the book with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004712	search the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004713	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004714	what is the url and book edition of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004715	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004716	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004717	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004718	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004719	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004720	i am looking for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004721	which are book that have 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S4000004722	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004723	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004724	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004725	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004726	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004727	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004728	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 => notify
S4000004729	retrieve the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004730	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004731	search for the books with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004732	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004733	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004734	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004735	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004736	i would like the books which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004737	i am looking for the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004738	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004739	i need the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004740	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004741	retrieve the books with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004742	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004743	i am looking for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004744	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004745	i would like the book with the lowest rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004746	i need the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004747	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004748	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004749	search for the book with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004750	i am looking for the books with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004751	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004752	give me the image and url of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004753	what is the book format and isbn of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004754	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004755	i would like the books with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004756	get the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004757	i am looking for the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004758	how many awards does books have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S4000004759	what is both the author and link of books	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004760	i want the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004761	i am looking for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004762	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004763	search the books with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004764	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004765	which are the books that have review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S4000004766	enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004767	get the books which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004768	i am looking for the books which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004769	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004770	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004771	i need the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004772	i need the book with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004773	search for the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004774	what is the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004775	i want the book which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004776	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004777	what is both the review count and isbn of books	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004778	i would like the books which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004779	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004780	what is the number of pages and in language of books ?	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004781	search for the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004782	what book get 7 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S4000004783	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004784	which books gets the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004785	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004786	i am looking for the book with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004787	what is the review count and rating count of books	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S4000004788	search the books with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004789	get the books which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004790	i would like the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004791	i would like the books which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004792	please count the people	now => aggregate count of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S4000004793	get the books with the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004794	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004795	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] => notify
S4000004796	i am looking for the books which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004797	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] => notify
S4000004798	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S4000004799	what is both the author and image of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004800	which books get rating not less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000004801	get books which have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000004802	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004803	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000004804	retrieve books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000004805	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004806	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000004807	search for books with NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004808	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000004809	search for book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000004810	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000004811	which book get rating less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000004812	what is the image and isbn of the books with the lowest rating count	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000004813	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004814	please list books with 0 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000004815	get books having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000004816	search for books which have over 8 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004817	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000004818	what book have review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000004819	what are books which have book format paperback ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000004820	what is the in language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004821	please enumerate book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000004822	get books having rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000004823	what QUOTED_STRING_0 has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004824	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000004825	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004826	what are book with over 11 review count and greater rating than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:aggregateRating.reviewCount:Number >= 11 => notify
S5000004827	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000004828	search the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004829	i need books which have lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000004830	which are the books that have 4 or below rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000004831	get book which have less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000004832	i want books with over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004833	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000004834	which book have rating count not less than 12 and review count equal to 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000004835	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004836	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000004837	i need book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000004838	get book that have 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004839	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000004840	i am looking to search book that have number of pages greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000004841	please enumerate books with rating count smaller than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000004842	i am looking for book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000004843	search books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000004844	i would like books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000004845	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004846	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000004847	i would like to get books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000004848	get books with zero or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000004849	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004850	get the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004851	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004852	tell me what is the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004853	what are the books that have review count 0 and have rating count more than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000004854	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004855	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004856	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000004857	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000004858	please list books with smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000004859	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000004860	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004861	enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004862	i need book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000004863	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004864	i need book with 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000004865	i want to find books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000004866	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000004867	what are book that have 11 or above rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000004868	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004869	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004870	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004871	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004872	tell me what is the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004873	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004874	i need books having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000004875	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004876	i need to search for books that have number of pages 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S5000004877	please enumerate books with rating higher than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000004878	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004879	tell me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004880	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000004881	i want to search book having rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000004882	i would like books with greater review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000004883	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004884	what are the book having 3 awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000004885	get books having number of pages zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000004886	i need to search book having 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000004887	i would like to search books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000004888	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000004889	i would like books which have less review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000004890	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000004891	enumerate books having over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000004892	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000004893	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004894	retrieve book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000004895	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000004896	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004897	what are the QUOTED_STRING_0 's QUOTED_STRING_1	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000004898	list books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000004899	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004900	search book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000004901	tell me what 's the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004902	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000004903	i want to get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000004904	retrieve book that have higher review count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000004905	search books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000004906	what book have 6 or less review count and rating lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000004907	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000004908	search for book with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000004909	i need book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000004910	what are the books having larger rating than 0 and rating count at least 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004911	get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000004912	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004913	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004914	i am looking to get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000004915	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000004916	get book having rating greater than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004917	get the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004918	search book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000004919	search for books with 12 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000004920	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004921	get books that have rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000004922	search books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000004923	get book with less number of pages than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000004924	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004925	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004926	i am looking to get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000004927	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004928	i want books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000004929	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000004930	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000004931	search book which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004932	i need books which have lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000004933	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004934	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004935	search book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000004936	enumerate books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000004937	i need books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000004938	get books which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000004939	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000004940	retrieve books that have review count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000004941	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004942	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004943	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000004944	please retrieve books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000004945	what is the rating of book ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004946	i would like to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004947	i am looking for the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004948	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004949	get books that have more rating than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004950	which are books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000004951	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004952	i would like to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004953	i am looking to retrieve books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000004954	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000004955	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004956	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004957	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004958	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000004959	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004960	search book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000004961	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004962	i would like the QUOTED_STRING_0 with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004963	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004964	i want to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004965	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000004966	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000004967	i would like to search books having at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000004968	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000004969	find books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000004970	retrieve book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000004971	what QUOTED_STRING_0 have number of pages 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 9 => notify
S5000004972	i would like books with isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004973	tell me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004974	i would like book that have rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000004975	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004976	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004977	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004978	i would like to get books that have 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000004979	i am looking for book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000004980	list book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004981	which QUOTED_STRING_0 has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004982	please list books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000004983	enumerate books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000004984	i would like book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000004985	get books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000004986	enumerate book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000004987	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004988	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004989	i would like books that have rating at most 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004990	tell me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004991	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000004992	i need book that have at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000004993	find books which have 0 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000004994	i need to search book having 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000004995	get books with rating 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000004996	i need to search for books that have number of pages 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S5000004997	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004998	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000004999	i need book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005000	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005001	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000005002	i want to search books with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005003	find books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005004	tell me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005005	i want book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000005006	which QUOTED_STRING_0 have rating count lower than 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005007	retrieve books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005008	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005009	i would like books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005010	list book having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000005011	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005012	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005013	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005014	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000005015	search books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005016	search books that have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000005017	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005018	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005019	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005020	get book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005021	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005022	what are book which have less rating count than 2 and with review count equal to 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 and param:aggregateRating.reviewCount:Number == 12 => notify
S5000005023	get books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005024	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005025	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005026	i want books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005027	i need books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005028	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005029	retrieve book which have one or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005030	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005031	get books that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000005032	i am looking for book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005033	get book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005034	i would like books with greater review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005035	i would like books that have 7 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000005036	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005037	i need books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000005038	search books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000005039	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005040	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005041	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005042	i am looking to search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005043	what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005044	which are book having QUOTED_STRING_0 in their awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000005045	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005046	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005047	i need book that have at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005048	i want books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005049	i need to search book having 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005050	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005051	i need to search for books that have rating count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005052	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005053	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005054	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005055	i am looking for books that have 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005056	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005057	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005058	i need to know the book format and rating count of the books which has the highest review count	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005059	i want to retrieve book with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005060	i want to find books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000005061	how many awards do the book which has the lowest rating have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005062	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005063	i am looking for the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005064	i want books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005065	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005066	i need books which have number of pages not more than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005067	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005068	how many awards in QUOTED_STRING_0 ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) => notify
S5000005069	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005070	please list books that have 3 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005071	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000005072	i want books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005073	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005074	search for books which have rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000005075	retrieve book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005076	tell me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005077	which are the QUOTED_STRING_0 that have over 5 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005078	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005079	please search for books which have over zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005080	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005081	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005082	what books have rating less than 12 and over one rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005083	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005084	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000005085	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005086	i need to know the book format and rating count of the books which has the highest review count .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005087	get books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005088	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005089	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005090	search book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005091	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005092	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005093	i want to search for books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005094	i want book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000005095	what is the number of awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000005096	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005097	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005098	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005099	tell me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005100	get book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005101	what QUOTED_STRING_0 get 7 or lower number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 7 => notify
S5000005102	find books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005103	get book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005104	get book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005105	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005106	what book get isbn including QUOTED_STRING_0 and review count lower than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005107	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005108	what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005109	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005110	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005111	i want book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000005112	i need to search for books which have review count more than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005113	i am looking to retrieve book with 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005114	please find book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000005115	please list book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005116	get the QUOTED_STRING_0 with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005117	enumerate book having rating count more than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005118	i am looking for the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005119	please list books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005120	find books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005121	get books having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005122	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005123	what are book which have 10 or greater review count and have number of pages 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:numberOfPages:Number == 5 => notify
S5000005124	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005125	find the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005126	i am looking for book which do not have number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005127	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005128	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005129	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005130	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005131	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005132	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005133	i want book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000005134	which QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005135	what QUOTED_STRING_0 have number of pages 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 9 => notify
S5000005136	show me what is the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000005137	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005138	i need books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000005139	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005140	i want to find books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005141	i want the QUOTED_STRING_0 with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005142	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005143	search for books that have lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005144	list books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000005145	i need books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005146	please list book with number of pages 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005147	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005148	enumerate books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005149	show me what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005150	get books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000005151	i need book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005152	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005153	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000005154	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000005155	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005156	find books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005157	get books with rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005158	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005159	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005160	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005161	search books that have higher rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005162	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005163	which are the book that have rating count more than 4 and have rating 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 and param:aggregateRating.ratingValue:Number == 7 => notify
S5000005164	search book that have 11 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005165	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005166	which are the books which have number of pages 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005167	get books which have higher review count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005168	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005169	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005170	retrieve books which have smaller rating count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005171	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005172	find book with review count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005173	please enumerate books with rating higher than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005174	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005175	i would like books with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005176	what is the isbn of book ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005177	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005178	get books that have 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005179	search books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005180	search books that have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000005181	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005182	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005183	i need to find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005184	i would like to search books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005185	i would like book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005186	get books with rating count larger than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000005187	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005188	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005189	how many awards does the books with the lowest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005190	please find books that have review count 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000005191	i am looking for books with lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005192	what are books which have book format equal to hardcover	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000005193	i would like to find book having rating greater than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005194	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005195	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005196	i would like to find book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005197	please list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005198	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005199	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005200	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005201	retrieve the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005202	i would like to find book having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000005203	show me what is the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005204	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005205	tell me what 's the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005206	enumerate book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005207	i would like book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005208	i would like to search book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005209	what are book having isbn including QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005210	tell me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005211	i need to search book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005212	which are the books which have 10 or greater review count and have number of pages equal to 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:numberOfPages:Number == 11 => notify
S5000005213	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005214	which are QUOTED_STRING_0 's QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000005215	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005216	find books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005217	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005218	find the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005219	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005220	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005221	how many awards are there in the book which has the minimum number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005222	i would like to know the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005223	retrieve book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005224	retrieve book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000005225	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005226	i am looking for books that have rating count not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005227	search books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005228	get books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005229	get book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005230	get book which have smaller rating count than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005231	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005232	retrieve book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005233	i would like the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005234	get book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005235	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005236	which are the QUOTED_STRING_0 having number of pages equal to zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 0 => notify
S5000005237	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005238	i need book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005239	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005240	list book having rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005241	please search book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000005242	tell me both the url and author of QUOTED_STRING_0	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000005243	what are books having number of pages 1 and greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:numberOfPages:Number == 1 => notify
S5000005244	please list book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005245	find books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005246	i need books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000005247	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005248	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005249	retrieve book having isbn including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005250	list book that have larger rating than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005251	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005252	i need to know the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005253	please list books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005254	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005255	find book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005256	get books with zero or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005257	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005258	please list book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005259	i want book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005260	please list books with 0 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005261	retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005262	enumerate books which have review count at least 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005263	i am looking for book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005264	get books with rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005265	i am looking for books with NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005266	i want books having 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005267	i would like to get book that have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005268	i would like to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005269	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005270	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005271	i would like to know the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005272	get the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005273	i am looking to search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005274	which are QUOTED_STRING_0 isbn QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005275	i want to retrieve books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005276	i am looking for book that have zero or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005277	i would like to search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005278	get book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005279	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005280	which are the people for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000005281	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005282	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005283	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005284	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005285	i would like books with smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000005286	get book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005287	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005288	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005289	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005290	i am looking for books that have higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005291	search book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005292	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000005293	get books which have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000005294	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005295	please retrieve books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000005296	tell me what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005297	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005298	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005299	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005300	search the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005301	i would like books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005302	list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005303	which are books which have over 10 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005304	retrieve book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005305	i want to search for books that have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000005306	search books having less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005307	i am looking to retrieve books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005308	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005309	how many awards are there in the books with the maximum rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005310	get book with over zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005311	what is the rating count of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005312	i want to find book having zero or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005313	tell me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005314	i am looking to search book with number of pages not more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005315	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005316	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005317	which books have book edition QUOTED_STRING_0 and 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005318	i am looking for book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005319	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005320	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005321	get book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005322	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005323	i would like book that have rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005324	find the QUOTED_STRING_0 with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005325	list book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005326	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000005327	search book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000005328	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005329	which QUOTED_STRING_0 have review count NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005330	what QUOTED_STRING_0 get over zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005331	search for books having over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005332	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005333	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005334	i would like books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005335	search book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005336	which books get rating count 9 and rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000005337	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000005338	what book have over 3 rating and book edition QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005339	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005340	i need book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005341	what are books having number of pages 1 and greater rating count than 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:numberOfPages:Number == 1 => notify
S5000005342	i am looking for books without more than 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000005343	i would like to search for book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000005344	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005345	retrieve books with zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005346	i would like to get books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005347	please get books with rating count not more than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005348	retrieve the QUOTED_STRING_0 with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005349	which is the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005350	get books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005351	search for books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000005352	i need to find books that have 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 11 => notify
S5000005353	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005354	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005355	i am looking to search books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005356	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005357	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005358	enumerate book which have one or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005359	i would like book that have review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000005360	i am looking to get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005361	get book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005362	i am looking for books that have 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005363	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005364	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005365	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005366	enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005367	search for books that have rating count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000005368	please find books that have review count 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000005369	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005370	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005371	which are QUOTED_STRING_0 which have rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005372	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005373	i need book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005374	i want book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005375	please enumerate books which have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005376	retrieve books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005377	enumerate book which have one or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005378	search book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005379	i would like books which have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000005380	get book that have 9 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005381	i am looking to find books having 10 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005382	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005383	i would like to retrieve book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005384	retrieve book having lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005385	i want to retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000005386	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005387	please find books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005388	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005389	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005390	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005391	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005392	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005393	i am looking for book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000005394	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005395	i need to get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005396	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005397	i want to search for books which have higher review count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005398	i need book with 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005399	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005400	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005401	which are the QUOTED_STRING_0 that have in language being QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000005402	which are the books which have over 10 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005403	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005404	which are the books with over 7 rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005405	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005406	i want the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005407	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005408	which are the book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005409	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005410	get book with lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005411	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005412	i am looking to find books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005413	what are the books which have QUOTED_STRING_0 as book edition and have over 2 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005414	search for books with less rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005415	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005416	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005417	get book that have fewer than 9 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000005418	which book have higher rating count than 8 and number of pages 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 and param:numberOfPages:Number == 6 => notify
S5000005419	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005420	find books having larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005421	i am looking to search for books that have smaller number of pages than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000005422	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005423	get book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005424	i would like book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000005425	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005426	which are the books that have rating equal to 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005427	search books with isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005428	search for book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005429	what are the books that have review count greater than one and have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005430	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005431	get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005432	i want book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005433	enumerate book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005434	i need books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005435	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005436	get the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005437	i would like books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005438	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005439	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005440	search book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005441	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005442	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000005443	list books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000005444	get the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005445	retrieve the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005446	please list books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005447	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005448	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005449	i want to retrieve book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005450	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005451	get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005452	search books with isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005453	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005454	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005455	how many awards do the books which has the highest rating count have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005456	give me the url and book edition of the book with the minimum number of pages	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005457	list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005458	which are book with number of pages not more than zero that have higher review count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 and param:numberOfPages:Number <= 0 => notify
S5000005459	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005460	what books have book edition containing QUOTED_STRING_0 and number of pages one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 1 => notify
S5000005461	i am looking for books having book format ebook .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000005462	retrieve book that have higher review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005463	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005464	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005465	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005466	i need to retrieve book with over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005467	i want to search for book having rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005468	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005469	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005470	search for books with 12 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005471	which are the books isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005472	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005473	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005474	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005475	get book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005476	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005477	i want to know the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005478	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005479	search the QUOTED_STRING_0 which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005480	i would like to find book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005481	i want to get book having QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005482	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005483	i am looking for books with lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005484	what books get over 9 rating count and rating 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000005485	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005486	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005487	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005488	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005489	get books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005490	what are the QUOTED_STRING_0 that have NUMBER_0 or below number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= NUMBER_0 => notify
S5000005491	i am looking to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005492	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005493	which are the books with 11 or higher number of pages which have review count 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 8 and param:numberOfPages:Number >= 11 => notify
S5000005494	i am looking for book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005495	get the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005496	please search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005497	i need to search book which have less rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005498	list book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000005499	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005500	please get books that have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005501	i want book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005502	get books that have lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005503	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005504	find the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005505	i would like books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000005506	what are the books that have number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005507	get books that have lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005508	retrieve book having rating 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005509	get books which have review count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000005510	i want to find books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005511	get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000005512	enumerate books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005513	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005514	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005515	i am looking to retrieve books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005516	please find book with rating count 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000005517	i am looking to retrieve book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005518	i would like to get books which have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005519	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005520	i need books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005521	please list book having rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005522	get books which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005523	i need to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005524	i need book with over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005525	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005526	what are the books that have higher review count than zero and have rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005527	which book get 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000005528	find the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005529	what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005530	i want to get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005531	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005532	get books having over 12 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005533	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005534	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005535	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005536	i would like the QUOTED_STRING_0 with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005537	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005538	retrieve book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005539	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005540	find books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000005541	get books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005542	search for book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005543	find book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005544	i am looking for books that have rating count not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005545	retrieve book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005546	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005547	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005548	enumerate books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005549	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005550	how many awards in the books which has the maximum number of pages	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005551	get book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005552	i want to search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005553	i would like to retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005554	get books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005555	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005556	what book get 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005557	how many awards are there in the books which has the minimum review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005558	find books that have smaller number of pages than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000005559	i need book with 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005560	please find books which have review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005561	enumerate books with over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005562	find the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005563	i need books which have lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005564	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005565	i need to know the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005566	please list books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005567	i want book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005568	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005569	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000005570	i am looking for the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005571	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005572	i would like the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005573	get books that have 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005574	i am looking to retrieve book having rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005575	i would like to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005576	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000005577	what books have 0 or higher number of pages and rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 and param:numberOfPages:Number >= 0 => notify
S5000005578	i need to search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005579	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005580	please find book which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005581	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005582	search the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005583	please list books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005584	retrieve book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005585	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005586	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005587	get books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005588	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005589	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005590	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005591	i want to search for book having rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005592	what are the books having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005593	how many awards are there in the books with the minimum rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005594	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005595	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005596	i am looking for book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005597	please list book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005598	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005599	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005600	i need book that have larger rating than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005601	i need to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005602	i would like book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005603	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005604	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005605	i want book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000005606	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005607	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005608	i want book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005609	what are the book which have over zero rating and have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005610	i need the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005611	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005612	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005613	i need books which have 4 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005614	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005615	i am looking to retrieve books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005616	retrieve books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005617	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005618	which books have more rating than one and number of pages 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:numberOfPages:Number == 12 => notify
S5000005619	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005620	please list book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005621	i need books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000005622	i want to know the book format and book edition of the books with the minimum rating .	now => [ param:bookEdition:String , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005623	i am looking for books which have rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005624	i want to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005625	what are books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005626	retrieve books which have lower review count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000005627	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000005628	find books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005629	tell me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005630	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005631	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005632	which are the book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005633	which are the books which have rating count smaller than 7 and with review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 and param:aggregateRating.reviewCount:Number == 7 => notify
S5000005634	i would like to search for books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005635	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005636	please find books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005637	get book which have smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005638	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005639	i need book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005640	i want to search for book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000005641	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005642	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005643	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000005644	what are book that have 1 or below number of pages and have awards containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 and param:numberOfPages:Number <= 1 => notify
S5000005645	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005646	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000005647	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005648	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005649	i need to get books that have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005650	i am looking for book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005651	find book which have lower rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000005652	find books with 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005653	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005654	i want to search book which have smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000005655	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005656	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005657	i want books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005658	i would like to search for books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005659	i need to retrieve book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005660	i would like books with isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005661	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000005662	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005663	get books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005664	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005665	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005666	give me the url and in language of the book with the highest rating	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005667	enumerate book with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005668	i want to search books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000005669	i want books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005670	search for book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005671	i want book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005672	i want book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005673	what are books having 10 or above rating and rating count 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 and param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005674	what are books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005675	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005676	i am looking to retrieve book with rating 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005677	get books that have 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005678	what is the in language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005679	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005680	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005681	find book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005682	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005683	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005684	i want to search for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005685	i would like to find books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005686	please find book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005687	i am looking to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005688	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005689	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005690	i am looking to search books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005691	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005692	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005693	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005694	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005695	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005696	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000005697	i want to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005698	retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005699	i would like books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000005700	please list book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005701	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005702	retrieve book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005703	search for the QUOTED_STRING_0 which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005704	search the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005705	i would like the QUOTED_STRING_0 with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005706	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005707	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005708	i am looking for book with less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005709	i want to search for books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005710	i am looking for the number of awards in book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000005711	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005712	i need to search for books which have review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005713	get books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005714	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005715	which book get 11 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005716	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005717	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005718	enumerate books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005719	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000005720	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005721	how many awards are there in the books with the highest rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005722	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005723	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005724	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005725	get the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005726	please enumerate book having over 2 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005727	which are books that have lower rating count than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005728	which are the books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005729	show me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005730	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005731	i am looking for book that have greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005732	what are people of QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000005733	enumerate book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005734	i want to search books having 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000005735	search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005736	get book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005737	search for books that have lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005738	please list books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005739	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005740	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005741	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005742	find the QUOTED_STRING_0 with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005743	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000005744	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005745	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005746	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005747	get books having rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005748	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005749	get books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005750	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005751	i would like to find book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005752	please enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005753	search for book with lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005754	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005755	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005756	please list books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005757	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005758	i want to retrieve book with less number of pages than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005759	i would like books which have less review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000005760	please list books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005761	what is the book edition and url of the book which has the lowest rating count ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000005762	tell me what 's the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005763	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005764	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005765	i would like to search books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005766	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005767	which are books which have over 10 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005768	i am looking for book that have zero or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005769	search book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005770	search books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005771	i would like to find book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005772	i would like books that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005773	i need to search book having 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005774	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005775	how many awards do the book which has the minimum number of pages have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005776	i would like to retrieve book that have number of pages 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 6 => notify
S5000005777	get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005778	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005779	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005780	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005781	i need book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005782	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005783	i am looking to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005784	tell me the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005785	please enumerate books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005786	retrieve books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005787	what book have review count equal to 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005788	i need to retrieve books which have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005789	i am looking to get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005790	tell me what is the image of person	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005791	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005792	i am looking for the QUOTED_STRING_0 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005793	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005794	i need to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005795	which books get review count 6 and isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005796	get books with rating not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005797	i need to search book which have less rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005798	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005799	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005800	find book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005801	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005802	search for book with over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005803	i would like to search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005804	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005805	search for books that have review count at least zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005806	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005807	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005808	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005809	what are books which have book format equal to hardcover ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000005810	i am looking for book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005811	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005812	enumerate book which have less rating count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000005813	get book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005814	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005815	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005816	list book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005817	what books have 6 or less review count and smaller rating count than 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005818	please enumerate books which have 0 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005819	which books get 9 or below review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005820	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005821	retrieve book with over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005822	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005823	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005824	i would like to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005825	i need book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005826	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005827	search for the QUOTED_STRING_0 with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005828	i would like books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005829	which are the books having rating count zero and review count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000005830	please search for books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005831	i want book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005832	get books which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005833	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005834	show me what 's the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005835	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005836	get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005837	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005838	i would like to search books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005839	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000005840	get books having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005841	i want book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005842	show me what 's the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005843	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005844	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005845	i would like to get book that have rating count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000005846	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005847	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005848	which are books having review count lower than 6 that have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005849	retrieve book having isbn including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005850	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005851	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005852	retrieve books having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000005853	what book get over 0 review count and larger rating count than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005854	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000005855	i need book having one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005856	what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000005857	i would like to search books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005858	find the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005859	please enumerate books having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005860	i would like book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005861	tell me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005862	what book have 12 or less rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000005863	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005864	i am looking for book that have zero or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005865	search the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005866	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005867	please find book which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005868	which are the books with zero awards and higher number of pages than 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 and param:numberOfPages:Number >= 0 => notify
S5000005869	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005870	please list books which have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005871	enumerate books which have review count at least 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005872	i want book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005873	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005874	i want to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005875	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005876	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005877	i would like to get book that have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000005878	enumerate book which have less rating count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000005879	please list book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005880	i am looking to search books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000005881	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005882	get books having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005883	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005884	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005885	what books get 3 or more review count and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005886	what are book that have 1 or below number of pages and have awards containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 and param:numberOfPages:Number <= 1 => notify
S5000005887	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005888	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005889	i need books which have number of pages not more than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005890	find the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005891	i am looking to search for books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005892	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005893	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005894	i want to retrieve book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000005895	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000005896	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005897	search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005898	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005899	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000005900	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005901	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005902	what are books which have at most 12 awards and have rating equal to 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000005903	get book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005904	get book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005905	get books which have less review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000005906	i want to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005907	i need book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000005908	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005909	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005910	search books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005911	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005912	which book get number of pages equal to 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005913	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005914	retrieve the QUOTED_STRING_0 which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005915	i am looking for the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005916	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005917	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005918	get books which have rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005919	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000005920	enumerate book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005921	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005922	get the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005923	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000005924	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005925	i am looking for the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005926	search book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005927	i need to search books with zero or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005928	i want to find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005929	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005930	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000005931	i need books which have 4 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005932	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005933	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005934	i want books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005935	get books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005936	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005937	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005938	i need to find book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005939	i want book that have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000005940	i need book that have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000005941	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005942	get books that have 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005943	i want to retrieve book with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005944	i want book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005945	get books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005946	i want books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005947	i am looking to retrieve books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000005948	search for book having rating count lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005949	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005950	i would like books having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000005951	find books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005952	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005953	which are the QUOTED_STRING_0 that have rating equal to zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000005954	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005955	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005956	please list books that have 3 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005957	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005958	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005959	get books with rating count 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000005960	i need book that have at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005961	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005962	list books that have rating at most 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005963	find book with review count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005964	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005965	retrieve books with over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005966	get books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000005967	list books that have rating at most 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005968	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005969	please enumerate books with rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005970	get books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000005971	search for book with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005972	what is the number of awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000005973	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005974	what are book that have 11 or above rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005975	which books have over 11 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005976	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005977	retrieve book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005978	please enumerate books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005979	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005980	tell me what is the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005981	how many awards are there in the books which has the highest rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000005982	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000005983	i would like books with greater number of pages than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005984	find books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005985	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005986	what is the link of person ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000005987	i need books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005988	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005989	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005990	which are the book which have 8 or above rating and have review count 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:aggregateRating.reviewCount:Number == 4 => notify
S5000005991	retrieve book having isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005992	get books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000005993	i want to retrieve books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005994	enumerate book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005995	which books have less number of pages than one and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 1 => notify
S5000005996	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005997	search the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000005998	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005999	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006000	find books with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006001	get book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006002	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006003	find books having review count more than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006004	i want to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006005	what are the book having number of pages equal to zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006006	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006007	search books having less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006008	get books having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006009	i would like books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006010	tell me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006011	please list books which have number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006012	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006013	find books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006014	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006015	please find book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006016	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006017	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006018	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006019	search the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006020	please list book having rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006021	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006022	i want book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006023	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006024	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006025	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006026	get book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006027	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006028	i need book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006029	i would like to find book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000006030	get books that have rating count not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006031	search the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006032	i would like book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006033	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006034	what book have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006035	i need to retrieve books which have higher review count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006036	please enumerate book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006037	which are the books which have number of pages 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006038	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006039	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006040	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006041	i need book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006042	find the QUOTED_STRING_0 with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006043	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006044	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006045	retrieve books without or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006046	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006047	which book get rating count less than 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006048	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006049	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006050	how many QUOTED_STRING_0 are there	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000006051	which are the book which have higher number of pages than 0 and have review count more than 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 and param:numberOfPages:Number >= 0 => notify
S5000006052	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006053	i need book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006054	what are the book with rating count 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000006055	show me what 's the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000006056	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006057	search for books having over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006058	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006059	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006060	get book having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006061	please find book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006062	get book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006063	please search for books which have less review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000006064	please search book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000006065	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006066	get book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006067	show me what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000006068	i want to find books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006069	i would like to retrieve book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006070	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006071	i want to search for books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006072	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006073	i would like the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006074	i need book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006075	i want to search for book having more than 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 3 => notify
S5000006076	i need book which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006077	search for book with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006078	how many awards are there in the book with the lowest rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006079	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006080	search books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006081	i need book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006082	find book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006083	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006084	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006085	how many awards are there in the books with the lowest review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006086	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006087	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006088	i am looking for books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006089	what are book having less review count than 4 and number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 and param:numberOfPages:Number == 8 => notify
S5000006090	which book have at most 12 awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 => notify
S5000006091	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006092	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006093	i need to retrieve book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006094	please find books that have review count 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000006095	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006096	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006097	list books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006098	i want to find books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006099	i want to search for books with rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006100	i need book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006101	list book which have over 1 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006102	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006103	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006104	i need books which have number of pages not more than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006105	get books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006106	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006107	please retrieve books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006108	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006109	get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006110	what are books that do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006111	how many awards do the books with the maximum rating count have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006112	search for books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006113	search books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006114	retrieve books which have rating count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000006115	show me the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006116	list book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000006117	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006118	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006119	get book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006120	i am looking for books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006121	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006122	search for books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006123	i need the link and rating of the book with the maximum review count	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006124	list books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006125	i would like to find book having rating greater than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006126	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006127	tell me what 's the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006128	list books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006129	i want to search books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000006130	search books that have higher rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006131	get books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006132	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006133	i want to retrieve book with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006134	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006135	i am looking to retrieve book having larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006136	i am looking for book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006137	i want book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006138	get books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006139	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006140	i want the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006141	i want to get book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006142	what books get over 9 rating count and rating 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000006143	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006144	get books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006145	which are the book having one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006146	i want to search book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006147	i want books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006148	please list books which have rating count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000006149	i need the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006150	search books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006151	what is the rating count of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006152	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000006153	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006154	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006155	i want to retrieve books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000006156	find the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006157	get book with rating 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006158	i need book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000006159	search books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006160	tell me the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006161	get books having rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006162	i would like book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006163	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006164	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006165	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006166	i would like to find book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006167	i would like to know the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006168	enumerate books with over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006169	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006170	i want to find book which have less number of pages than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006171	please list books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006172	i would like book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006173	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006174	i am looking for books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006175	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006176	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006177	get books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000006178	get books having larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006179	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006180	i am looking for books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006181	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006182	i need to get books that have greater rating than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006183	find books with 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006184	i want to retrieve book with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006185	i need to search for books that have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006186	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006187	i am looking for books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006188	i need books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006189	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000006190	search book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006191	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006192	please get books that have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006193	i am looking for book without rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006194	i need books that have review count at least zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006195	get books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000006196	which is the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006197	enumerate book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006198	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006199	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006200	get book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006201	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006202	please enumerate books that have 7 or more rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000006203	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006204	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006205	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006206	find books which have 0 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006207	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000006208	i want book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006209	i need to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006210	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006211	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006212	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000006213	which are QUOTED_STRING_0 having 10 or lower rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000006214	what are the book which have number of pages not less than 4 and having book format hardcover ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover and param:numberOfPages:Number >= 4 => notify
S5000006215	get book that have QUOTED_STRING_0 in their in language	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006216	search for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006217	search books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006218	which book get rating count less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006219	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006220	which are books having review count lower than 6 that have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006221	what is the image of person	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006222	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006223	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006224	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006225	please enumerate books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006226	tell me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006227	i would like book that have rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006228	search books that have larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000006229	i want to get book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006230	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006231	i need books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006232	show me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006233	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006234	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006235	i am looking for book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000006236	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006237	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006238	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006239	i want to get book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006240	which are the QUOTED_STRING_0 which have rating equal to 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000006241	which are the book having one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006242	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006243	i am looking for books which have less review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000006244	i would like books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006245	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006246	find books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006247	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006248	get book with review count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000006249	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006250	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006251	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006252	i need book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006253	i need the image and link of the books with the highest review count	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006254	which are the QUOTED_STRING_0 with over zero review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000006255	which are the books having rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006256	search for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006257	what is the review count of book ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006258	tell me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006259	list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006260	i want book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006261	i want to retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006262	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006263	i want to get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006264	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006265	i am looking to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006266	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006267	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006268	what QUOTED_STRING_0 has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006269	i would like books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006270	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006271	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006272	i need books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006273	i want to retrieve book which have book format audiobook format .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:AudiobookFormat => notify
S5000006274	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006275	search for book with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006276	i would like book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000006277	search book that have 7 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006278	search the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006279	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006280	i need the QUOTED_STRING_0 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006281	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006282	what is the link and image of the books with the most awards ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) => notify
S5000006283	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006284	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006285	get books having rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006286	list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006287	please retrieve books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006288	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006289	i want to find books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000006290	i need to search book which have less rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006291	i need book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000006292	tell me what 's the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006293	tell me the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006294	which book get 3 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006295	get book with rating 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006296	get books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006297	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006298	show me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006299	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006300	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006301	i need to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006302	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006303	which are the books having rating count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006304	i would like to search for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006305	enumerate books having over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006306	i want book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006307	i am looking to retrieve book having rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006308	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006309	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006310	list book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006311	please list books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006312	i want book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006313	which is the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006314	i want books with less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006315	find books which have 0 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006316	show me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006317	i need book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006318	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006319	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006320	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006321	get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006322	find book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006323	find book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006324	i want book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006325	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006326	search book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006327	please enumerate books with rating count smaller than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000006328	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006329	i would like book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006330	enumerate book which have less rating count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006331	i need book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006332	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006333	retrieve book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000006334	i would like books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006335	search for book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006336	which are books which have greater rating count than 3 , with rating 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:aggregateRating.ratingValue:Number == 6 => notify
S5000006337	search books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006338	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006339	please enumerate books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006340	i want to retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006341	i am looking for the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006342	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000006343	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006344	give me the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006345	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006346	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006347	get the QUOTED_STRING_0 with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006348	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006349	show me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006350	i am looking for books which have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006351	i am looking for book that have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006352	get books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006353	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006354	i need the QUOTED_STRING_0 which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006355	search for books having over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006356	list book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006357	i need to get books that have lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006358	i want to know the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006359	retrieve book that have higher review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006360	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006361	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006362	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006363	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006364	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006365	get books having rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006366	enumerate book that have number of pages greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000006367	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006368	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006369	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006370	i want to search for books that have higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006371	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006372	i would like to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006373	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006374	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006375	tell me what 's the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006376	search for books that have review count at least zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006377	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006378	get book with rating count less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006379	i want book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006380	search book having 9 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000006381	get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006382	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006383	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006384	search for books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000006385	i need to get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006386	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006387	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006388	enumerate book with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006389	i am looking for books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006390	search book with 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006391	list book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006392	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006393	i would like to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006394	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006395	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006396	list book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006397	what book have number of pages 5 and review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 5 => notify
S5000006398	i would like books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006399	get the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006400	list book that have larger rating than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006401	i am looking to get book having over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006402	i would like to get books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006403	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006404	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006405	retrieve books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006406	which book get NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006407	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006408	how many awards are there in the books with the highest rating	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006409	i would like to find book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006410	i need to search for books that have zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006411	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006412	i am looking for books with rating not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006413	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006414	please retrieve books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006415	i am looking to retrieve books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000006416	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006417	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006418	i want to search for books which have at most 12 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 => notify
S5000006419	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006420	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006421	get book which have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006422	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006423	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006424	tell me what is the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006425	i need to search for books which have rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000006426	what books have 8 or above review count and one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 and param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006427	i would like to search for books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006428	i am looking for book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006429	tell me what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006430	find the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006431	please search for book having rating at most 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006432	i would like to search for book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006433	which are the book that have 7 or higher rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006434	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006435	i want to search book that have 9 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006436	tell me what is the review count of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006437	search for book having rating count lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006438	search book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006439	which are the books with number of pages not less than 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000006440	i would like to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006441	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006442	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006443	which book get no more than 11 awards and number of pages 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 and param:numberOfPages:Number == 4 => notify
S5000006444	search book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006445	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006446	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006447	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006448	get book with review count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000006449	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006450	retrieve book having rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006451	which are the books having rating count zero and review count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000006452	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006453	how many awards do the books with the least awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) ) => notify
S5000006454	i would like book that have rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006455	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006456	i want to retrieve books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006457	search for books with review count at most 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000006458	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006459	i need to search for books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000006460	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006461	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006462	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006463	i need books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006464	i need to retrieve book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006465	what book get review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006466	i want book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006467	what are book with lower review count than 8 that have in language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006468	search for books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006469	tell me the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006470	get books that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000006471	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006472	please list book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006473	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006474	please enumerate book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006475	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006476	retrieve the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006477	search book that have 11 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006478	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006479	get books with isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006480	get books which have in language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006481	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006482	i would like to search book having rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006483	please enumerate book having over 2 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006484	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006485	i would like to search books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006486	retrieve book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006487	i want to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006488	which are the books that have 9 or above rating and have rating count 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006489	i would like books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006490	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006491	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000006492	i would like to find book with rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006493	i want to find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006494	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006495	i would like books with 1 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006496	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006497	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006498	list books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000006499	i need to get book with book format ebook .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000006500	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006501	search books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006502	search for books with 12 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006503	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000006504	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006505	which QUOTED_STRING_0 has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006506	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006507	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006508	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000006509	find the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006510	how many QUOTED_STRING_0 are there	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000006511	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006512	get book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006513	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006514	get book that have over zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006515	i want books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006516	which books get number of pages zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006517	please list book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006518	search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006519	what is the number of awards in the book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000006520	i need book with 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006521	i would like to find book that have 9 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006522	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006523	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006524	search for books with review count at most 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000006525	i need books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006526	i am looking to search for books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006527	please list books with 0 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006528	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006529	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006530	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006531	please retrieve books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000006532	find books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006533	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006534	which is the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006535	i want book having rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006536	list books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006537	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006538	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000006539	i would like book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006540	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006541	find books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006542	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006543	enumerate book which have less rating count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006544	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006545	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006546	what is the review count and link of the book with the lowest rating count	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006547	what books have less rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006548	what is the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000006549	which are the book with review count equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006550	what are the books which have higher number of pages than zero and have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:numberOfPages:Number >= 0 => notify
S5000006551	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006552	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006553	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006554	search for books with rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006555	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006556	what are the books having 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006557	get books which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006558	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006559	what are books having rating count one which have 2 or more rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006560	i am looking for books with zero or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006561	i am looking to search book having 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000006562	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006563	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006564	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006565	i want to search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006566	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006567	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006568	get books having rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006569	i am looking for book having zero or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006570	which are book which have review count at least 1 and with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006571	please search books with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006572	find the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006573	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006574	i need book having rating count more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006575	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006576	get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006577	which QUOTED_STRING_0 have number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 1 => notify
S5000006578	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006579	get books with number of pages lower than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000006580	get books having rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006581	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006582	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006583	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006584	get book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006585	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006586	i am looking to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006587	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006588	please search for book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006589	i want to search for books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006590	i want to get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006591	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006592	i need books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006593	please find book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006594	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006595	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006596	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006597	what book have 3 or higher rating count and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006598	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006599	i would like to search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006600	i am looking for book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006601	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006602	what is the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006603	which books have rating at most 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006604	please get books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006605	retrieve book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006606	search books that have higher rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006607	i need to search book that have 4 or lower rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000006608	i need book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000006609	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006610	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006611	i would like to search for books that have zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006612	list book having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006613	i need book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006614	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006615	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006616	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006617	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006618	i want book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006619	search books that have rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000006620	i am looking to find books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006621	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006622	i want to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006623	get book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006624	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006625	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000006626	retrieve book having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006627	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006628	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006629	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006630	how many awards in the books with the minimum review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006631	i need to search book which have less rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006632	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006633	which book have smaller review count than 1 and number of pages 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 and param:numberOfPages:Number == 0 => notify
S5000006634	get books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006635	tell me what 's the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006636	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006637	please list books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006638	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006639	please list books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006640	find the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006641	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006642	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006643	which are the books which have 10 or greater review count and have number of pages equal to 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:numberOfPages:Number == 11 => notify
S5000006644	search for books having over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006645	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006646	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006647	show me the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006648	please list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006649	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006650	search for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006651	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000006652	please find book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006653	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006654	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006655	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006656	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006657	retrieve books that have review count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000006658	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006659	please list books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006660	get books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006661	what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006662	i am looking for book that have 9 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006663	search for books without or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006664	i want books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006665	how many awards are there in the books with the largest number of awards ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) ) => notify
S5000006666	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006667	which books get 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006668	search the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006669	find the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006670	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006671	get book that have larger rating count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006672	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006673	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006674	i am looking for book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006675	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006676	please enumerate books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006677	i want to find book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006678	i am looking for the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006679	what is the number of pages of book ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006680	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006681	search book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006682	i need to get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006683	get books with rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006684	which books get over 12 rating and number of pages less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 and param:numberOfPages:Number <= 12 => notify
S5000006685	i need book having rating count more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006686	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006687	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006688	what are book with over zero rating and over 12 rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006689	please list books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006690	retrieve the QUOTED_STRING_0 which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006691	how many awards does the books which has the highest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006692	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006693	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006694	i want to search for books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006695	show me what 's the review count of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006696	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006697	search the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006698	which are the QUOTED_STRING_0 's QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000006699	i am looking for books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000006700	i am looking for book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006701	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006702	which are the books which have number of pages smaller than one and have over 11 review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 11 and param:numberOfPages:Number <= 1 => notify
S5000006703	i need to get book with book format ebook .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000006704	tell me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006705	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006706	get books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006707	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006708	i am looking to search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006709	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006710	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006711	i would like to find book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000006712	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006713	please list book which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006714	i am looking for books which have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000006715	enumerate book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006716	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006717	get books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006718	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006719	get book having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006720	list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006721	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006722	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006723	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006724	search for books which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006725	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006726	i would like books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006727	get book which have QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006728	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006729	i would like to get book that have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006730	please list books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006731	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006732	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006733	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006734	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006735	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006736	tell me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006737	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006738	get books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006739	i need books with number of pages not less than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000006740	give me the book edition and image of the books which has the lowest rating .	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006741	tell me the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006742	i need book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006743	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006744	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006745	please enumerate books with rating count smaller than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000006746	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006747	please enumerate books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006748	search book which have over 1 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006749	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006750	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006751	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006752	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006753	i am looking for book with at least 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 5 => notify
S5000006754	i would like book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006755	tell me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006756	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006757	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006758	i would like the QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006759	enumerate books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006760	get books having larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006761	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006762	i would like book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006763	list book with over NUMBER_0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006764	i want to find books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000006765	which books get rating count 9 and rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000006766	get books having review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006767	get books which have rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006768	what is the review count and rating count of the books with the least awards ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) => notify
S5000006769	show me what is the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006770	i want books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000006771	get books that have 0 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006772	i want books that have 0 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006773	please list book with 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006774	i would like books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006775	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006776	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006777	i need book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006778	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006779	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006780	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006781	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006782	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006783	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006784	which book get 4 awards and less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 4 and param:aggregateRating.reviewCount:Number <= 4 => notify
S5000006785	find books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006786	please list books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006787	i would like book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006788	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006789	what book have review count lower than one and is isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006790	find books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006791	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006792	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006793	i need books without or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006794	i would like book that have rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006795	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006796	find the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006797	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006798	which book get rating count 6 and is isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006799	what are the QUOTED_STRING_0 with number of pages greater than 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 6 => notify
S5000006800	i want books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006801	which QUOTED_STRING_0 get rating 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000006802	search for book which have rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006803	please enumerate books with rating count smaller than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000006804	i am looking to retrieve book having rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006805	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006806	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000006807	tell me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006808	what book have 6 or less review count and rating lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006809	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006810	find book which have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000006811	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006812	i am looking for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006813	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006814	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006815	search book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006816	get books with rating count lower than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000006817	get books having rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006818	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006819	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006820	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000006821	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006822	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006823	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006824	i need the link and rating of the book with the maximum review count	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006825	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006826	show me what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006827	i am looking to search for books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006828	what is the review count and book format of the books with the lowest rating count ?	now => [ param:aggregateRating.reviewCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006829	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006830	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006831	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006832	please list book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006833	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006834	i am looking to find books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006835	tell me the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006836	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006837	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006838	what is the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006839	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000006840	get books having larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006841	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000006842	list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006843	what are books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006844	i would like to search for book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006845	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006846	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006847	i am looking for book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000006848	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006849	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006850	get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000006851	i want books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006852	get books that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000006853	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006854	which are books having at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006855	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006856	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006857	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000006858	what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006859	get books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006860	i need books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006861	i would like to know the url and in language of the books which has the highest rating count	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006862	i would like books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006863	please search books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000006864	i want the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006865	find books that have smaller number of pages than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006866	get books that have more rating than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006867	get book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000006868	i need book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006869	i would like books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006870	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006871	i want to find books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006872	get books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000006873	please enumerate book without rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006874	i need books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006875	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006876	find the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006877	what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006878	tell me what 's the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006879	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006880	find book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006881	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000006882	i want books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006883	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006884	please get books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006885	i need book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006886	please get books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006887	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006888	i would like to get book that have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006889	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006890	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006891	i want books without or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006892	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006893	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006894	i need books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006895	i would like books with smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006896	which are book having 12 or lower review count which have rating count 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006897	i need to find books having book format ebook	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000006898	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006899	i want to search for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000006900	which are books having at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006901	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006902	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006903	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006904	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006905	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000006906	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006907	show me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006908	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006909	i would like book having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006910	what books get rating 0 and isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006911	i want books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006912	i am looking to search books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006913	search books that have rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000006914	search the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006915	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006916	i am looking to find books which have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006917	i need to get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006918	what are books that have 8 or above rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006919	which are books having 3 awards that have over 11 review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 and param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006920	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006921	i am looking for the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006922	tell me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006923	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006924	retrieve books which have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000006925	i am looking to find books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006926	i would like book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006927	retrieve the QUOTED_STRING_0 which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006928	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006929	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000006930	i would like to search book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006931	search the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006932	i need the image and link of the books with the highest review count	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000006933	please list books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000006934	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006935	search for books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006936	i am looking for books which have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006937	i am looking to search for books that have smaller number of pages than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006938	list book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006939	i am looking for books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006940	get books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006941	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006942	what is the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006943	retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006944	search books that have less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006945	i need books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006946	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006947	which are book with number of pages not less than 0 and book edition QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 0 => notify
S5000006948	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006949	i need books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006950	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006951	i would like to get book that have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006952	i am looking to retrieve books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006953	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006954	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000006955	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006956	which are the book which have 8 or above rating and have review count 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:aggregateRating.reviewCount:Number == 4 => notify
S5000006957	how many awards do the books with the highest review count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000006958	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006959	please list book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006960	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006961	get books which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006962	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000006963	search for books with rating count lower than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000006964	please get books having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006965	what QUOTED_STRING_0 get 3 or more review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000006966	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006967	get books having rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006968	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006969	find books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006970	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006971	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006972	please find books that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000006973	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006974	i would like book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006975	i would like books that have 7 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000006976	get book with lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006977	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006978	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006979	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000006980	i am looking for book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006981	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006982	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006983	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000006984	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000006985	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000006986	search books with zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006987	i would like to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006988	enumerate book having rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006989	please list books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006990	i need books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000006991	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006992	what book get greater rating than 3 and review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:aggregateRating.reviewCount:Number == 2 => notify
S5000006993	please enumerate book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006994	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006995	retrieve books that do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006996	please list books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006997	enumerate book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006998	get book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006999	i am looking to retrieve books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007000	i am looking for books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007001	i want to retrieve book with less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007002	search for book having rating count lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007003	enumerate books with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007004	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007005	i would like books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007006	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007007	please search for book with NUMBER_0 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000007008	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007009	retrieve book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000007010	what books get rating count less than 4 and number of pages equal to 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 and param:numberOfPages:Number == 12 => notify
S5000007011	please retrieve books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000007012	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007013	search for books that have review count at least zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007014	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007015	search books that have less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007016	get book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007017	please retrieve books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000007018	search books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007019	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007020	what is the link of person ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007021	tell me what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000007022	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007023	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007024	i need the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007025	list books with number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007026	i am looking to search book that have number of pages greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000007027	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007028	find books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007029	get books that have 0 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007030	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007031	search book that have 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007032	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007033	tell me what 's the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007034	i need to search for books that have zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007035	find the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007036	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007037	please find books which have review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007038	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007039	please enumerate books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007040	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007041	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007042	search for books which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007043	i would like to search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007044	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007045	i want books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007046	i want to retrieve book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007047	i need to get books that have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007048	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007049	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007050	i need books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007051	what is the number of pages of book ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007052	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007053	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007054	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007055	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007056	i want books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007057	please enumerate book that have QUOTED_STRING_0 in their in language	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007058	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007059	retrieve book having rating 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007060	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007061	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007062	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007063	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007064	find book with rating count less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000007065	i am looking to search book having 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000007066	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007067	find books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007068	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007069	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007070	get book that have over zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007071	get books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000007072	show me what 's the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000007073	enumerate book which have less rating count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000007074	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007075	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007076	enumerate book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007077	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007078	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007079	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000007080	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007081	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007082	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007083	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007084	retrieve book having isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007085	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007086	get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007087	i would like to find book with rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007088	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007089	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007090	i need the QUOTED_STRING_0 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007091	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007092	i would like to find book that have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007093	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007094	i want the QUOTED_STRING_0 with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007095	tell me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007096	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007097	i would like books that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007098	search book having rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000007099	get book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007100	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007101	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007102	i need book that have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000007103	i want books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000007104	find book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000007105	i want to get book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007106	retrieve books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007107	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007108	get books with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007109	please get books that have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007110	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007111	what is the link of person ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007112	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007113	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007114	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007115	i want books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007116	i want to retrieve books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007117	get book that have QUOTED_STRING_0 in their in language	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007118	i would like books having 1 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007119	i need books having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007120	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007121	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007122	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007123	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007124	i need books having number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007125	retrieve the QUOTED_STRING_0 which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007126	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007127	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007128	tell me what is the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007129	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007130	i want to find books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007131	please enumerate books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007132	find books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007133	i need books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007134	search books with isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007135	which are the books with over 0 review count that have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007136	search for books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000007137	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007138	i need book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007139	i would like books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007140	please list books which have number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007141	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007142	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007143	i want books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007144	i would like books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007145	what are books which have more rating than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007146	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007147	search book having 9 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007148	which are the book which have review count lower than 6 , with review count at least 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 6 and param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007149	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007150	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007151	i need books which have number of pages not more than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007152	i would like the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007153	retrieve book with over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007154	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007155	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007156	show me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007157	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007158	find books which have 0 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007159	i would like books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007160	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007161	get books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000007162	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007163	i want to retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007164	tell me the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007165	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007166	i need books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007167	i am looking to get books which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007168	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007169	which are people for QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000007170	how many awards does the book which has the highest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007171	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007172	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007173	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007174	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007175	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007176	i am looking to get book having over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007177	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000007178	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007179	i would like books that have rating count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007180	please search for book with no more than 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000007181	which are the book that have 6 or less review count and have rating count 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007182	i need to search for books which have review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007183	please enumerate books with rating count smaller than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000007184	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007185	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007186	i would like to get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007187	retrieve book with over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007188	get books having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007189	i need book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007190	i am looking for the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007191	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007192	which are book having rating count at most NUMBER_0 which have review count 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000007193	what are the book that have more rating than 10 , with review count 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000007194	what book get 8 or above rating and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007195	which are the book which have 8 or above rating and have review count 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:aggregateRating.reviewCount:Number == 4 => notify
S5000007196	please list book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007197	i need to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007198	get book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007199	i want to search for books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007200	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007201	i need the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007202	please search for books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007203	i would like books with 1 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007204	find books that have smaller number of pages than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007205	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007206	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007207	retrieve book having lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007208	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007209	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007210	i want to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007211	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007212	what books get 8 or less number of pages and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 8 => notify
S5000007213	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007214	tell me what is the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007215	get book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007216	tell me what 's the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007217	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007218	how many awards do the books which has the minimum rating have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007219	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007220	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000007221	i need book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007222	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007223	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007224	get book which have higher number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007225	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007226	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007227	search for books that have review count at least zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007228	which book have book format paperback and is isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007229	please list book having rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007230	search books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007231	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007232	retrieve book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000007233	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007234	i need the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007235	i would like book having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007236	i am looking to search books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007237	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007238	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007239	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007240	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007241	i am looking for books with lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007242	enumerate books that have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007243	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007244	search book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007245	find book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007246	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000007247	find books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007248	which book have rating count less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000007249	i want to retrieve book with less number of pages than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007250	please enumerate book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007251	i am looking to search for books that have smaller number of pages than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007252	i want book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007253	i want to find book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007254	i need books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000007255	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007256	retrieve books with rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000007257	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007258	i need the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007259	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007260	i need to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007261	show me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007262	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007263	i need to search book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000007264	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007265	how many awards are there in the books with the highest rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007266	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007267	enumerate book which have less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007268	enumerate book which have less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007269	i want to search for books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007270	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007271	get book having rating count more than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007272	i need books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007273	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000007274	i need to search book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007275	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007276	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007277	i need book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007278	list book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007279	get books which have in language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007280	please get books which have rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007281	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007282	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007283	show me what 's the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007284	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007285	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007286	get book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007287	what book get 10 or more number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007288	which are books with review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007289	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000007290	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007291	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000007292	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007293	i would like to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007294	search for books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007295	please find book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007296	i would like books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007297	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007298	i would like books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007299	i would like books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007300	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000007301	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007302	search books with isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007303	i would like books with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007304	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007305	i am looking for book which do not have number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007306	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007307	please search for book with no more than 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000007308	get book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007309	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007310	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007311	retrieve book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000007312	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007313	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007314	i would like to find book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000007315	get book without rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007316	i need the image and link of the books with the highest review count	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000007317	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007318	what are the book with rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000007319	what are books that have larger number of pages than 5 , with review count 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 and param:numberOfPages:Number >= 5 => notify
S5000007320	retrieve book with over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007321	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007322	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007323	find book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007324	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007325	i want to search books having 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007326	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007327	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007328	retrieve book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007329	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000007330	search for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007331	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000007332	what book get 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007333	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007334	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007335	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007336	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007337	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007338	please get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007339	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007340	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007341	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007342	what are QUOTED_STRING_0 's people .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000007343	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007344	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007345	retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007346	tell me what is the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007347	i need book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007348	i am looking to get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007349	i am looking for books which have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007350	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007351	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007352	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007353	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007354	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007355	retrieve book that have review count more than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007356	get books with rating count 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007357	enumerate book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007358	i would like to know the link and review count of QUOTED_STRING_0 .	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000007359	i am looking for books which have over 5 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007360	search books which have rating count more than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007361	i would like books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007362	list books that have rating at most 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007363	i am looking to get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007364	get the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007365	i am looking for books that have rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000007366	i want book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007367	i need to get books that have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007368	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007369	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007370	i would like to know the link and review count of QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000007371	i am looking for the QUOTED_STRING_0 with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007372	search books that have rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000007373	retrieve books that have 7 or more rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007374	get book with rating 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007375	search for books with 12 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007376	get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007377	find book which have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000007378	get book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007379	tell me what is the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007380	retrieve books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007381	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000007382	i am looking for books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000007383	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007384	what book get 8 or above rating and are isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007385	search for book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007386	please search for books which have less review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000007387	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007388	i would like book that have rating larger than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007389	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007390	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007391	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007392	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007393	i want to get books having review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000007394	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007395	i would like book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007396	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007397	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007398	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007399	get book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007400	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007401	which books get rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007402	which are book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007403	get book with review count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000007404	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007405	show me the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007406	list book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007407	search for book with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007408	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007409	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007410	search the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007411	i need book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007412	list book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007413	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007414	i want to search book that have 9 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007415	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007416	i would like to find books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007417	please enumerate books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007418	please search for book with no more than 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000007419	i need to get book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007420	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007421	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007422	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007423	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007424	search for books which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007425	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007426	please enumerate books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007427	retrieve books with zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007428	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007429	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007430	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007431	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007432	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007433	search the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007434	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007435	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007436	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007437	find the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007438	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007439	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007440	i want to find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007441	i want to search books with lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007442	how many awards are there in the books which has the minimum rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007443	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007444	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000007445	tell me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007446	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007447	tell me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007448	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007449	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007450	find books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007451	find book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007452	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007453	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007454	please search book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000007455	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007456	please search for book with no more than 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000007457	get book having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007458	i need books with zero or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007459	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007460	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007461	please find books which have review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007462	list books with over one rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007463	list books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000007464	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007465	get books that have 0 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007466	retrieve books which have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000007467	which are the books which have number of pages 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007468	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007469	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007470	i want books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007471	list books with number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007472	what are the books which have rating equal to 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007473	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007474	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007475	i need books having 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007476	please enumerate book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007477	please list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007478	i need book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007479	search for books which have over 8 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007480	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007481	please list books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007482	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007483	i want book having rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007484	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007485	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007486	i need to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007487	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007488	retrieve books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007489	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007490	search books with zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007491	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007492	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000007493	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007494	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007495	i am looking for books with lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007496	i want the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007497	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000007498	get book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007499	i need books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007500	get book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007501	find the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007502	i want book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007503	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007504	i would like to get book that have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007505	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007506	i want books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007507	retrieve the QUOTED_STRING_0 which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007508	i want to retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007509	get book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007510	which are the book with number of pages 11 and review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 and param:numberOfPages:Number == 11 => notify
S5000007511	retrieve book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007512	tell me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007513	what are the QUOTED_STRING_0 's people .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000007514	i want to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007515	i want book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000007516	i need to retrieve books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007517	search the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007518	please search books with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007519	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007520	list book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007521	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007522	i want to find book that have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007523	what books have rating 3 and review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:aggregateRating.reviewCount:Number == 7 => notify
S5000007524	tell me what is the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007525	which are book having rating equal to 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007526	i would like to search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000007527	search book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007528	find books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007529	get books which have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000007530	what QUOTED_STRING_0 get number of pages greater than 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 3 => notify
S5000007531	i need books which have 4 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007532	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007533	search book having 9 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007534	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007535	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007536	retrieve book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007537	i am looking for book with at least 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 5 => notify
S5000007538	i need books with number of pages not less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000007539	i would like book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007540	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007541	get book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000007542	i am looking for book with rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000007543	retrieve books which have lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000007544	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007545	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007546	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007547	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007548	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007549	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007550	please list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007551	search for books which have review count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000007552	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000007553	how many awards in the book which has the minimum number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007554	please find books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007555	search books that have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000007556	i am looking to retrieve book with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007557	which are books having rating higher than 9 that have number of pages equal to 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:numberOfPages:Number == 11 => notify
S5000007558	i want books which have lower review count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000007559	get books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007560	i want to retrieve book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007561	i want to search books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007562	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000007563	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007564	i need to search for books which have review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007565	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007566	i would like books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007567	get book that have larger rating count than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007568	i need books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007569	get books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007570	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007571	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007572	i would like the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007573	which are the book having review count 3 and rating higher than 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:aggregateRating.reviewCount:Number == 3 => notify
S5000007574	i need books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007575	which are the book having rating greater than zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007576	search book having 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000007577	search book having 9 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007578	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007579	i need to retrieve book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007580	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007581	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007582	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007583	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000007584	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007585	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007586	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007587	i need books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007588	please list book having rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007589	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007590	what book get 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007591	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007592	find books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007593	i would like to get book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007594	find books with 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007595	what is the number of awards in book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000007596	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007597	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007598	search books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007599	i would like to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007600	search the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007601	i need books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007602	i would like to find book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007603	please enumerate books which have book format paperback .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000007604	how many awards are there in the books with the lowest review count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000007605	retrieve books which have smaller rating count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007606	search books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007607	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007608	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007609	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007610	get book having rating greater than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007611	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007612	i am looking for books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000007613	please list books which have rating count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007614	i need books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007615	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007616	i want to retrieve books having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007617	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007618	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007619	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000007620	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007621	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007622	search for books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000007623	get book with review count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000007624	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007625	find books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000007626	i would like to find book having rating greater than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007627	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007628	i am looking for book having rating count more than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007629	get books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007630	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007631	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007632	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007633	retrieve book having isbn including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007634	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007635	search for books that have lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007636	retrieve book that have 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000007637	get books that have rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007638	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007639	what are book which have 0 or below rating count and have rating 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:aggregateRating.ratingValue:Number == 5 => notify
S5000007640	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007641	please enumerate books with rating higher than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000007642	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007643	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007644	i need books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000007645	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000007646	what are the books that have review count 0 and have rating count more than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000007647	i would like books that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007648	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007649	i want books that do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007650	i want to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007651	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007652	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007653	search books that have less rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007654	please search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007655	find the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007656	search book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007657	which QUOTED_STRING_0 has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007658	please enumerate book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007659	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000007660	find the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007661	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007662	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007663	get the QUOTED_STRING_0 which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007664	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007665	i need books that do n't have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007666	please enumerate books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000007667	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007668	tell me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007669	search for books that have review count at least zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007670	search for books with 12 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007671	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000007672	get books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007673	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007674	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007675	enumerate books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007676	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007677	i am looking to find books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007678	please enumerate book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007679	find books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007680	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007681	i need the QUOTED_STRING_0 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007682	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007683	what is the review count of books ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007684	i would like book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007685	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007686	i want book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007687	tell me what 's the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007688	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007689	i need book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007690	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007691	i am looking to search book with number of pages not more than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007692	i want to retrieve book with less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007693	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000007694	get books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007695	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007696	i need book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007697	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007698	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007699	get books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007700	get books which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007701	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007702	get book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007703	i need book that have 10 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000007704	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000007705	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007706	retrieve books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007707	tell me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007708	get books with rating count larger than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000007709	get books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007710	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007711	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007712	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007713	search books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007714	what books have 3 or less number of pages and rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:numberOfPages:Number <= 3 => notify
S5000007715	get books that have rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007716	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007717	get books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007718	i am looking to retrieve book having rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007719	please find books which have review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007720	get books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000007721	search books with isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007722	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007723	find books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007724	search for book with book format ebook .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000007725	please retrieve book that have isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007726	i need to search book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007727	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007728	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007729	please get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007730	find book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000007731	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007732	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007733	get books that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007734	please search books without more than 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000007735	what are the book with less review count than 2 and 7 or lower number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 and param:numberOfPages:Number <= 7 => notify
S5000007736	get books that have rating count 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 => notify
S5000007737	which are the books having rating count zero and review count one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000007738	get books with rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007739	which are the books which have review count 5 and have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 and param:aggregateRating.reviewCount:Number == 5 => notify
S5000007740	get book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007741	tell me the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007742	list book that have larger rating than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007743	i need books with number of pages not less than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000007744	i need books which have rating count greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007745	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007746	what are books which have over 2 rating and have review count NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007747	get books that have rating count 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 => notify
S5000007748	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007749	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007750	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007751	i want to get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007752	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007753	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007754	what book get 11 or less rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007755	what book get zero or higher number of pages and review count equal to 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number >= 0 => notify
S5000007756	please list books having 10 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007757	i would like books that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007758	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007759	get book which have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000007760	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007761	please list books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000007762	search for books that have 12 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007763	get book that have over zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007764	i would like book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000007765	what is the in language of book ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007766	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007767	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007768	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007769	get book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007770	i would like to search book having rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007771	get book that have 9 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007772	which books get 6 or more rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007773	please enumerate books with rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000007774	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000007775	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007776	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007777	get books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000007778	i need to search book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007779	i want to get books having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007780	i want to search book which have smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000007781	i want to know the book format and book edition of the books with the minimum rating	now => [ param:bookEdition:String , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000007782	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007783	find books which have 0 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007784	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007785	how many QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000007786	what is the number of pages of book ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007787	please list books which have rating count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007788	tell me both the url and author of QUOTED_STRING_0 .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000007789	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000007790	find the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007791	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007792	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007793	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007794	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007795	find book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000007796	please enumerate books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007797	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000007798	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007799	please get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007800	i am looking for the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007801	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007802	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007803	i would like book without rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007804	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007805	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007806	i need book with over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007807	i want to find books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000007808	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007809	i want to retrieve book with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007810	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000007811	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007812	i would like books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007813	show me what 's the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007814	which are the book having one or below rating and review count 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 and param:aggregateRating.reviewCount:Number == 12 => notify
S5000007815	please list books with 0 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007816	i am looking to get book having over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007817	please enumerate books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007818	tell me what is the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007819	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007820	list books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007821	get book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007822	what are book having lower number of pages than 2 and awards QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 and param:numberOfPages:Number <= 2 => notify
S5000007823	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000007824	i need to find book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007825	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007826	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007827	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007828	tell me what 's the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007829	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007830	i want to search books with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007831	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007832	i need books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007833	i need to find book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007834	retrieve book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007835	what are the books which have 4 awards and having number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 4 and param:numberOfPages:Number == 2 => notify
S5000007836	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007837	tell me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007838	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007839	retrieve books that have 7 or more rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007840	i need to get book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007841	i need to get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007842	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007843	retrieve books which have smaller rating count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007844	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007845	i would like to search for books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007846	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007847	search books that have less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007848	get books with rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007849	i am looking for books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007850	list books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000007851	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007852	enumerate books that have rating not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007853	search for books with review count at most 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000007854	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007855	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000007856	what are the books with smaller number of pages than 12 and rating count 11 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 and param:numberOfPages:Number <= 12 => notify
S5000007857	i would like to find book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000007858	i need books that have review count at least zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007859	search for books with review count at most 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000007860	list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007861	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007862	i am looking to retrieve books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007863	search for book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000007864	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007865	which are books having 4 or more number of pages which have over 1 review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number >= 4 => notify
S5000007866	what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007867	please list books which have book format paperback .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000007868	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007869	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007870	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007871	i am looking to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007872	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000007873	i would like the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007874	i need book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000007875	i would like the QUOTED_STRING_0 which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007876	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007877	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007878	search books with zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007879	i am looking for books which have over 5 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007880	what QUOTED_STRING_0 has the minimum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007881	get books which have less review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000007882	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007883	what are the QUOTED_STRING_0 's people .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000007884	search books that have less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007885	i would like to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007886	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007887	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007888	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000007889	please list book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007890	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000007891	search books having less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007892	please get books having rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007893	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007894	i need books that do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007895	i am looking to find books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007896	search for books with rating count lower than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000007897	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007898	i want to search for book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000007899	i need to get book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007900	how many awards are there in the books with the largest number of awards	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) ) => notify
S5000007901	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007902	get book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007903	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007904	what books get over 9 rating count and rating 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000007905	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007906	i am looking to find books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007907	please list books which have over zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007908	i am looking for the QUOTED_STRING_0 with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007909	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007910	search for book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007911	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007912	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007913	i would like to find book that have 10 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000007914	get books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000007915	i need book with over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007916	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007917	retrieve book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007918	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007919	find books with less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007920	get books having rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007921	search books which have rating count more than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007922	retrieve book that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007923	enumerate books which have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000007924	get book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000007925	please find book which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007926	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007927	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007928	get books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000007929	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007930	which books get over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000007931	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007932	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007933	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000007934	get books that have lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007935	i need books that do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007936	list book that have larger rating than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007937	get books with zero or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007938	search books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007939	find books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007940	search book that have 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007941	get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007942	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000007943	i am looking to find books which have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007944	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007945	i want to get books which have 6 or less review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007946	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007947	find the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007948	list book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007949	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007950	what is the link of person ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007951	i would like to search for book which have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000007952	which are books having less rating than NUMBER_0 and number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:numberOfPages:Number == 0 => notify
S5000007953	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007954	i need book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007955	search the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007956	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007957	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007958	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007959	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007960	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000007961	what are the books isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007962	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007963	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007964	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007965	i am looking to get books which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000007966	search book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007967	find books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007968	tell me what is the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007969	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007970	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007971	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000007972	tell me what is the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007973	retrieve book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007974	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007975	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007976	i need books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007977	what book get 8 or above rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000007978	list book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007979	find the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007980	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000007981	what is the review count of book ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007982	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007983	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000007984	find book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007985	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007986	show me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007987	what are book having 7 or lower review count and 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:numberOfPages:Number <= 6 => notify
S5000007988	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007989	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007990	please list books which have rating count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000007991	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000007992	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007993	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007994	i want books that do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007995	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007996	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000007997	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007998	enumerate books that have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007999	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008000	i need to search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008001	i would like to search book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008002	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008003	what is the book edition of book ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008004	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008005	i would like to get book that have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008006	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008007	i want books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008008	please find book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008009	i would like to know the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008010	i would like books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008011	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008012	which are book that have 6 or more review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008013	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008014	how many awards are there in the books with the lowest review count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008015	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008016	i need book which have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000008017	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008018	i would like to search for book with number of pages lower than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008019	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008020	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008021	list book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008022	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008023	i want to search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008024	what are books which have smaller number of pages than 10 and have rating 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number <= 10 => notify
S5000008025	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008026	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008027	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008028	i need books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000008029	get books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000008030	retrieve book that have higher review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008031	i want book that have rating greater than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008032	find books with 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008033	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008034	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008035	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008036	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008037	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008038	get books having rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000008039	i want book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008040	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008041	i need to retrieve books which have rating not more than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000008042	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008043	i need the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008044	i am looking for book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008045	get books having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000008046	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008047	i want to get book that have over 6 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008048	i would like books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008049	find book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008050	which book get higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008051	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008052	what are the QUOTED_STRING_0 that have rating count 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008053	find books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000008054	search book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008055	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008056	please get book which have zero awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008057	get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000008058	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008059	please find books that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008060	i want books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008061	i need books which have rating count greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008062	i would like book having QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008063	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008064	i am looking for books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008065	what is the rating count of book ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008066	find books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008067	find book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008068	which are book with lower review count than NUMBER_0 and more rating than zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008069	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008070	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008071	search for books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000008072	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008073	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008074	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008075	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008076	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008077	get book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008078	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008079	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008080	i would like to find books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008081	please list books that have 3 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008082	i need to search for books which have rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000008083	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008084	what are QUOTED_STRING_0 having rating equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008085	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008086	get books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008087	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008088	i need to search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008089	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008090	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008091	enumerate book having rating count more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008092	get books with rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008093	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008094	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008095	search for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008096	get books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008097	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008098	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008099	i would like books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008100	show me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008101	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008102	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008103	get book which have zero awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008104	i want to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008105	i am looking to search books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008106	find books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008107	i need the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008108	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008109	which are QUOTED_STRING_0 of QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_1 ) join ( ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_0 ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000008110	please list books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008111	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008112	i would like to search for book which have 3 or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000008113	please enumerate book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008114	find the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008115	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008116	please enumerate book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000008117	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008118	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000008119	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008120	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008121	i am looking for books which have rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008122	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008123	find book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008124	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008125	get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000008126	please retrieve books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008127	what is the number of awards of book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008128	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000008129	i want to retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008130	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008131	i want to know the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008132	find book with rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000008133	i would like to search books having at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008134	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008135	what are the QUOTED_STRING_0 that have number of pages 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 0 => notify
S5000008136	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008137	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008138	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008139	enumerate books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000008140	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008141	i want books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000008142	i would like book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008143	i need books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008144	i need to search book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008145	i am looking to search for books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008146	i am looking to retrieve book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008147	enumerate books which have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008148	i am looking for book which have no number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008149	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008150	get book with lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008151	find books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008152	i am looking to find books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008153	i need to retrieve book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000008154	i need books which have 4 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008155	find books which have 0 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008156	search book having rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008157	list book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008158	i would like to search books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008159	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008160	i would like to search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008161	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008162	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000008163	what are the QUOTED_STRING_0 that have rating count equal to one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008164	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008165	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008166	show me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008167	what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008168	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008169	i need the image and link of the books with the highest review count	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008170	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008171	tell me what 's the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008172	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008173	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008174	i would like book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008175	get book which have higher number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008176	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008177	get book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008178	please search books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008179	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008180	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008181	how many awards in the books which has the highest rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008182	i want book that have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008183	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008184	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008185	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008186	search books having less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008187	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008188	what are books which have over 10 number of pages and have book format paperback ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:numberOfPages:Number >= 10 => notify
S5000008189	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008190	search book with rating count less than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008191	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008192	search for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008193	search for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008194	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008195	what are the books which have 4 awards and having number of pages 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 4 and param:numberOfPages:Number == 2 => notify
S5000008196	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008197	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008198	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008199	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008200	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008201	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008202	i am looking for book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008203	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008204	i would like the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008205	get book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000008206	which books get rating count 9 and rating zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000008207	what is the review count of book ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008208	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008209	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008210	get book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008211	list books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008212	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008213	i would like books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008214	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008215	get books that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008216	i want to search for book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000008217	please list book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008218	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008219	what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008220	please search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008221	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008222	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008223	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008224	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008225	get books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008226	which are the book with over 0 rating count and rating equal to 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:aggregateRating.ratingValue:Number == 2 => notify
S5000008227	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008228	tell me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008229	which are the books which have over 11 number of pages , with 11 or above rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 and param:numberOfPages:Number >= 11 => notify
S5000008230	tell me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008231	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008232	which are book with number of pages not less than 0 and rating count equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 and param:numberOfPages:Number >= 0 => notify
S5000008233	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008234	what book get zero or higher number of pages and review count equal to 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number >= 0 => notify
S5000008235	i want book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008236	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008237	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008238	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008239	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008240	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008241	search for books with review count at most 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000008242	i need book that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008243	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008244	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008245	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008246	which are the book which have number of pages not more than 1 and with rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number <= 1 => notify
S5000008247	search book which have QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008248	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008249	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008250	which are the book having rating count one which have larger number of pages than 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:numberOfPages:Number >= 5 => notify
S5000008251	find the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008252	i am looking for book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008253	i need books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008254	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008255	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008256	i would like the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008257	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008258	which are books having rating higher than 9 that have number of pages equal to 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:numberOfPages:Number == 11 => notify
S5000008259	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008260	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008261	which are the book that have 1 or above number of pages and with rating 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number >= 1 => notify
S5000008262	i would like to know the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008263	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008264	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008265	what QUOTED_STRING_0 get number of pages greater than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 3 => notify
S5000008266	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008267	i am looking for books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008268	find books that have smaller number of pages than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008269	please search books with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008270	please find book with rating count less than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008271	retrieve book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008272	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008273	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008274	i need books having 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008275	i would like book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008276	please enumerate book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008277	i want books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008278	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008279	i want book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008280	retrieve the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008281	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008282	i am looking for books which have over 5 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008283	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008284	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008285	list book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008286	which are the books having rating count at least 11 and rating 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 and param:aggregateRating.ratingValue:Number == 6 => notify
S5000008287	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008288	find book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000008289	which books have zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008290	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008291	what is the url of person ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008292	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008293	which are book with number of pages not less than 0 and rating count equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 and param:numberOfPages:Number >= 0 => notify
S5000008294	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008295	i am looking for book that have zero or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008296	i want to get book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008297	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008298	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008299	i am looking for books which have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008300	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008301	i am looking for the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008302	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008303	show me what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008304	i need books without or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008305	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000008306	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008307	please list book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008308	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008309	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008310	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008311	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008312	i would like book without rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008313	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008314	i would like books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000008315	i want books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008316	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008317	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008318	how many awards does the book which has the highest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008319	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008320	find book which have less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008321	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008322	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008323	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000008324	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008325	i would like to retrieve book that have number of pages 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 6 => notify
S5000008326	which are the QUOTED_STRING_0 having 0 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008327	get books having number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008328	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008329	i want to search for books which have at most 12 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 => notify
S5000008330	i am looking for book with at least 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 5 => notify
S5000008331	show me the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008332	i would like to search for book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008333	search for the QUOTED_STRING_0 with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008334	i am looking for book with rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000008335	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008336	get book with rating 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000008337	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008338	tell me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008339	get book with lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008340	i need book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008341	what books have rating count 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000008342	i am looking to get book having over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008343	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008344	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000008345	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008346	i want book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008347	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008348	i would like to get book having rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008349	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008350	retrieve book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008351	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008352	i would like books with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008353	i want books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008354	get books with zero or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008355	i would like to get book having rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008356	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008357	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008358	i am looking for books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008359	find books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008360	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008361	enumerate books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008362	i would like books that have rating count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000008363	get books having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000008364	please list books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000008365	i would like to get books that have 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008366	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008367	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008368	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008369	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008370	how many awards does the book which has the highest rating count have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008371	i want book which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000008372	get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008373	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008374	i want book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008375	i need the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008376	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008377	please get books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008378	what is the review count and book edition of the book which has the minimum number of pages	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008379	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000008380	what is the author and url of the books with the minimum rating count ?	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008381	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008382	i am looking for book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008383	i am looking to find books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008384	get books that have 0 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008385	show me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008386	i need to search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008387	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008388	get books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000008389	tell me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008390	i need book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008391	get book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008392	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008393	i would like books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008394	retrieve books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008395	get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000008396	get book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008397	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008398	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008399	i would like book which have rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008400	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008401	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008402	find books which have 0 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008403	i need book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008404	get books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008405	which are the books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008406	i am looking to search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008407	what is the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008408	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008409	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008410	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000008411	get book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008412	what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008413	get books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008414	tell me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008415	i am looking for books with lower rating count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008416	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008417	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008418	what is the number of awards in book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008419	get book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008420	i would like to search for book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008421	i want to know the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008422	how many awards are there in the books which has the minimum review count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008423	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000008424	retrieve book that have 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000008425	i want to find book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008426	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000008427	search book that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008428	i would like books having fewer than 1 award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008429	what is the number of awards in the book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008430	please search for books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008431	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008432	how many awards do the books with the minimum number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008433	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008434	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008435	get book with NUMBER_0 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000008436	what book get NUMBER_0 or lower rating and review count lower than 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008437	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008438	i want to search for books which have at most 12 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 => notify
S5000008439	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008440	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008441	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008442	i want the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008443	i want to find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008444	retrieve book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008445	i need books that do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008446	i need to find book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008447	find the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008448	please enumerate book which do not have number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008449	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008450	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008451	tell me the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008452	which are the books which have lower rating count than NUMBER_0 , with book format hardcover ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000008453	tell me the rating count and url of the book which has the minimum number of pages	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008454	i am looking for books which have rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008455	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008456	i would like book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008457	what are book that have rating 10 and with lower review count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:aggregateRating.reviewCount:Number <= 8 => notify
S5000008458	i am looking for the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008459	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008460	get books that have rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000008461	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008462	which are the book which have higher number of pages than 0 and have review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 and param:numberOfPages:Number >= 0 => notify
S5000008463	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008464	i would like book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008465	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008466	i want to know the author and book format of the book with the lowest review count	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008467	i am looking to search for books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008468	get books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008469	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008470	i am looking for book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000008471	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008472	find books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008473	search for book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008474	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008475	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008476	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008477	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008478	find book with review count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008479	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008480	i would like to search books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008481	search for books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000008482	search for books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000008483	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008484	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008485	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008486	i want to find books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008487	i need to know the book format and rating count of the books which has the highest review count .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008488	i am looking to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008489	retrieve book that have 0 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008490	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008491	what is the book edition and rating of the books with the tiniest number of awards	now => [ param:aggregateRating.ratingValue:Number , param:bookEdition:String ] of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) => notify
S5000008492	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008493	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008494	i would like book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008495	enumerate book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008496	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008497	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008498	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008499	get books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008500	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008501	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008502	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008503	i am looking for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008504	i would like to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008505	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008506	i am looking to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008507	search for the QUOTED_STRING_0 with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008508	get book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008509	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008510	retrieve book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008511	show me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008512	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008513	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008514	search book which have over 1 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008515	search for book having 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008516	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008517	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000008518	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008519	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008520	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008521	get books that have rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008522	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008523	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000008524	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008525	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008526	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008527	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008528	get book which have zero awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008529	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008530	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000008531	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008532	get books with 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008533	search for book which have rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008534	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008535	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008536	i am looking to search book having rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000008537	what is the QUOTED_STRING_0 with the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008538	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008539	i am looking to find books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008540	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000008541	get books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008542	i want book which have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000008543	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008544	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008545	i want to get book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008546	search book having 9 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000008547	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008548	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008549	i would like to search books that have 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008550	get books with rating 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008551	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008552	please enumerate books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008553	search the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008554	how many awards are there in the books with the most awards	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) ) => notify
S5000008555	search for books having over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008556	enumerate book which have less rating count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000008557	please list books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008558	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008559	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008560	find the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008561	search for books with less rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008562	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008563	what is the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008564	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008565	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008566	i need to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008567	tell me what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008568	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008569	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008570	get books which have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008571	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008572	which book get either QUOTED_STRING_0 or QUOTED_STRING_1 in its awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 or param:award:Array(String) contains~ QUOTED_STRING_1 => notify
S5000008573	list book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008574	i need books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000008575	tell me the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008576	i am looking for book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008577	i would like to get books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008578	i need the image and link of the books with the highest review count	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008579	please list book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000008580	retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008581	i need the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008582	which are the books with more rating than one and review count zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000008583	i want to search books having 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000008584	i need books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008585	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008586	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008587	i am looking for books that have rating count 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000008588	tell me what 's the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008589	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008590	find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008591	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008592	search book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008593	how many awards are there in the books with the highest review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008594	which book get no more than NUMBER_0 awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= NUMBER_0 => notify
S5000008595	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008596	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008597	which book have less number of pages than one and is isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 1 => notify
S5000008598	search books having 9 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000008599	i am looking for book that have zero or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008600	what are QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000008601	i would like the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008602	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008603	give me the url and book edition of the book with the minimum number of pages	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008604	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008605	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008606	get book having QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008607	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000008608	search book that have 7 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008609	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008610	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008611	i would like books that have rating count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000008612	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008613	i need book that have at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008614	please enumerate book with no more than 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000008615	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008616	i want book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008617	find the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008618	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008619	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000008620	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008621	retrieve books which have smaller rating count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008622	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008623	list book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008624	i want the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008625	i would like to find book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008626	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008627	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008628	i want to find book having zero or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008629	i want to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008630	i would like to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008631	get book with lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008632	get books having larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008633	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008634	i would like to search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008635	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008636	what books get greater review count than 2 and are isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008637	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008638	i would like book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000008639	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008640	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008641	tell me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008642	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008643	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008644	get books which have 6 or less review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008645	retrieve books without or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008646	i am looking to retrieve books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008647	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008648	i want book which have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000008649	i would like to search books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000008650	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008651	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008652	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008653	please list book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008654	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008655	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008656	get book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008657	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008658	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008659	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008660	i need the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008661	what are QUOTED_STRING_0 that have review count larger than 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008662	get books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008663	please list book which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000008664	i would like to retrieve book having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008665	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008666	please search for book with no more than 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000008667	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008668	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008669	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008670	what is the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008671	please retrieve books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008672	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008673	search book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008674	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008675	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008676	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008677	find books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000008678	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008679	i want to get books having review count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000008680	i would like to retrieve books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008681	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008682	please enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008683	i need to search for books that have 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000008684	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008685	tell me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008686	i would like books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000008687	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008688	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008689	i would like books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000008690	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008691	which books have 8 or above review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008692	search books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000008693	please enumerate book having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008694	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008695	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008696	get books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008697	get books having review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008698	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008699	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008700	get books which have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000008701	tell me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008702	i would like to know the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008703	please find book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008704	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008705	i would like book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008706	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008707	i want to search book that have 9 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008708	get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000008709	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008710	i need to search book which have less rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000008711	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000008712	find books with 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008713	i am looking for book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008714	please list books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008715	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008716	i would like books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008717	i would like to search for book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008718	search for books that have lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008719	tell me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008720	show me what is the number of awards of book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008721	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008722	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008723	retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000008724	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008725	how many awards do the books with the fewest awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) ) => notify
S5000008726	search book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008727	give me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008728	i want books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008729	i would like to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008730	get books that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008731	get the QUOTED_STRING_0 which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008732	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008733	please find book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008734	i want to search for books that have rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000008735	i need the link and rating of the book with the maximum review count .	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000008736	get book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008737	show me what 's the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008738	i would like book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008739	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000008740	i am looking for the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008741	i want to search for books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008742	get book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008743	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008744	i would like to find book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000008745	i need book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008746	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008747	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008748	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008749	find the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008750	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008751	list book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000008752	get books which have in language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008753	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000008754	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008755	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008756	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008757	show me what is the number of awards of books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000008758	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008759	please enumerate books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008760	find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008761	please search book which have less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008762	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008763	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008764	search books that have rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000008765	what is the rating count of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008766	i am looking for book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008767	which book get either QUOTED_STRING_0 or QUOTED_STRING_1 in its awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 or param:award:Array(String) contains~ QUOTED_STRING_1 => notify
S5000008768	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008769	enumerate books with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008770	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008771	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008772	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008773	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008774	show me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008775	tell me what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008776	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008777	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008778	enumerate book with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008779	please enumerate books with rating higher than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008780	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000008781	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008782	i want book that have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008783	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008784	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008785	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008786	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008787	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008788	find the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008789	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008790	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008791	what are the QUOTED_STRING_0 having lower rating count than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008792	get book having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008793	please list books with rating count not more than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008794	i need the QUOTED_STRING_0 with the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008795	get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008796	which are the QUOTED_STRING_0 having 3 or more review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008797	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008798	please list books which have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008799	tell me both the url and author of QUOTED_STRING_0 .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000008800	i want to find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008801	i would like to get books that have 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000008802	i am looking to search books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008803	i am looking to retrieve book with rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008804	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008805	i would like to find books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008806	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008807	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008808	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008809	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008810	i need to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008811	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008812	get books having larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008813	i need to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008814	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008815	i want books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008816	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008817	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008818	tell me what 's the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008819	i would like to know both the review count and isbn of QUOTED_STRING_0 .	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000008820	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008821	tell me the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008822	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008823	search for book which have rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008824	get books with rating count larger than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000008825	get book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008826	search book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008827	i want book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008828	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008829	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008830	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008831	i need book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008832	which are the book that have greater rating count than NUMBER_0 and have number of pages 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:numberOfPages:Number == 3 => notify
S5000008833	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000008834	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008835	i am looking to search for books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008836	what are the book having rating count at most NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008837	find the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008838	what books get isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 and rating count 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 4 and param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000008839	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008840	get books with isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008841	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000008842	get books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008843	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008844	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008845	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008846	list book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008847	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008848	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008849	i am looking to retrieve book having rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008850	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008851	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008852	get books which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008853	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008854	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008855	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008856	tell me the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008857	i would like books that have rating at most 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008858	find book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008859	get the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008860	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008861	i am looking for books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000008862	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008863	get books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008864	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008865	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008866	please list book having 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000008867	what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008868	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008869	get books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008870	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008871	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008872	i need books which have number of pages not more than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008873	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008874	i am looking for book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000008875	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008876	i am looking for books which have 11 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000008877	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008878	what are book that have the book edition including QUOTED_STRING_0 but not QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter not param:bookEdition:String =~ QUOTED_STRING_1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008879	get books having rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008880	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008881	get books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008882	retrieve book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008883	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008884	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008885	which book get over one rating count and over 11 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:numberOfPages:Number >= 11 => notify
S5000008886	i need books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000008887	search for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008888	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008889	i want to search for books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008890	enumerate books which have 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000008891	find books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008892	get books with number of pages lower than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000008893	i need the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008894	which are the book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008895	i want to search for books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008896	i want book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008897	please list book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008898	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008899	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008900	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008901	enumerate books which have review count at least 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000008902	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008903	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008904	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008905	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008906	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008907	i need books having higher number of pages than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008908	which are books having less rating than NUMBER_0 and number of pages zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:numberOfPages:Number == 0 => notify
S5000008909	i want to retrieve books that have rating higher than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008910	i would like to search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008911	i need books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000008912	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008913	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008914	get book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008915	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008916	retrieve book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008917	search for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008918	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008919	which are book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000008920	what is the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008921	what book get over one rating count and are isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008922	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008923	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008924	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008925	how many awards do the book which has the maximum number of pages have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008926	i want to search book which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000008927	search for books that have review count at least zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008928	please find books that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000008929	please search book that have 10 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000008930	get books having larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008931	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008932	which are the book that have rating count more than 4 and have rating 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 and param:aggregateRating.ratingValue:Number == 7 => notify
S5000008933	what are the books with isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008934	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008935	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008936	get books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008937	find the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008938	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008939	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008940	i want book with rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008941	which are the books with isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008942	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008943	what book get 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008944	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008945	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008946	get books that have rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008947	show me what is the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008948	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008949	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008950	which book have rating smaller than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008951	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008952	get books which have book format paperback .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000008953	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008954	how many awards do the books with the highest number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000008955	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008956	i am looking for book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008957	get book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008958	what are the books that have 7 or lower number of pages and have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 and param:numberOfPages:Number <= 7 => notify
S5000008959	search book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008960	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008961	i want to find book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008962	retrieve book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008963	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008964	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008965	get book having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008966	get book with number of pages lower than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008967	get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008968	what are the QUOTED_STRING_0 which have over 0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000008969	search books that have rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000008970	retrieve the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008971	i would like book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008972	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008973	i am looking to search books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008974	i would like to retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008975	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008976	which book get over one rating count and over 11 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:numberOfPages:Number >= 11 => notify
S5000008977	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000008978	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008979	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008980	which are book which have in language including QUOTED_STRING_0 and have 1 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008981	i would like to find book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000008982	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008983	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008984	what is the in language of book ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008985	search for books with less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008986	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008987	i want to retrieve book with rating NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008988	i need to retrieve book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008989	search for books with 12 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008990	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000008991	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008992	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000008993	search book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000008994	which book get over one rating count and over 11 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:numberOfPages:Number >= 11 => notify
S5000008995	retrieve books which have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000008996	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008997	i need books which have rating count greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008998	i need books which have number of pages not more than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008999	get books having over 12 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009000	i want to get book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009001	please enumerate books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009002	i am looking for book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009003	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009004	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009005	which book get either QUOTED_STRING_0 or QUOTED_STRING_1 in its awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 or param:award:Array(String) contains~ QUOTED_STRING_1 => notify
S5000009006	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009007	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009008	retrieve book having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009009	search books that have higher rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009010	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009011	i am looking to get books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009012	which books have review count equal to 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009013	show me what 's the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009014	what is the QUOTED_STRING_0 which has the lowest rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009015	please enumerate book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009016	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009017	what are book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009018	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009019	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009020	please enumerate book having higher rating than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009021	i would like book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009022	list books which have higher review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009023	list book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009024	please search for book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009025	i need books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000009026	tell me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009027	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009028	find the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009029	i need to search for books that have zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009030	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009031	get book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000009032	i need books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009033	get books which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009034	i want book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009035	i want to find book which have less number of pages than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009036	i am looking for book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009037	get book with rating count less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009038	i am looking to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009039	i need books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009040	tell me the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009041	what is the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009042	list book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009043	i need to search books which have number of pages not more than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009044	how many awards do the books which has the highest rating count have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009045	i need to find book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009046	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009047	search for book with lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000009048	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009049	get book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009050	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009051	search for book having rating count lower than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009052	show me what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009053	what are the book which have over zero rating and have rating count 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009054	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009055	i want books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009056	show me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009057	get books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009058	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000009059	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000009060	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009061	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009062	which are the QUOTED_STRING_0 with isbn being QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000009063	search books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009064	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009065	please find book having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009066	tell me what 's the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009067	i need the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009068	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009069	i need book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009070	i want book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009071	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009072	i am looking to find books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009073	i am looking to retrieve books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009074	i need books having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009075	show me what is the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009076	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009077	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009078	get books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000009079	i want book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009080	please find books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009081	get books having rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009082	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009083	get books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009084	what books have less rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009085	i would like book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009086	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009087	what are the books with number of pages lower than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000009088	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009089	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009090	find book with review count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009091	i need books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000009092	what books get rating equal to zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009093	what book get 8 or above rating and are isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009094	list book with over NUMBER_0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009095	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009096	what books get one or below rating and lower rating count than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009097	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009098	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009099	i want to retrieve books having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009100	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000009101	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009102	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009103	i am looking for books that have 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009104	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009105	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009106	search for book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009107	get books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009108	get book with rating 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000009109	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009110	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009111	i am looking to retrieve book which have QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009112	tell me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009113	how many awards do the books with the highest review count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009114	how many awards are there in the book which has the minimum number of pages	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009115	search books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009116	i want to search for books which have higher review count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009117	i need the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009118	i need books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009119	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009120	i need the number of pages and rating count of the book which has the lowest number of pages	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009121	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009122	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009123	what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009124	find books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009125	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009126	i am looking for books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009127	please search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009128	i would like to search for book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009129	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009130	enumerate books without more than 11 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000009131	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009132	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009133	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009134	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009135	search for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009136	search for book that have rating greater than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009137	search for books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009138	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009139	get books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009140	please find book with rating count less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009141	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009142	get book having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000009143	what are the book that have fewer than one award and have less rating than 0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 and param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009144	i am looking to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009145	i would like the QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009146	i want book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009147	get books with number of pages lower than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000009148	i am looking for the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009149	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009150	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009151	please enumerate books which have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009152	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009153	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009154	search book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009155	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009156	i want to search for books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009157	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009158	i need to search for books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000009159	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009160	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009161	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009162	i would like to get book that have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009163	i am looking to search book having 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009164	i need to search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009165	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009166	what are the QUOTED_STRING_0 which have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009167	get book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009168	i would like books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009169	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009170	i need books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009171	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009172	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009173	i am looking to get book having over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009174	enumerate books which have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009175	get book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009176	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009177	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009178	what are the books that have review count 0 and have rating count more than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000009179	i want to get books having review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000009180	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009181	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009182	retrieve book that have 8 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009183	i need the QUOTED_STRING_0 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009184	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009185	get book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009186	please list books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009187	please list book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009188	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009189	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009190	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009191	find books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009192	show me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009193	please search for books which have less review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009194	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009195	i want book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009196	which QUOTED_STRING_0 get 2 or more rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009197	get books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009198	get books which have rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009199	get books which have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009200	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009201	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009202	retrieve book having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009203	search for books which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009204	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009205	i am looking for book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000009206	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009207	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000009208	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009209	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009210	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009211	search book having one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009212	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009213	i would like to search books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009214	retrieve book having rating 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009215	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009216	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009217	which are the books having rating count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000009218	i need to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009219	which are the QUOTED_STRING_0 with over zero review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009220	get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009221	i am looking for the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009222	what are the books that have review count 0 and have rating count more than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000009223	please search for book having rating count more than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009224	please retrieve books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009225	get books with rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000009226	search books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009227	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009228	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009229	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009230	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009231	please find book having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009232	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009233	i am looking for book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000009234	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009235	retrieve books which have smaller rating count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009236	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009237	i want to find book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009238	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009239	which QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009240	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009241	please list books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009242	get books with smaller rating count than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009243	i need book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009244	tell me what 's the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009245	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009246	please search book that have 10 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000009247	get books without or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009248	i am looking for the number of awards in book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009249	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009250	i want to search for book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000009251	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009252	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009253	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009254	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009255	retrieve book having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009256	get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009257	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009258	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009259	tell me the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009260	get books with rating not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009261	what QUOTED_STRING_0 have number of pages 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 9 => notify
S5000009262	please enumerate books with rating count smaller than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000009263	i would like book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009264	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009265	please enumerate books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009266	which book get greater rating than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009267	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009268	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009269	what are the books which have QUOTED_STRING_0 as book edition and have over 2 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009270	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000009271	i want to retrieve books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009272	i would like books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000009273	please find book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009274	i need book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009275	what is the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009276	i need the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009277	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009278	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009279	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009280	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009281	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000009282	tell me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009283	get book with NUMBER_0 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000009284	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009285	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009286	i need to retrieve books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009287	i am looking to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009288	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009289	which are the QUOTED_STRING_0 that have rating equal to zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009290	how many QUOTED_STRING_0 are there	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000009291	i need books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009292	retrieve book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000009293	which are the books which have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000009294	i need book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009295	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009296	search book having rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009297	i need to retrieve book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009298	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009299	i want to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009300	show me what 's the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009301	i need the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009302	i would like book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009303	i want books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000009304	retrieve books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009305	i would like to search for book which have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009306	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009307	tell me what 's the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009308	what is the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009309	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009310	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009311	get books which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009312	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009313	please enumerate book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009314	i would like to search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009315	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009316	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009317	what is the book edition of book ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009318	i would like to know the link and review count of QUOTED_STRING_0 .	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000009319	please enumerate books which have book format paperback .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009320	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009321	i need books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000009322	list book that have larger rating than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009323	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009324	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000009325	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000009326	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009327	i am looking to search books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009328	what are the books that have zero rating and have number of pages greater than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number >= 3 => notify
S5000009329	enumerate books that have rating not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009330	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009331	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009332	what are book which have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000009333	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009334	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009335	which book have less rating count than zero and rating equal to 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:aggregateRating.ratingValue:Number == 10 => notify
S5000009336	i need to find books that have 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 11 => notify
S5000009337	tell me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009338	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000009339	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009340	search book having 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009341	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009342	i would like book having QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009343	i would like books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000009344	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009345	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009346	get book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000009347	i am looking for book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009348	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009349	please enumerate books with rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009350	how many awards in the books with the minimum review count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009351	i am looking for books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009352	get books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009353	which are book which have zero review count and have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000009354	i want books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000009355	get books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009356	find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009357	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009358	which are books which have the book edition containing either QUOTED_STRING_0 or QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String in_array~ [ QUOTED_STRING_0 , QUOTED_STRING_1 ] => notify
S5000009359	i would like books with 1 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009360	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009361	get books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009362	i would like book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009363	please enumerate book with rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000009364	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009365	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009366	i want to find books which have review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000009367	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009368	i want to find books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009369	which are the book having one or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009370	i want the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009371	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009372	i would like to retrieve books which have number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009373	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009374	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009375	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009376	i want books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009377	please find books which have review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009378	list books with number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009379	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009380	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009381	please list books which have number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009382	get the QUOTED_STRING_0 which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009383	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009384	i would like to find book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000009385	get books which have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009386	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009387	get books having review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009388	tell me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009389	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009390	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009391	what is the in language of book ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009392	find the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009393	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009394	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009395	please list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009396	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009397	i am looking to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009398	i need to retrieve books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009399	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009400	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009401	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009402	tell me what 's the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009403	i need to get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009404	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009405	get books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009406	please enumerate book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009407	what are book with over zero rating and over 12 rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009408	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009409	get books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009410	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009411	get books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009412	what book have review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000009413	show me what 's the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009414	how many awards are there in the book with the lowest rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009415	i am looking for books which have rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009416	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009417	get books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009418	i am looking for books that have higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009419	what is the QUOTED_STRING_0 which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009420	i want the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009421	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000009422	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009423	i want to get book having QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009424	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009425	retrieve book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009426	i am looking to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009427	get books having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009428	i need books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009429	i would like book that have review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000009430	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009431	which are books which do not have more than 0 awards and have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009432	enumerate book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009433	i need books that do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009434	please get books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009435	i need books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009436	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009437	i need book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009438	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009439	i would like to find books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009440	what book get 11 or less rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000009441	please list books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009442	what is the review count of book	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009443	show me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009444	i want to search for book having more than 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 3 => notify
S5000009445	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009446	i would like to retrieve books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009447	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009448	list books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009449	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009450	please list book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009451	i need books which have 4 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009452	please list books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000009453	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009454	which are book which have over NUMBER_0 rating count and have number of pages 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:numberOfPages:Number == 5 => notify
S5000009455	search book which have over 1 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009456	search books with rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000009457	i want to search for book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009458	i would like books that have 7 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000009459	i need to search book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009460	i need the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009461	what are book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009462	find the QUOTED_STRING_0 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009463	i want book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009464	i want to search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009465	find books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000009466	please retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009467	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009468	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009469	search book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009470	i would like to search books having at most 2 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000009471	list books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000009472	i want to find book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009473	i am looking to search books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000009474	enumerate book which have less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009475	i am looking for book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009476	tell me what is the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009477	which are the books that have both QUOTED_STRING_0 and QUOTED_STRING_1 in the in language ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009478	i want book which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000009479	what is the rating count of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009480	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009481	i am looking for book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009482	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009483	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009484	get the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009485	i need to get books that have greater rating than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009486	enumerate book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009487	i want to retrieve books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009488	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009489	show me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009490	i need to get books having 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009491	i need to search book which have less rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009492	i am looking for books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009493	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009494	list book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009495	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009496	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009497	list book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009498	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009499	search book that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009500	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009501	retrieve books which have review count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 9 => notify
S5000009502	please enumerate books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009503	search for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009504	i would like books that have 7 or more rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000009505	tell me what 's the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009506	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009507	i want to search books with over 0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009508	i want book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009509	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009510	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009511	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009512	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009513	find the QUOTED_STRING_0 which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009514	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009515	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009516	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009517	get books with greater review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009518	search book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009519	find books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000009520	i want book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009521	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009522	i would like the QUOTED_STRING_0 which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009523	retrieve book having isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009524	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009525	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009526	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009527	what is the rating and rating count of the book with the highest rating ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009528	list books with over one rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009529	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009530	tell me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009531	i want to find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009532	get book having rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009533	search for books that have 12 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009534	please list books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009535	what are book isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009536	please search books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009537	i would like to know the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009538	find books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009539	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009540	i want to search for books which have at most 12 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 12 => notify
S5000009541	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009542	get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009543	which are books which do n't have more than 0 awards and have NUMBER_0 or lower rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009544	what are books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009545	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009546	search book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009547	get book having rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009548	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009549	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009550	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009551	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009552	what are the books which have higher number of pages than zero and have book format paperback ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:numberOfPages:Number >= 0 => notify
S5000009553	i am looking for the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009554	what are the books that have over 1 review count and have number of pages lower than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number <= 10 => notify
S5000009555	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009556	which are the books with rating count 9 and rating 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:aggregateRating.ratingValue:Number == 1 => notify
S5000009557	search book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009558	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009559	i would like books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009560	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009561	please search books without more than 11 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000009562	i need book with over zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009563	search for book which have rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009564	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009565	find books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009566	i need books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009567	i need books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009568	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009569	tell me what 's the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009570	please count the QUOTED_STRING_0 .	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000009571	search book with 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009572	tell me what 's the review count of book .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009573	find books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000009574	show me what is the number of awards of books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009575	please list books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009576	i am looking for books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009577	retrieve the QUOTED_STRING_0 with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009578	please search books without more than 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000009579	i would like to search book with number of pages lower than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009580	find books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009581	i would like to search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009582	i need books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009583	please enumerate book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009584	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009585	please retrieve books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009586	which are the books with isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009587	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009588	please get books with rating count not more than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009589	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009590	search for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009591	find the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009592	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009593	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009594	find book with rating count less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009595	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009596	search books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009597	show me the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009598	i would like books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000009599	please get books that have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009600	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009601	which are the book having rating count one which have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:numberOfPages:Number >= 5 => notify
S5000009602	i want to find books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009603	show me what 's the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009604	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009605	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009606	show me what is the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009607	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009608	i am looking for book that have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009609	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009610	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009611	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009612	enumerate book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009613	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009614	i want the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009615	search for books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009616	tell me what 's the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009617	i want to search books having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000009618	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009619	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009620	i would like to find books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000009621	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009622	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009623	please list books with rating count not more than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009624	find books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009625	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009626	tell me what is the image of person	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009627	i want book which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000009628	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000009629	i would like book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009630	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009631	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009632	find book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009633	retrieve books having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000009634	enumerate book which have less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009635	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009636	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009637	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009638	please search for book with no more than 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000009639	how many awards in the books with the highest review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009640	list book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000009641	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009642	i want to get book having QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009643	please find book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009644	what are the books having 10 or above rating and rating count 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009645	i would like books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009646	i am looking for books which have rating count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000009647	retrieve books which have rating count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000009648	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009649	what are book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009650	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009651	enumerate books with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009652	i would like books with isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009653	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009654	tell me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009655	i want to search book that have 9 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009656	search books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009657	get book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009658	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009659	which are book which have number of pages 8 and having review count 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 and param:numberOfPages:Number == 8 => notify
S5000009660	which are the book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009661	find book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009662	i am looking to search book that have number of pages greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000009663	enumerate book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009664	get books with rating count 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000009665	i need book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009666	what is the url of book ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009667	i am looking for books which have over 5 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009668	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009669	list book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009670	search for books with less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009671	i am looking for the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009672	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009673	get books which have rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009674	i want to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009675	get books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009676	i want books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009677	get book that have larger rating count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009678	get book having rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009679	please enumerate book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009680	tell me what 's the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009681	please list books which have number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009682	get books which have rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009683	i would like books having review count more than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009684	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000009685	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009686	enumerate book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009687	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009688	i want books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009689	search for book with book format ebook	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000009690	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009691	retrieve book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009692	please search for book which have review count greater than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009693	retrieve the QUOTED_STRING_0 which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009694	find book with rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000009695	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009696	get books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009697	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009698	get book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009699	how many awards are there in the books with the lowest rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009700	i would like to find book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009701	search book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009702	enumerate book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009703	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009704	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009705	get books having over 12 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009706	please enumerate book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009707	please list books having rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009708	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000009709	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009710	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009711	search books that have less rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009712	search for books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009713	enumerate book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009714	i would like to search books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009715	search book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009716	i need to get books that have greater rating than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009717	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009718	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009719	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009720	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000009721	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009722	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009723	retrieve books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009724	what are the books that have over 1 review count and have number of pages lower than 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number <= 10 => notify
S5000009725	i am looking for book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009726	which are the people for QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000009727	i want to search for books which have higher review count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009728	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009729	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009730	i want to retrieve book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009731	get books which have book format paperback .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009732	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009733	i need to know the book format and rating count of the books which has the highest review count .	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009734	enumerate books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009735	enumerate books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009736	enumerate book that have 9 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009737	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009738	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009739	i need books which have larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009740	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000009741	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009742	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009743	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009744	search for books with review count at most 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000009745	please list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000009746	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009747	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009748	get books that have lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009749	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009750	find the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009751	i would like book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009752	i am looking for book that have greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009753	i am looking for the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009754	i need to retrieve book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009755	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009756	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009757	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009758	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009759	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009760	search for books with rating count lower than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000009761	find book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000009762	i want books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009763	which books get over 1 review count and 12 or less rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009764	i am looking for book with at least 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 5 => notify
S5000009765	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009766	retrieve book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009767	get book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009768	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000009769	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009770	find the QUOTED_STRING_0 with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009771	get book which have higher number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009772	search the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009773	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009774	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009775	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009776	i would like to find book that have 10 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000009777	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009778	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009779	which book get either QUOTED_STRING_0 or QUOTED_STRING_1 in its awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 or param:award:Array(String) contains~ QUOTED_STRING_1 => notify
S5000009780	find book which have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000009781	please list books having higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009782	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009783	which are the QUOTED_STRING_0 having rating equal to 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009784	what are book with 1 or greater rating which have book edition equal to QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009785	i need books which have rating not more than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009786	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000009787	i would like book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009788	get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000009789	i want to search books having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000009790	i want to find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009791	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009792	what are QUOTED_STRING_0 having rating equal to NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009793	please find books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000009794	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009795	i want to search book having rating zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009796	show me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009797	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009798	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009799	how many awards do the books with the highest review count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009800	i want to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009801	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009802	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009803	retrieve the QUOTED_STRING_0 which has the maximum rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009804	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009805	search book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009806	please enumerate book without rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009807	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009808	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009809	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009810	search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009811	what are QUOTED_STRING_0 with QUOTED_STRING_1 in their awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_1 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009812	i would like to search for books that have zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009813	retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009814	what is the isbn and book format of the books with the largest number of awards ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) ) [ 1 ] ) => notify
S5000009815	how many awards are there in the book which has the minimum number of pages	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009816	search book which have over zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009817	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009818	i want book having rating 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009819	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000009820	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000009821	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009822	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009823	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009824	i want to search for book having greater rating count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009825	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009826	list books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009827	enumerate book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000009828	please enumerate book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009829	find books with 0 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009830	search books that have less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009831	find the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009832	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000009833	i want to search for books having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009834	find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009835	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009836	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009837	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000009838	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009839	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009840	what are QUOTED_STRING_0 's people .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000009841	enumerate books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009842	please get books which have rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009843	search the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009844	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009845	find books with 0 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009846	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009847	get book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009848	find books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009849	which are the books which have number of pages smaller than one and have over 11 review count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 11 and param:numberOfPages:Number <= 1 => notify
S5000009850	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009851	enumerate books with over 0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009852	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009853	search for books that have lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009854	please search for book without more than 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000009855	which book have rating count less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000009856	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009857	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009858	please search book that have 10 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 10 => notify
S5000009859	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009860	i want to search book that have less review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009861	please find books that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009862	i am looking for books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000009863	get book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009864	please list books with 0 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009865	enumerate books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009866	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009867	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009868	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009869	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009870	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009871	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009872	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009873	get books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009874	which are the book which have number of pages not more than 1 and with rating 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number <= 1 => notify
S5000009875	get books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009876	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009877	please find books which have review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009878	search books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009879	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009880	retrieve book having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009881	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009882	i would like book having 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009883	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000009884	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009885	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009886	i want to retrieve book with less number of pages than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009887	get the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009888	i am looking for the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009889	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009890	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009891	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009892	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009893	search the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009894	get books which have in language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009895	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009896	what QUOTED_STRING_0 get number of pages lower than 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 5 => notify
S5000009897	i would like to search for books that have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009898	tell me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009899	show me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009900	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009901	i am looking for books that have higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009902	please enumerate book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009903	which are QUOTED_STRING_0 which have rating higher than 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000009904	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009905	tell me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009906	i want books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000009907	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000009908	show me what is the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009909	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009910	i want to get book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009911	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000009912	what book have one or greater review count and larger rating count than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009913	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009914	find the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009915	find the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009916	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009917	please search for book without more than 5 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000009918	list book that have larger rating than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009919	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000009920	i am looking to search books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009921	i am looking for the number of awards in book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009922	get book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009923	i would like to search for book with number of pages lower than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009924	please list books which have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000009925	what books get rating count higher than NUMBER_0 and review count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number == 9 => notify
S5000009926	i need books with rating count not more than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000009927	retrieve book with rating count 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009928	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000009929	i would like the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009930	find book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009931	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009932	retrieve the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009933	i am looking for book having rating count more than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009934	get books that have rating count 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 => notify
S5000009935	please get books that have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009936	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009937	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009938	which are books which have 0 or above rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009939	which are book with number of pages not more than zero that have higher review count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 and param:numberOfPages:Number <= 0 => notify
S5000009940	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009941	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009942	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009943	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009944	i am looking for book that have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009945	how many awards do the books which has the highest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000009946	i need book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009947	which are books having less rating than NUMBER_0 and number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:numberOfPages:Number == 0 => notify
S5000009948	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009949	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009950	which are books which have over 10 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009951	which are the book having 4 awards and QUOTED_STRING_0 in their awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 4 and param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000009952	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009953	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009954	tell me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009955	what is the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009956	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009957	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009958	please enumerate books with more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009959	which book get over one rating count and over 11 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 and param:numberOfPages:Number >= 11 => notify
S5000009960	get books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009961	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009962	list books with over one rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009963	what book have number of pages 5 and review count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 5 => notify
S5000009964	show me the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009965	show me what 's the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000009966	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009967	i need to search book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000009968	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009969	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009970	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009971	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009972	i need book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009973	get book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000009974	get book which have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000009975	i am looking for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009976	get books having over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009977	get book having rating at most 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009978	i want books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000009979	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000009980	search for books which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009981	retrieve books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000009982	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000009983	please search book which have less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009984	which are the book that have 7 or higher rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009985	please list books which have 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009986	i would like the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009987	retrieve books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009988	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009989	show me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000009990	search for books having over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009991	search books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000009992	get book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009993	i would like book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009994	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009995	search for books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000009996	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009997	please count the QUOTED_STRING_0 .	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000009998	i would like to search books that have 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009999	i need book which have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010000	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000010001	what is the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010002	what are the people in QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000010003	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010004	list books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000010005	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010006	list book with over NUMBER_0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010007	get books that have 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010008	get books which have rating at most 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010009	get books which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010010	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010011	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010012	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010013	what book get rating equal to 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010014	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010015	tell me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010016	get books that have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010017	list books which have number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010018	search books that have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000010019	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010020	get book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010021	retrieve book that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010022	which are book which have lower rating than 5 and have review count smaller than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 5 and param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010023	search book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000010024	i would like books which have less review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010025	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010026	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010027	find the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010028	i want books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010029	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010030	search for books with review count at most 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000010031	i would like books with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010032	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000010033	tell me what 's the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010034	search book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010035	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010036	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010037	please enumerate book which have no number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010038	i want the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010039	i am looking for book which do not have number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010040	how many awards does the book which has the minimum rating have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010041	i need to search for books which have rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000010042	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010043	i need books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010044	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010045	get books having higher rating count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000010046	please list book that have over 1 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010047	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010048	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010049	i want books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000010050	i need books having number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010051	list book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010052	what are the books with smaller rating count than 5 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000010053	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010054	i want book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010055	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010056	which are book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010057	list book that have larger rating than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010058	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010059	i want the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010060	search for books that have rating count not less than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010061	please find book that have fewer than one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010062	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010063	i am looking for books which have over 5 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010064	search for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010065	get books having review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010066	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010067	which are the books with number of pages lower than 2 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010068	what is the image of person	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010069	tell me what 's the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010070	i am looking to get book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010071	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010072	what is the rating count of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010073	i am looking to find books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010074	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010075	i want books with lower rating count than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010076	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010077	tell me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010078	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010079	get book with less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010080	show me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010081	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010082	i am looking to get book having over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010083	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010084	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000010085	i want to retrieve books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010086	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010087	list books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000010088	please search books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010089	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010090	i need to search books having less rating than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010091	i want books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000010092	i would like book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010093	how many awards do the book which has the maximum number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010094	search books having 9 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000010095	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010096	tell me what is the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010097	find book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010098	please enumerate books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010099	show me what is the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010100	i would like to find book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010101	i want book having rating 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010102	i am looking for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010103	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010104	what QUOTED_STRING_0 gets the highest rating count ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010105	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010106	tell me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010107	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010108	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010109	get books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010110	get book that have larger rating count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010111	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010112	i would like books having larger rating than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010113	please enumerate books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010114	i need book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010115	i would like to search for book which have 3 or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010116	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010117	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010118	i want book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010119	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010120	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000010121	i want book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010122	i would like to search books having at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010123	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010124	i would like to search for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010125	i need book that have 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000010126	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010127	what is the number of awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010128	which are book having greater rating count than 10 that have number of pages zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 and param:numberOfPages:Number == 0 => notify
S5000010129	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010130	search books that have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010131	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000010132	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010133	how many awards are there in the book with the lowest rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010134	what are the book with no more than 5 awards and awards QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 and param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000010135	i want the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010136	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010137	please search books without more than 11 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000010138	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010139	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010140	i am looking for book having greater number of pages than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010141	what books have book edition containing QUOTED_STRING_0 and number of pages one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 1 => notify
S5000010142	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010143	i am looking to get book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010144	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010145	i need book which have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010146	please retrieve book that have isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010147	i want to retrieve book with less number of pages than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010148	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000010149	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010150	please list books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010151	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010152	i want to search for books that have 3 or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010153	enumerate book which have one or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010154	get books having review count at least 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010155	what are book with 1 or greater rating which have book edition equal to QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010156	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010157	i want to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010158	which are books having over 9 number of pages which have rating equal to zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number >= 9 => notify
S5000010159	i want to search for books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010160	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010161	i would like to find book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010162	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010163	find books that have smaller number of pages than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010164	what are the books isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010165	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010166	i want book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010167	i want to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010168	retrieve book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010169	retrieve books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010170	show me what is the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010171	i would like to search for book with number of pages lower than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010172	get books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010173	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010174	i want to search book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010175	enumerate book that have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010176	i want to search for books that have 3 or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010177	i would like the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010178	please count the QUOTED_STRING_0	now => aggregate count of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000010179	please list book having rating zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010180	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010181	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010182	please list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010183	get books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010184	please find books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010185	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010186	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010187	find books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010188	list book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010189	list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010190	search for book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010191	tell me the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010192	i am looking for books with NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010193	search for books which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010194	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010195	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010196	what are QUOTED_STRING_0 's QUOTED_STRING_1	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierrakn.Person ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000010197	list books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000010198	i want books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010199	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010200	i would like to get book that have rating count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 2 => notify
S5000010201	find book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010202	please list book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010203	search for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010204	get books that have rating count one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010205	search for book which have rating count at least 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010206	find book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010207	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010208	i want to retrieve books that have NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010209	search for book having rating count lower than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000010210	i need books that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010211	i need book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010212	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010213	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010214	which are the book which have 0 or above rating count and have 4 or below rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 and param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010215	i am looking for the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010216	i want to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010217	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010218	i want book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010219	what books get over 9 rating count and rating 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000010220	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010221	i am looking for books which have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000010222	i need to find book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010223	i need to search for books that have zero rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010224	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000010225	please get books which have rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010226	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010227	please enumerate books with rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010228	what is the in language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010229	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010230	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000010231	please find book which have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010232	please enumerate book having 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010233	which are the book that have greater rating count than 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010234	which are the book having less rating than 0 and number of pages not less than 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 and param:numberOfPages:Number >= 4 => notify
S5000010235	what are QUOTED_STRING_0 with book format audiobook format	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:AudiobookFormat and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010236	get books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010237	please enumerate books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010238	enumerate book having rating count more than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010239	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010240	search book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010241	find the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010242	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010243	i am looking for book with review count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000010244	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010245	retrieve books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010246	search book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010247	search the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010248	i am looking for book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010249	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010250	please list books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010251	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010252	please search for books which have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010253	search for books that have review count at least zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010254	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010255	i want books having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000010256	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010257	i am looking for book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010258	retrieve book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010259	get books that have rating count 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000010260	search books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010261	i need books having number of pages zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010262	i am looking for book having rating count at most NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010263	which are books having less rating than NUMBER_0 and number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:numberOfPages:Number == 0 => notify
S5000010264	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010265	get book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000010266	what book get rating equal to 10 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010267	i am looking for books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010268	what is the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010269	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010270	i want to search for books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010271	retrieve books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010272	i am looking for books which have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010273	tell me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010274	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010275	search for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010276	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010277	i am looking to find books which have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010278	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010279	i would like to search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010280	please search books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010281	i want to find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010282	i want to search for books which have higher review count than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010283	get book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010284	get books with number of pages lower than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000010285	i would like to search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010286	i would like books with greater review count than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010287	i am looking to get book having over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010288	i need the number of pages and rating count of the book which has the lowest number of pages	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010289	list books which have in language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010290	show me what 's the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010291	which is the QUOTED_STRING_0 which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010292	get books having over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010293	get book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000010294	i want to search for books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010295	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010296	tell me the book format and number of pages of the books which has the maximum review count .	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010297	get books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010298	retrieve book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010299	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010300	find book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010301	how many awards in the books with the lowest rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010302	i am looking for book which have 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000010303	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010304	i am looking to get book without rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010305	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010306	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010307	what are the books that have higher review count than zero and have rating count 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010308	search books having less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010309	list book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010310	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010311	get books with rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010312	enumerate books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010313	search book that have number of pages 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000010314	which books have rating less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010315	i am looking to find books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010316	which are the book which have rating equal to 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010317	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010318	how many awards in the books with the highest review count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010319	i need book that have rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010320	i want books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000010321	get books having larger number of pages than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010322	i am looking for the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010323	which books get rating NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010324	what is the number of awards in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010325	retrieve book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010326	i want to get books with review count 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000010327	get books having rating count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000010328	get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010329	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010330	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010331	i want to retrieve book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010332	please find books that have review count 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000010333	please enumerate book with rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010334	search for book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010335	i am looking to get book without rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010336	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010337	i need to search for books that have number of pages 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010338	which are people of QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000010339	i am looking for book having greater number of pages than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010340	get books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010341	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010342	find books that have smaller number of pages than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010343	i want to search books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000010344	search for book with book format ebook .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000010345	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010346	what are the books which have rating count more than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010347	i need to get book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010348	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000010349	retrieve book having isbn including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010350	i am looking for books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010351	retrieve book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010352	how many awards do the book which has the maximum number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010353	i am looking to get book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010354	please list book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010355	please find books that have review count 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000010356	enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010357	which books have over 0 rating count and rating count not more than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010358	i would like the QUOTED_STRING_0 with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010359	get books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010360	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010361	retrieve book with over zero review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010362	search book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010363	i would like to search book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010364	i want books having more than 7 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000010365	i would like books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000010366	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010367	i want to find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010368	search books with over 7 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010369	i want books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000010370	list book with number of pages 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010371	please find book that have over 9 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000010372	list books that have rating at most 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000010373	please list books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010374	i want to search books having 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010375	i want to get books with review count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 10 => notify
S5000010376	i would like to retrieve books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010377	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010378	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010379	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010380	show me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010381	retrieve books which have rating count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000010382	which are book having rating count not less than 12 which have number of pages 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:numberOfPages:Number == 4 => notify
S5000010383	get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000010384	i want books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010385	i am looking for book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010386	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010387	i would like books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010388	how many awards are there in the books which has the highest rating count ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010389	please search books with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010390	i want to search for book having more than 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 3 => notify
S5000010391	show me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010392	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010393	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010394	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010395	i want book having rating 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010396	i would like to search for book which have 3 or below rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S5000010397	search books having 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010398	i am looking to retrieve book which have QUOTED_STRING_0 in their book edition .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010399	what are books which have NUMBER_0 or greater rating and having review count 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number == 2 => notify
S5000010400	what book get NUMBER_0 or lower rating and review count lower than 6 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010401	retrieve books which have rating count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000010402	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010403	please search for book without more than 5 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S5000010404	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010405	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000010406	what is the review count and book edition of the book which has the minimum number of pages ?	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010407	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010408	i would like books which have 11 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000010409	i am looking for book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010410	i want to get books having review count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000010411	search book which have over 1 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010412	show me what is the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010413	search for book which have rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010414	please enumerate books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010415	i need books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010416	enumerate books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010417	find books having review count more than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010418	what are the QUOTED_STRING_0 which have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010419	enumerate book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010420	get books with rating count lower than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000010421	which are the book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010422	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000010423	i need to find books which have book format paperback	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000010424	i would like book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010425	i want to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010426	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010427	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010428	which are books having less rating than NUMBER_0 and number of pages zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:numberOfPages:Number == 0 => notify
S5000010429	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010430	what books get awards QUOTED_STRING_0 and review count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000010431	i am looking for the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010432	get books with rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010433	i am looking for book that have 9 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010434	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010435	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010436	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010437	list book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010438	what QUOTED_STRING_0 have 8 or above rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010439	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010440	i would like book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010441	which are books having over 9 number of pages which have rating equal to zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number >= 9 => notify
S5000010442	please enumerate book having 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010443	i am looking to get book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010444	get books having 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010445	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000010446	retrieve books that have less rating than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010447	retrieve book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000010448	i need books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010449	which book get 11 or more rating ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010450	search the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010451	i want to search for book which have 5 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000010452	i am looking to find books with review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010453	get books with rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010454	i want to know the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010455	find the book edition of book .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010456	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010457	i need to get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010458	tell me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010459	i am looking for books with rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010460	retrieve books which have smaller rating count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010461	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010462	i would like to search for book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010463	search books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010464	please enumerate book with zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010465	i want to search for books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010466	get books having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010467	retrieve books without or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010468	get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010469	retrieve the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010470	i am looking for books that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010471	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010472	get book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010473	search book that have 11 or less rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000010474	i would like book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010475	get book with review count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000010476	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010477	please find book having 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010478	i am looking to search book having 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010479	what is the rating count of book ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010480	search for books with rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010481	show me what is the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010482	i am looking for books that have 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010483	please get book which have zero awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000010484	i would like to retrieve books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010485	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010486	i want to find book that have 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010487	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010488	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000010489	find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010490	find book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010491	retrieve books which have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000010492	i want books that have over one review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010493	tell me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010494	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010495	search books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010496	enumerate book having rating count more than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010497	please retrieve books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010498	get books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010499	retrieve book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010500	list books with number of pages 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010501	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010502	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010503	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010504	i need to get book with greater rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010505	tell me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010506	get books with number of pages not less than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000010507	what are the books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010508	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010509	search for books with NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010510	i would like book with zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010511	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010512	search for books with less rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010513	what are QUOTED_STRING_0 that have review count smaller than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010514	get books that have lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010515	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010516	tell me what 's the in language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010517	i would like books with isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010518	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010519	i would like to retrieve books which have number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010520	enumerate book having rating count more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010521	please list books that have higher rating count than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010522	i need books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010523	i am looking for the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010524	get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010525	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010526	i am looking for books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010527	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010528	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000010529	i need books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010530	please list books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010531	tell me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010532	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010533	i would like to retrieve books having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010534	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010535	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010536	i am looking to search book having 2 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010537	i want to search for books which have higher review count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010538	get book that have over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010539	i need to search for books that have rating count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010540	tell me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010541	i need book that have 10 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000010542	list books which have lower rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010543	show me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010544	search the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010545	get book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010546	i need books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000010547	please list books with 0 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010548	i would like to retrieve book having 8 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010549	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010550	search for book with over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010551	i am looking for the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010552	please search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010553	find books that have more rating than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010554	show me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010555	show me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010556	list books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010557	show me what is the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010558	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010559	retrieve book having rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010560	i would like book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010561	search for books with rating count lower than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 11 => notify
S5000010562	what books have greater rating than 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010563	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010564	get books having higher rating count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 8 => notify
S5000010565	i would like book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010566	please retrieve book that have isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010567	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010568	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010569	retrieve book having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010570	i need book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010571	i want to get book that have over 6 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000010572	i would like books with greater review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010573	i am looking to search book having review count 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010574	list books with number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010575	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010576	search for books that have rating count not less than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010577	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010578	get the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010579	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010580	please enumerate books with rating count smaller than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 7 => notify
S5000010581	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010582	i am looking to get books that have lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010583	tell me what is the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010584	i need book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010585	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010586	what QUOTED_STRING_0 get number of pages greater than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 3 => notify
S5000010587	i need book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010588	enumerate book having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000010589	i would like book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010590	please list books which have rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010591	i am looking to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010592	get books which have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010593	find the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010594	search book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010595	i want book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010596	find book that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010597	search for book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010598	get book having rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010599	i need the QUOTED_STRING_0 with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010600	list books which have higher review count than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000010601	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010602	please list books having 1 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010603	list books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010604	i want to search books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000010605	i want to get book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010606	search for the QUOTED_STRING_0 which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010607	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010608	give me the url and book edition of the book with the minimum number of pages .	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010609	i need book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010610	search books that have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000010611	search book which have over 1 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010612	i am looking to retrieve books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000010613	i need book that have number of pages 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 7 => notify
S5000010614	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010615	please list books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000010616	what is the QUOTED_STRING_0 with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010617	i would like books with smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000010618	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010619	i would like the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010620	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010621	search the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010622	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010623	i need book that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010624	retrieve book having isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010625	search book that have rating count 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000010626	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010627	i would like to retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010628	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010629	find book which have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010630	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010631	i am looking to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010632	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010633	i would like the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010634	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010635	which book have book format paperback and is isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010636	search for books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010637	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010638	get book with over zero review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010639	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010640	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000010641	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010642	which books have number of pages 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010643	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010644	list book with number of pages 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010645	which books get NUMBER_0 or greater review count and number of pages 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:numberOfPages:Number == 5 => notify
S5000010646	i want book that have review count 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000010647	i would like the QUOTED_STRING_0 with the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010648	search for books with rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010649	retrieve the QUOTED_STRING_0 which has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010650	retrieve books that have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010651	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010652	search for books with less rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010653	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010654	which are books which have over 11 number of pages and having rating at most 8 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 and param:numberOfPages:Number >= 11 => notify
S5000010655	retrieve books that have 7 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010656	i am looking for book which have 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000010657	what are the books that have 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010658	i want to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010659	tell me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010660	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010661	i need books which have 4 or above review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010662	list books with over one rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010663	i need to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010664	i would like the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010665	find the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010666	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010667	tell me what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010668	get book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010669	i am looking for books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010670	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010671	i would like to get book that have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010672	find books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010673	search for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010674	i would like to get books that have 8 or above rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010675	i need books which have rating count greater than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000010676	which are the QUOTED_STRING_0 that have rating equal to zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010677	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010678	enumerate book with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010679	get book which have zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010680	get books with less number of pages than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010681	i need to search for books that have number of pages 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010682	search for book having rating 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010683	what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010684	find the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010685	i am looking to get book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010686	i need books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010687	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010688	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010689	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010690	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010691	i need to get book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010692	get books having larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010693	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010694	i want to find book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010695	get books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000010696	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010697	i want to search books having 3 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000010698	find books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010699	i want to search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010700	i need to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010701	search for books having over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010702	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010703	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010704	search books which have rating count more than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010705	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010706	i want books that have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010707	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010708	what are the books having over 12 rating that have 4 or below rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 and param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010709	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010710	retrieve books that have 7 or more rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010711	what is the QUOTED_STRING_0 which has the minimum rating count ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010712	what are book that have greater rating count than 7 and having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 and param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010713	find book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010714	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010715	i need to know the number of pages and rating count of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010716	search book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010717	what is the in language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010718	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010719	i would like to find book having rating greater than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010720	i need book with 6 or more review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010721	retrieve the QUOTED_STRING_0 with the minimum rating count .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010722	i am looking for books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010723	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010724	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010725	please enumerate book with rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010726	i am looking for book that have 6 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010727	get book which have QUOTED_STRING_0 in their book edition	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010728	please enumerate books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010729	i want to retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010730	search for books with 12 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010731	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010732	search the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010733	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010734	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010735	find book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010736	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000010737	i would like book that have rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010738	i would like to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010739	which books have over NUMBER_0 review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010740	i need to find books having book format ebook	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000010741	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010742	please enumerate books with rating higher than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010743	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010744	retrieve book that have review count more than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010745	i need book with over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010746	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010747	i need to know the number of pages and rating count of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010748	search books having 8 or above rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000010749	i am looking for the QUOTED_STRING_0 which has the highest rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010750	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010751	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010752	i would like books having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010753	i would like to get books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010754	retrieve book having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010755	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010756	i want to find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010757	i want to find books which have rating smaller than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000010758	get books with rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010759	i would like to retrieve books having smaller review count than 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010760	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010761	i would like to know the link and review count of QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000010762	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010763	what is the link and book edition of the books with the highest review count ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010764	get books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010765	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010766	i would like to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010767	search books with isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010768	please find books which have review count at least 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010769	get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010770	i need to retrieve book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010771	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010772	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010773	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010774	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010775	what book get zero or higher number of pages and review count equal to 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number >= 0 => notify
S5000010776	how many awards are there in the books with the lowest rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010777	search books with over 7 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010778	which are the book which have rating count at most NUMBER_0 and have rating count more than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 and param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010779	i want to retrieve books that have NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010780	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010781	get books which have isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000010782	i want to get book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010783	retrieve books that have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010784	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010785	retrieve book having rating count at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010786	i would like books that have rating larger than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010787	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010788	i want to search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010789	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010790	tell me what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010791	get book having less review count than 4 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000010792	i am looking for the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010793	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010794	find books having review count more than 2	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010795	i am looking for books which have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010796	search book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010797	i would like books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010798	get book with 6 or less number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000010799	which are QUOTED_STRING_0 having 10 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 => notify
S5000010800	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010801	i need to search book that have 4 or lower rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000010802	i want to search for books that have higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010803	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010804	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010805	search books without or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010806	get books that have review count 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000010807	get book that have review count greater than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010808	please enumerate book with rating 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010809	i need to get book having lower review count than 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010810	find book which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010811	retrieve book that have 0 or higher number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010812	i am looking for books that have one awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010813	what are the books that have 7 or lower number of pages and have review count lower than one ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 and param:numberOfPages:Number <= 7 => notify
S5000010814	please list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010815	i want to search book that have 9 or more review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010816	i need to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010817	what is the number of awards of book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010818	i want books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010819	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010820	i would like the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010821	tell me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010822	i would like to search books which have over 10 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010823	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010824	retrieve book which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010825	get books having over 12 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010826	find the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010827	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010828	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010829	list books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010830	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010831	i am looking for book with higher rating count than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010832	i would like book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010833	i want to search for books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010834	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010835	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010836	tell me the book format and number of pages of the books which has the maximum review count .	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000010837	get book which have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000010838	retrieve books with over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010839	i am looking for the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010840	what is the review count of books ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010841	i would like books with NUMBER_0 or greater review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010842	i am looking for books which have 0 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010843	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010844	list books with number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010845	i would like book that have rating larger than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010846	i need books which have rating count 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 10 => notify
S5000010847	i am looking to get books which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010848	search books having fewer than 1 award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010849	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010850	search for books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010851	search for book with number of pages 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010852	i want to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010853	list book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010854	i want books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010855	i want books that have 4 or below rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010856	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010857	i want book that have review count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000010858	please search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010859	please search for book having rating count more than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010860	search book having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010861	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000010862	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010863	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010864	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010865	what are book that have rating 10 and with lower review count than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:aggregateRating.reviewCount:Number <= 8 => notify
S5000010866	retrieve book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000010867	i would like books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010868	i need books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000010869	what are book having 7 or lower review count and 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:numberOfPages:Number <= 6 => notify
S5000010870	what are book with over zero rating and over 12 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010871	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010872	please enumerate books having 7 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010873	tell me what is the rating count of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010874	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010875	which are books having at most 2 awards ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010876	i need to find books with 8 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000010877	i am looking for book with rating count 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000010878	retrieve book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010879	what is the in language of book ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010880	i would like books that have rating at most 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000010881	list books with over one rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010882	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000010883	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010884	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010885	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000010886	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010887	what is the book edition of book ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010888	i want to retrieve books that have rating higher than 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010889	find books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000010890	i am looking for books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010891	i am looking for books which have zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010892	get books with rating not less than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010893	show me what 's the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010894	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010895	what book have rating count more than zero and rating NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010896	enumerate book with over NUMBER_0 review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010897	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010898	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010899	get books having review count zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010900	search the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010901	get books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010902	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010903	get books having over 2 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000010904	i am looking for book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010905	please retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010906	please list book that have over 1 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010907	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010908	tell me what 's the rating count of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010909	list book having one or below rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010910	i am looking to get books which have review count lower than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010911	search for the QUOTED_STRING_0 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010912	i want book that have rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010913	i need books that do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010914	which are the books with more rating than one and review count zero ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000010915	which books get rating not less than 12 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010916	get books having rating count 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000010917	which are the books which have rating count equal to 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000010918	i need to retrieve book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010919	get books which have rating one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010920	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010921	i want to retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010922	get books which have in language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010923	how many awards does the book which has the highest rating count have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010924	i would like the QUOTED_STRING_0 which has the minimum rating count	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010925	please search for books which have less review count than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010926	i would like book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010927	please find books that have review count 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 11 => notify
S5000010928	get books without or higher number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010929	i am looking to search book having review count 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000010930	enumerate book having 10 or lower rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000010931	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010932	retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010933	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010934	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010935	i need book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010936	please list books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010937	i need to search for books which have rating count 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000010938	i need book that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010939	get books with number of pages lower than 5 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 5 => notify
S5000010940	get books which have larger rating than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010941	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000010942	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010943	retrieve the QUOTED_STRING_0 which has the maximum rating count .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010944	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010945	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010946	i want to retrieve books which have more rating than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010947	i am looking for the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010948	get books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010949	retrieve books that have less rating than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 6 => notify
S5000010950	find the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010951	i need to know the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010952	i want book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010953	get books with rating count larger than 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000010954	i am looking for book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010955	i need to get book having lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010956	tell me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010957	i want books with 8 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000010958	i need to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010959	please list books that have lower review count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000010960	get books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010961	i am looking to get books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010962	i would like to search for books with less number of pages than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010963	get book which have over 9 rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010964	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010965	i would like book having greater rating count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010966	list book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000010967	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010968	i need books which have number of pages 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010969	i would like to search books having at most 2 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010970	show me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010971	what books get rating count higher than NUMBER_0 and review count 9 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number == 9 => notify
S5000010972	get book without rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010973	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010974	i am looking to find books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010975	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010976	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010977	get books that have 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010978	i need books that have review count at least zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010979	what are the books which have 6 or less review count and have number of pages one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 6 and param:numberOfPages:Number == 1 => notify
S5000010980	retrieve books without or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010981	i would like to retrieve book having 8 or above review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010982	retrieve book with in language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010983	i want book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010984	i am looking for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010985	i would like books with rating count not more than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 8 => notify
S5000010986	how many awards are there in the books with the highest rating count	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000010987	search books having less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010988	i need book that have rating 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010989	find the rating count of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000010990	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010991	i would like to get book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010992	i am looking for book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010993	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000010994	enumerate book with NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000010995	please list books with review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010996	which are books which have over 10 number of pages ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010997	find books with 5 or greater rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000010998	i want to search for books which have higher review count than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010999	i want to get book which have over NUMBER_0 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000011000	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011001	which are book with rating count 11 and number of pages 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 11 and param:numberOfPages:Number == 6 => notify
S5000011002	i need to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011003	i am looking to get books which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000011004	find book with rating count 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 6 => notify
S5000011005	tell me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011006	get books which have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000011007	retrieve book having isbn including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011008	search for books which have over zero rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000011009	i need book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000011010	list book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011011	i want to retrieve book having 4 or higher rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000011012	i would like to retrieve book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011013	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011014	find books having number of pages 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011015	i would like books that have rating count one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000011016	list book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000011017	i want to get books having review count 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000011018	show me what is the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000011019	what are the books having rating count not less than 12 and 10 or lower rating count ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:aggregateRating.ratingCount:Number >= 12 => notify
S5000011020	get books with 5 or greater rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000011021	enumerate book which have review count greater than 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011022	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011023	get books which have 12 or lower review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000011024	retrieve book that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011025	get books having 7 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000011026	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000011027	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011028	find books with 1 or lower rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000011029	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011030	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011031	retrieve books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000011032	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011033	search books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011034	what books get greater review count than 2 and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 2 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011035	i would like books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000011036	what are the books having 10 or above rating and rating count 0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.ratingValue:Number >= 10 => notify
S5000011037	i need book with over 9 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000011038	enumerate books having over 2 rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S5000011039	enumerate books which have 2 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000011040	search the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011041	get books with smaller rating count than 5	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000011042	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011043	i would like to search books that have lower review count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
S5000011044	i want book which have review count lower than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000011045	search for book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011046	which are books with review count 3 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S5000011047	i need books which have lower rating count than NUMBER_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000011048	search the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011049	i am looking for book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011050	enumerate book that have greater rating count than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000011051	get books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000011052	list book which have less rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000011053	please list books which have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000011054	how many awards are there in the books with the lowest number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) ) => notify
S5000011055	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011056	i want books having more than 7 awards .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000011057	find the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011058	search the in language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011059	what are QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000011060	i need books which have rating count greater than 6	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000011061	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011062	i need books with lower rating count than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000011063	i need books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000011064	search books with 9 or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000011065	i would like to find book having rating greater than 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000011066	i would like to find book with higher rating count than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000011067	search for book which have rating count at least 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000011068	get book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011069	i need book with lower review count than 8 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000011070	i am looking to get books that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000011071	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011072	search book which have over 9 rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000011073	i need to retrieve book having less review count than 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 4 => notify
S5000011074	retrieve books that have 7 or more rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000011075	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011076	i would like books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000011077	search the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011078	search for book which have over 0 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000011079	i am looking for book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000011080	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011081	what are book that have greater rating count than 7 and having smaller review count than 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 7 and param:aggregateRating.reviewCount:Number <= 1 => notify
S5000011082	get book with 6 or less number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 6 => notify
S5000011083	find the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011084	retrieve books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011085	i need book which have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000011086	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011087	what QUOTED_STRING_0 have number of pages 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 9 => notify
S5000011088	i am looking for book which have over NUMBER_0 rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000011089	i am looking to get books that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000011090	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011091	get books with rating 7 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000011092	i am looking for books that have rating count not less than 12 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000011093	i am looking for the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011094	please search for book having rating at most 8	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000011095	search for books with rating one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000011096	i need to search books having less rating than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000011097	i am looking for the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011098	i would like books which have 12 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000011099	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011100	please list books which have lower rating than 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000011101	i am looking for book which have lower number of pages than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000011102	please find books with NUMBER_0 or greater review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000011103	please list book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011104	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011105	i want to search for book which have 5 or lower review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000011106	show me what 's the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011107	show me what 's the review count of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011108	i want book having rating greater than zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000011109	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011110	search books with zero or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011111	get book having rating 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000011112	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011113	retrieve books which have rating count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 12 => notify
S5000011114	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011115	please find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011116	get book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000011117	give me the book edition and image of the books which has the lowest rating .	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000011118	which book get no more than 11 awards and number of pages 4	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 11 and param:numberOfPages:Number == 4 => notify
S5000011119	find books having number of pages 1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011120	tell me what is the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011121	tell me the number of awards in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierrakn.Book ) ) => notify
S5000011122	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011123	i am looking to search for books with lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000011124	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011125	retrieve book that have rating larger than 6 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000011126	search for the QUOTED_STRING_0 which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011127	get books that have over one review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011128	i want to get books which have 6 or less review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000011129	tell me both the url and author of QUOTED_STRING_0 .	now => [ param:author:Entity(edu.stanford.cs294s.sierrakn:Person) , param:url:Entity(tt:url) ] of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) => notify
S5000011130	enumerate book with NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000011131	tell me what 's the rating count of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011132	i need books that have review count greater than one .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011133	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000011134	please list books having greater rating than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000011135	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011136	i want book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011137	get book that have fewer than 9 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000011138	please list books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000011139	retrieve book with in language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000011140	find book which have lower number of pages than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000011141	i would like to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011142	get book which have zero or below review count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011143	get book with number of pages lower than 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000011144	i need books with in language containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000011145	find book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011146	what are book with over 11 review count and greater rating than 3	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011147	get book having lower rating count than one	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000011148	i need book that have fewer than one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000011149	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011150	i want books which have greater rating count than 3 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000011151	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011152	i would like to retrieve books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000011153	what are QUOTED_STRING_0 's people .	now => ( ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierrakn.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Person) == param:author:Entity(edu.stanford.cs294s.sierrakn:Person) => notify
S5000011154	what books have rating 11 and rating count 1	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.ratingValue:Number == 11 => notify
S5000011155	search for book isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011156	search books with 9 or below review count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000011157	please enumerate book that have QUOTED_STRING_0 in their in language	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000011158	what are the book having rating count 1 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000011159	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011160	i am looking to retrieve books which have more rating than 10 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000011161	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011162	i want the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011163	what book have review count at least 6 and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number >= 6 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011164	i am looking for books which have 0 or below number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000011165	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011166	i need the QUOTED_STRING_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011167	please list books which have over zero rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000011168	i want to search for books having review count zero	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011169	i would like to retrieve books which have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000011170	please search for books that have higher rating count than 0 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000011171	what books get lower review count than 7	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000011172	i need books that have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000011173	which QUOTED_STRING_0 has the highest rating count	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011174	i need the image and link of the books with the highest review count .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000011175	search for books with review count at most 10	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000011176	i would like to find book having 3 awards	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 3 => notify
S5000011177	find the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011178	please list books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011179	search books that have over 7 number of pages	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000011180	get book without rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000011181	i need the QUOTED_STRING_0 with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierrakn.Book ) filter param:id:Entity(edu.stanford.cs294s.sierrakn:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011182	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011183	find book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000011184	i want to retrieve book having 4 or higher rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000011185	get books that have review count 12	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.reviewCount:Number == 12 => notify
S5000011186	i want to know the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011187	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierrakn.Person ) => notify
S5000011188	please enumerate books with rating higher than 2 .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000011189	i want book that have rating count 9	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000011190	i would like to get books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011191	what book have rating count more than 4 ?	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000011192	please enumerate book having 11 or above rating count	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000011193	please list books which have 11 or above rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000011194	get books with rating greater than zero .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000011195	i need the number of pages and rating count of the book which has the lowest number of pages	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierrakn.Book ) ) [ 1 ] ) => notify
S5000011196	i would like books that have one award .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter count ( param:award:Array(String) ) == 1 => notify
S5000011197	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011198	tell me what is the in language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierrakn.Book ) => notify
S5000011199	search books which have zero rating count .	now => ( @edu.stanford.cs294s.sierrakn.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
