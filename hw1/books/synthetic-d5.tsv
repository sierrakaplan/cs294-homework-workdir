S3000000000	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000001	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000002	what are the book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000003	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000004	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000005	i would like to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000006	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000007	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000008	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000009	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000010	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000011	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000012	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000013	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000014	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000015	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000016	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000017	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000018	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000019	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000020	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000021	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000022	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000023	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000024	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000025	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000026	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000027	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000028	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000029	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000030	i would like books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000031	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000032	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000033	i am looking to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000034	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000035	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000036	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000037	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000038	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000039	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000040	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000041	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000042	i need to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000043	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000044	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000045	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000046	what are the book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000047	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000048	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000049	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000050	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000051	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000052	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000053	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000054	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000055	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000056	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000057	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000058	i want to retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000059	please list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000060	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000061	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000062	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000063	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000064	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000065	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000066	i want to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000067	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000068	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000069	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000070	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000071	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000072	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000073	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000074	which are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000075	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000076	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000077	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000078	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000079	search person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000080	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000081	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000082	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000083	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000084	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000085	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000086	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000087	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000088	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000089	i would like to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000090	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000091	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000092	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000093	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000094	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000095	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000096	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000097	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000098	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000099	i would like books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000100	i am looking to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000101	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000102	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000103	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000104	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000105	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000106	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000107	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000108	what are the book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000109	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000110	please search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000111	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000112	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000113	get book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000114	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000115	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000116	please retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000117	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000118	please list book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000119	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000120	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000121	please list person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000122	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000123	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000124	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000125	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000126	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000127	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000128	search book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000129	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000130	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000131	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000132	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000133	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000134	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000135	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000136	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000137	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000138	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000139	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000140	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000141	search for book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000142	i want to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000143	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000144	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000145	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000146	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000147	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000148	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000149	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000150	i would like to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000151	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000152	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000153	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000154	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000155	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000156	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000157	search book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000158	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000159	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000160	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000161	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000162	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000163	i want to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000164	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000165	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000166	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000167	i would like books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000168	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000169	what are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000170	i need to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000171	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000172	please search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000173	please retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000174	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000175	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000176	please search book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000177	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000178	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000179	search person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000180	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000181	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000182	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000183	i want to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000184	i need to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000185	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000186	i would like to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000187	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000188	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000189	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000190	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000191	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000192	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000193	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000194	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000195	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000196	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000197	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000198	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000199	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000200	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000201	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000202	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000203	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000204	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000205	i would like to get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000206	i need to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000207	please enumerate book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000208	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000209	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000210	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000211	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000212	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000213	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000214	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000215	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000216	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000217	what are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000218	search book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000219	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000220	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000221	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000222	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000223	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000224	please list book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000225	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000226	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000227	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000228	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000229	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000230	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000231	please find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000232	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000233	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000234	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000235	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000236	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000237	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000238	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000239	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000240	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000241	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000242	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000243	i want to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000244	search for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000245	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000246	i would like to get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000247	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000248	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000249	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000250	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000251	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000252	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000253	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000254	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000255	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000256	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000257	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000258	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000259	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000260	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000261	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000262	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000263	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000264	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000265	please list books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000266	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000267	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000268	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000269	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000270	please find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000271	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000272	i want to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000273	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000274	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000275	please find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000276	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000277	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000278	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000279	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000280	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000281	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000282	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000283	please enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000284	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000285	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000286	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000287	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000288	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000289	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000290	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000291	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000292	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000293	i am looking to find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000294	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000295	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000296	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000297	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000298	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000299	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000300	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000301	search person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000302	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000303	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000304	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000305	retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000306	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000307	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000308	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000309	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000310	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000311	i want to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000312	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000313	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000314	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000315	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000316	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000317	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000318	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000319	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000320	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000321	please find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000322	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000323	i would like to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000324	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000325	please retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000326	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000327	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000328	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000329	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000330	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000331	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000332	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000333	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000334	what are book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000335	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000336	please list books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000337	i would like book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000338	please find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000339	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000340	i would like to find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000341	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000342	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000343	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000344	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000345	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000346	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000347	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000348	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000349	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000350	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000351	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000352	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000353	what are book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000354	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000355	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000356	search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000357	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000358	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000359	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000360	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000361	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000362	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000363	i would like to get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000364	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000365	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000366	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000367	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000368	i want to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000369	i want to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000370	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000371	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000372	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000373	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000374	i want to find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000375	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000376	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000377	please search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000378	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000379	retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000380	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000381	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000382	list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000383	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000384	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000385	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000386	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000387	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000388	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000389	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000390	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000391	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000392	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000393	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000394	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000395	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000396	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000397	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000398	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000399	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000400	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000401	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000402	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000403	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000404	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000405	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000406	i want to search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000407	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000408	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000409	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000410	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000411	i need to get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000412	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000413	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000414	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000415	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000416	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000417	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000418	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000419	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000420	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000421	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000422	please get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000423	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000424	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000425	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000426	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000427	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000428	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000429	please search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000430	i would like to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000431	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000432	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000433	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000434	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000435	i want to find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000436	what are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000437	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000438	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000439	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000440	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000441	i would like to get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000442	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000443	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000444	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000445	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000446	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000447	i want to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000448	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000449	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000450	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000451	please find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000452	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000453	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000454	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000455	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000456	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000457	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000458	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000459	i would like book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000460	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000461	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000462	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000463	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000464	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000465	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000466	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000467	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000468	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000469	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000470	i need to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000471	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000472	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000473	i want to retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000474	i would like books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000475	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000476	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000477	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000478	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000479	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000480	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000481	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000482	i am looking for book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000483	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000484	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000485	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000486	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000487	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000488	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000489	i need book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000490	i am looking for person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000491	please search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000492	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000493	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000494	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000495	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000496	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000497	please get person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000498	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000499	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000500	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000501	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000502	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000503	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000504	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000505	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000506	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000507	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000508	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000509	i am looking for person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000510	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000511	search for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000512	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000513	please retrieve book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000514	i would like books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000515	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000516	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000517	i want to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000518	i would like to retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000519	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000520	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000521	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000522	retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000523	search book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000524	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000525	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000526	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000527	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000528	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000529	please list books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000530	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000531	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000532	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000533	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000534	which are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000535	i need to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000536	i am looking for person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000537	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000538	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000539	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000540	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000541	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000542	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000543	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000544	i would like to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000545	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000546	please retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000547	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000548	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000549	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000550	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000551	i need to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000552	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000553	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000554	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000555	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000556	search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000557	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000558	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000559	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000560	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000561	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000562	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000563	i want to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000564	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000565	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000566	i am looking to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000567	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000568	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000569	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000570	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000571	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000572	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000573	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000574	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000575	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000576	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000577	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000578	get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000579	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000580	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000581	what are the book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000582	i am looking to find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000583	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000584	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000585	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000586	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000587	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000588	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000589	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000590	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000591	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000592	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000593	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000594	get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000595	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000596	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000597	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000598	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000599	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000600	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000601	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000602	i need to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000603	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000604	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000605	please get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000606	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000607	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000608	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000609	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000610	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000611	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000612	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000613	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000614	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000615	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000616	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000617	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000618	get book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000619	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000620	i need to get person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000621	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000622	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000623	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000624	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000625	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000626	please find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000627	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000628	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000629	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000630	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000631	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000632	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000633	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000634	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000635	please list book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000636	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000637	please get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000638	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000639	i want to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000640	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000641	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000642	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000643	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000644	please list book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000645	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000646	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000647	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000648	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000649	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000650	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000651	i would like to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000652	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000653	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000654	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000655	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000656	i would like to get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000657	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000658	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000659	please retrieve book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000660	please get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000661	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000662	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000663	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000664	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000665	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000666	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000667	search for book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000668	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000669	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000670	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000671	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000672	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000673	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000674	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000675	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000676	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000677	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000678	which are book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000679	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000680	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000681	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000682	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000683	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000684	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000685	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000686	please find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000687	i want to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000688	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000689	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000690	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000691	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000692	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000693	i need to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000694	i need to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000695	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000696	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000697	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000698	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000699	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000700	i want to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000701	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000702	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000703	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000704	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000705	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000706	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000707	i need to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000708	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000709	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000710	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000711	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000712	please search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000713	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000714	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000715	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000716	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000717	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000718	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000719	what are the book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000720	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000721	what are the book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000722	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000723	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000724	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000725	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000726	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000727	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000728	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000729	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000730	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000731	i need to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000732	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000733	i need person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000734	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000735	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000736	get person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000737	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000738	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000739	i want to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000740	please search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000741	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000742	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000743	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000744	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000745	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000746	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000747	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000748	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000749	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000750	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000751	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000752	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000753	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000754	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000755	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000756	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000757	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000758	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000759	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000760	i want to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000761	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000762	i need to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000763	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000764	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000765	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000766	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000767	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000768	what are the book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000769	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000770	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000771	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000772	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000773	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000774	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000775	please enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000776	please get book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000777	please find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000778	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000779	i am looking to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000780	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000781	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000782	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000783	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000784	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000785	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000786	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000787	i am looking to find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000788	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000789	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000790	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000791	i want to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000792	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000793	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000794	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000795	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000796	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000797	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000798	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000799	i need to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000800	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000801	please retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000802	which are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000803	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000804	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000805	i am looking to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000806	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000807	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000808	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000809	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000810	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000811	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000812	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000813	please enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000814	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000815	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000816	please list books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000817	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000818	what are book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000819	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000820	i am looking to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000821	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000822	please find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000823	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000824	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000825	i need to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000826	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000827	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000828	please search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000829	i need to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000830	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000831	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000832	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000833	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000834	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000835	i am looking for person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000836	search person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000837	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000838	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000839	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000840	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000841	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000842	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000843	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000844	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000845	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000846	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000847	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000848	retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000849	i would like book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000850	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000851	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000852	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000853	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000854	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000855	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000856	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000857	i would like to search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000858	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000859	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000860	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000861	retrieve book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000862	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000863	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000864	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000865	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000866	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000867	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000868	i am looking to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000869	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000870	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000871	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000872	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000873	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000874	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000875	which are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000876	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000877	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000878	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000879	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000880	what are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000881	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000882	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000883	i am looking to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000884	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000885	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000886	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000887	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000888	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000889	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000890	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000891	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000892	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000893	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000894	i am looking to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000895	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000896	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000897	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000898	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000899	search for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000900	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000901	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000902	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000903	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000904	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000905	i am looking to find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000906	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000907	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000908	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000909	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000910	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000911	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000912	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000913	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000914	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000915	please list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000916	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000917	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000918	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000919	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000920	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000921	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000922	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000923	i am looking to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000924	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000925	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000926	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000927	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000928	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000929	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000930	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000931	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000932	please enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000933	i want to retrieve book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000934	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000935	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000936	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000937	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000938	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000939	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000940	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000941	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000942	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000943	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000944	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000945	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000946	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000947	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000948	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000949	which are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000950	retrieve book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000951	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000952	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000953	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000954	i would like books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000955	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000956	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000957	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000958	i want to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000959	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000960	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000961	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000962	please search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000963	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000964	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000965	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000966	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000967	list book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000968	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000969	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000970	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000971	i am looking for person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000972	which are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000973	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000974	please find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000975	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000976	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000977	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000978	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000979	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000980	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000981	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000982	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000983	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000984	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000985	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000986	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000987	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000988	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000989	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000990	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000991	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000992	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000993	i would like book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000994	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000995	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000000996	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000997	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000998	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000000999	i would like to retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001000	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001001	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001002	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001003	what are books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001004	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001005	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001006	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001007	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001008	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001009	please enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001010	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001011	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001012	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001013	i want to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001014	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001015	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001016	please find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001017	retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001018	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001019	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001020	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001021	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001022	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001023	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001024	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001025	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001026	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001027	i want to search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001028	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001029	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001030	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001031	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001032	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001033	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001034	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001035	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001036	list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001037	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001038	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001039	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001040	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001041	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001042	i would like to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001043	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001044	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001045	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001046	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001047	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001048	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001049	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001050	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001051	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001052	get book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001053	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001054	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001055	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001056	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001057	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001058	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001059	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001060	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001061	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001062	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001063	i would like to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001064	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001065	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001066	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001067	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001068	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001069	retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001070	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001071	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001072	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001073	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001074	i would like to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001075	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001076	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001077	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001078	i want to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001079	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001080	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001081	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001082	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001083	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001084	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001085	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001086	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001087	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001088	i need book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001089	search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001090	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001091	i need to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001092	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001093	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001094	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001095	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001096	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001097	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001098	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001099	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001100	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001101	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001102	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001103	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001104	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001105	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001106	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001107	i need to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001108	please search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001109	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001110	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001111	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001112	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001113	search book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001114	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001115	what are book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001116	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001117	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001118	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001119	what are the person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001120	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001121	i want to find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001122	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001123	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001124	what are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001125	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001126	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001127	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001128	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001129	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001130	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001131	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001132	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001133	i want to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001134	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001135	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001136	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001137	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001138	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001139	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001140	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001141	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001142	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001143	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001144	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001145	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001146	i need to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001147	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001148	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001149	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001150	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001151	i would like to search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001152	list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001153	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001154	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001155	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001156	i want to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001157	i am looking to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001158	i would like to find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001159	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001160	please find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001161	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001162	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001163	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001164	get book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001165	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001166	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001167	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001168	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001169	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001170	i am looking to find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001171	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001172	please list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001173	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001174	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001175	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001176	i am looking to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001177	i would like to search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001178	i need to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001179	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001180	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001181	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001182	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001183	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001184	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001185	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001186	please list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001187	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001188	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001189	list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001190	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001191	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001192	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001193	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001194	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001195	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001196	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001197	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001198	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001199	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001200	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001201	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001202	find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001203	please find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001204	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001205	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001206	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001207	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001208	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001209	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001210	what are the person ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001211	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001212	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001213	i am looking to retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001214	which are the books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001215	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001216	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001217	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001218	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001219	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001220	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001221	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001222	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001223	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001224	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001225	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001226	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001227	i would like to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001228	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001229	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001230	i need book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001231	i want person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001232	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001233	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001234	i want to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001235	i need to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001236	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001237	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001238	i want to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001239	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001240	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001241	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001242	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001243	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001244	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001245	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001246	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001247	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001248	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001249	please get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001250	please enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001251	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001252	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001253	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001254	i need to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001255	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001256	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001257	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001258	i want books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001259	i would like to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001260	i am looking to find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001261	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001262	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001263	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001264	i am looking to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001265	which are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001266	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001267	i need book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001268	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001269	search for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001270	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001271	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001272	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001273	which are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001274	i am looking to search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001275	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001276	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001277	i want to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001278	i need books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001279	get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001280	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001281	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001282	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001283	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001284	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001285	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001286	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001287	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001288	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001289	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001290	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001291	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001292	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001293	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001294	i need to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001295	i want to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001296	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001297	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001298	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001299	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001300	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001301	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001302	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001303	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001304	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001305	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001306	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001307	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001308	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001309	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001310	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001311	i want to retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001312	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001313	i want to find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001314	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001315	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001316	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001317	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001318	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001319	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001320	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001321	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001322	i want to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001323	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001324	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001325	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001326	i want to search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001327	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001328	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001329	what are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001330	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001331	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001332	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001333	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001334	i would like to find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001335	please search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001336	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001337	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001338	what are books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001339	i am looking to find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001340	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001341	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001342	i am looking to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001343	i need to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001344	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001345	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001346	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001347	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001348	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001349	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001350	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001351	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001352	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001353	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001354	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001355	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001356	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001357	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001358	i want to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001359	list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001360	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001361	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001362	i want to find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001363	i would like to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001364	find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001365	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001366	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001367	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001368	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001369	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001370	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001371	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001372	search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001373	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001374	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001375	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001376	list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001377	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001378	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001379	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001380	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001381	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001382	i want to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001383	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001384	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001385	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001386	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001387	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001388	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001389	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001390	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001391	i need person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001392	find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001393	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001394	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001395	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001396	please search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001397	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001398	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001399	i am looking for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001400	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001401	find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001402	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001403	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001404	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001405	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001406	i am looking to search books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001407	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001408	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001409	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001410	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001411	get person	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001412	what are books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001413	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001414	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001415	retrieve books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001416	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001417	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001418	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001419	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001420	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001421	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001422	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001423	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001424	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001425	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001426	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001427	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001428	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001429	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001430	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001431	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001432	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001433	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001434	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001435	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001436	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001437	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001438	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001439	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001440	find book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001441	i am looking to get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001442	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001443	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001444	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001445	what are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001446	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001447	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001448	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001449	search for book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001450	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001451	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001452	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001453	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001454	search book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001455	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001456	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001457	i want to retrieve books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001458	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001459	list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001460	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001461	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001462	please list books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001463	enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001464	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001465	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001466	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001467	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001468	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001469	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001470	retrieve book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001471	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001472	please find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001473	i am looking to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001474	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001475	enumerate books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001476	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001477	i am looking for book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001478	i would like to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001479	search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001480	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001481	please list people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001482	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001483	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001484	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001485	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001486	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001487	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001488	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001489	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001490	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001491	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001492	i need to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001493	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001494	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001495	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001496	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001497	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001498	i would like people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001499	i need person .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001500	enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001501	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001502	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001503	i am looking for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001504	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001505	i need to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001506	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001507	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001508	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001509	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001510	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001511	i would like to retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001512	which are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001513	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001514	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001515	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001516	please retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001517	i need people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001518	please get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001519	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001520	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001521	which are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001522	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001523	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001524	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001525	i am looking to search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001526	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001527	i would like to search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001528	find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001529	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001530	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001531	get books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001532	please enumerate people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001533	enumerate books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001534	please list people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001535	search for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001536	i would like people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001537	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001538	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001539	i would like book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001540	i am looking to search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001541	search books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001542	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001543	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001544	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001545	i am looking for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001546	i would like to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001547	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001548	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001549	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001550	please enumerate people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001551	find books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001552	i want to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001553	list book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001554	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001555	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001556	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001557	please get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001558	please search people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001559	i need books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001560	get books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001561	i need to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001562	retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001563	i want people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001564	please retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001565	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001566	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001567	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001568	search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001569	i would like to find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001570	retrieve people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001571	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001572	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001573	what are the people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001574	search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001575	which are people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001576	what are people ?	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001577	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001578	i would like to get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001579	what are the books ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001580	i want to find people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001581	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001582	i want books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001583	get people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001584	what are the people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001585	i would like to retrieve people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001586	i am looking for people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001587	please find books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001588	i need people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001589	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001590	i would like to search people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001591	find book	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001592	i need to find people .	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001593	what are book ?	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001594	i want people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001595	search for people	now => @edu.stanford.cs294s.sierra.Person => notify
S3000001596	please search for books .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001597	i am looking to search for books	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001598	search for book .	now => @edu.stanford.cs294s.sierra.Book => notify
S3000001599	get people .	now => @edu.stanford.cs294s.sierra.Person => notify
S4000001600	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001601	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001602	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001603	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001604	search for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001605	i want to know the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001606	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001607	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001608	find the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001609	find the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001610	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001611	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001612	which are books that have number of pages greater than 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 6 => notify
S4000001613	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001614	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001615	how many awards in a book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000001616	what is both the rating and book edition of books	now => [ param:aggregateRating.ratingValue:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001617	get the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001618	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001619	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001620	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001621	i am looking for the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001622	what is the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001623	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001624	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001625	search for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001626	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001627	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001628	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001629	search for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001630	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001631	i am looking for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001632	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001633	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001634	get the book with the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001635	which are the book with number of pages 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S4000001636	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001637	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001638	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001639	retrieve the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001640	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001641	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001642	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001643	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001644	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001645	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001646	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001647	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001648	search the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001649	i need the books which has the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001650	i want the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001651	get the books with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001652	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001653	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001654	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001655	i am looking for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001656	search for the book with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001657	i would like the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001658	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001659	search the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001660	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001661	what book have rating 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S4000001662	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001663	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001664	i want the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001665	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001666	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001667	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001668	what are book which have greater number of pages than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S4000001669	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001670	get the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001671	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001672	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001673	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001674	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001675	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001676	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001677	what is both the book format and number of pages of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001678	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001679	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001680	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001681	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001682	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001683	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001684	search for the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001685	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001686	retrieve the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001687	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001688	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001689	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001690	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001691	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001692	search the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001693	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001694	which are books that have number of pages greater than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 6 => notify
S4000001695	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001696	i want the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001697	search the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001698	what are the book having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S4000001699	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001700	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001701	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001702	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001703	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001704	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001705	retrieve the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001706	search for the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001707	find the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001708	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001709	i want the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001710	what is both the image and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001711	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001712	search for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001713	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001714	i want to know the author and isbn of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001715	what is both the url and language of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001716	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001717	search for the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001718	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001719	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001720	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001721	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001722	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001723	i want the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001724	which book has the minimum number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001725	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001726	search the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001727	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001728	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001729	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001730	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001731	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001732	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001733	get the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001734	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001735	what is the books with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001736	get the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001737	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001738	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001739	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001740	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001741	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001742	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001743	what is the url and number of pages of book ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001744	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001745	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001746	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001747	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001748	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001749	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001750	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001751	get the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001752	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001753	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001754	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001755	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001756	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001757	search for the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001758	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001759	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001760	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001761	find the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001762	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001763	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001764	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001765	which is the books with the largest number of awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001766	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001767	what is the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001768	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001769	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001770	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001771	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001772	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001773	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001774	i would like the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001775	search for the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001776	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001777	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001778	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001779	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001780	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001781	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001782	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001783	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001784	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001785	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001786	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001787	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001788	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001789	i need both the number of reviews and rating of books .	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001790	i would like to know both the url and image of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001791	how many awards in a book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000001792	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001793	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001794	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001795	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001796	get the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001797	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001798	get the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001799	i want the books which has the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001800	search for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001801	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001802	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001803	search the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001804	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001805	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001806	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001807	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001808	search for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001809	find the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001810	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001811	what is the link and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001812	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001813	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001814	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001815	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001816	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001817	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001818	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001819	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001820	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001821	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001822	get the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001823	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001824	which book has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001825	i need the book which has the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001826	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001827	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001828	retrieve the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001829	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001830	i want the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001831	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001832	which books gets the maximum number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001833	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001834	get the books with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001835	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001836	which books gets the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001837	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001838	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001839	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001840	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001841	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001842	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001843	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001844	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001845	what books get lower number of pages than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S4000001846	i am looking for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001847	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001848	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001849	i am looking for the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001850	search the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001851	what is the book edition and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001852	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001853	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001854	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001855	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001856	find the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001857	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001858	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001859	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001860	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001861	what is the url and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001862	search the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001863	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001864	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001865	what is the book which has the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001866	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001867	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001868	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001869	what is both the book format and url of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001870	what are the books that have number of pages at least 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 2 => notify
S4000001871	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001872	what is the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001873	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001874	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001875	which books have smaller number of reviews than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S4000001876	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001877	search for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001878	search for the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001879	i want the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001880	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001881	i am looking for the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001882	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001883	i want the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001884	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001885	i am looking for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001886	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001887	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001888	retrieve the book with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001889	what is both the book edition and language of books ?	now => [ param:bookEdition:String , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001890	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001891	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001892	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001893	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001894	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001895	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001896	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001897	i am looking for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001898	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001899	what book has the lowest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001900	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001901	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001902	get the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001903	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001904	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001905	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001906	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001907	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001908	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001909	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001910	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001911	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001912	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001913	what is the image and url of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001914	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001915	search for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001916	what is both the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001917	find the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001918	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001919	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001920	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001921	what is both the link and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001922	what is both the image and number of pages of books ?	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001923	retrieve the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001924	i am looking for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001925	i need the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001926	i am looking for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001927	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001928	retrieve the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001929	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001930	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001931	what is the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001932	i am looking for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001933	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001934	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001935	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001936	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001937	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001938	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001939	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001940	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001941	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001942	get the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001943	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001944	which books get number of ratings at least 5 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S4000001945	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001946	which are books having 12 or higher number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S4000001947	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001948	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001949	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001950	i would like the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001951	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001952	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001953	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001954	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001955	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001956	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001957	i am looking for the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001958	what are the books having higher number of pages than 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S4000001959	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001960	i need the book with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001961	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001962	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001963	what are the book with over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S4000001964	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001965	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001966	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001967	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001968	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001969	what is both the link and language of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001970	what is the image and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001971	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001972	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001973	what is the number of reviews and isbn of books ?	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001974	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001975	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001976	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001977	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001978	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001979	give me the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000001980	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001981	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001982	i need the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001983	i would like the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001984	i want to know the author and isbn of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000001985	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001986	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001987	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001988	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001989	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000001990	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001991	get the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001992	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001993	i want the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000001994	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001995	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000001996	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001997	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001998	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000001999	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002000	which is the books with the highest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002001	find the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002002	what is both the rating and url of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002003	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002004	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002005	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002006	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002007	i want the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002008	find the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002009	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002010	how many awards are there in book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000002011	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002012	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002013	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002014	what is the number of pages and url of book	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002015	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002016	which are book which have number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S4000002017	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002018	retrieve the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002019	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002020	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002021	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002022	what are book with 9 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000002023	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002024	what is both the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002025	i am looking for the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002026	find the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002027	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002028	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002029	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002030	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002031	i would like to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002032	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002033	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002034	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002035	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002036	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002037	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002038	what is both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002039	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002040	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002041	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002042	find the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002043	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002044	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002045	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002046	what is the image and url of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002047	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002048	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002049	search for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002050	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002051	which is the books which has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002052	count the book	now => aggregate count of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002053	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002054	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002055	what is the link and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002056	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002057	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002058	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002059	which are the books with number of ratings one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S4000002060	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002061	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002062	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002063	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002064	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002065	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002066	which book get larger number of ratings than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S4000002067	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002068	search for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002069	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002070	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002071	what is both the author and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002072	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002073	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002074	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002075	i need both the number of reviews and rating of books .	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002076	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002077	find the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002078	i am looking for the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002079	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002080	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002081	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002082	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002083	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002084	which is the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002085	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002086	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002087	what is both the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002088	what books gets the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002089	get the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002090	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002091	what is both the isbn and image of books ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002092	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002093	i need the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002094	find the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002095	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002096	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002097	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002098	which are book with over 1 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S4000002099	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002100	i want the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002101	which books has the minimum number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002102	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002103	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002104	retrieve the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002105	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002106	which is the books with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002107	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002108	get the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002109	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002110	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002111	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002112	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002113	i want the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002114	search the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002115	what is both the url and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002116	i want the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002117	what are book with 6 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S4000002118	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002119	i would like the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002120	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002121	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002122	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002123	i need the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002124	i would like the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002125	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002126	what is the link and language of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002127	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002128	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002129	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002130	what is the author and book edition of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002131	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002132	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002133	which are the books with number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S4000002134	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002135	what are the book with lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S4000002136	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002137	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002138	search for the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002139	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002140	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002141	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002142	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002143	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002144	find the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002145	find the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002146	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002147	search for the books which has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002148	which are books that have lower number of pages than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S4000002149	get the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002150	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002151	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002152	search for the books which has the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002153	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002154	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002155	which books has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002156	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002157	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002158	what is both the image and number of ratings of book	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002159	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002160	i need the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002161	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002162	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002163	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002164	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002165	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002166	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002167	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002168	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002169	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002170	what is both the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002171	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002172	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002173	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002174	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002175	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002176	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002177	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002178	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002179	which book have number of reviews 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S4000002180	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002181	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002182	which is the books with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002183	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002184	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002185	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002186	i want to know both the link and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002187	which is the book with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002188	retrieve the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002189	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002190	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002191	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002192	what books gets the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002193	i am looking for the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002194	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002195	get the books with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002196	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002197	what is the url and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002198	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002199	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002200	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002201	what is the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002202	which is the book with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002203	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002204	what is both the link and language of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002205	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002206	what is both the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002207	what book has the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002208	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002209	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002210	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002211	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002212	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002213	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002214	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002215	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002216	i want the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002217	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002218	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002219	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002220	i want the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002221	find the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002222	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002223	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002224	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002225	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002226	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002227	i am looking for the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002228	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002229	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002230	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002231	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002232	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002233	search the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002234	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002235	i want the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002236	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002237	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002238	what is both the isbn and number of pages of book	now => [ param:isbn:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002239	which book gets the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002240	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002241	which is the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002242	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002243	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002244	what is the books with the lowest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002245	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002246	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002247	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002248	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002249	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002250	find the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002251	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002252	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002253	what is both the link and rating of book	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002254	what is both the image and link of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002255	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002256	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002257	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002258	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002259	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002260	get the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002261	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002262	search for the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002263	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002264	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002265	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002266	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002267	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002268	count the person	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002269	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002270	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002271	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002272	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002273	find the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002274	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002275	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002276	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002277	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002278	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002279	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002280	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002281	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002282	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002283	which books gets the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002284	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002285	what book have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000002286	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002287	i am looking for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002288	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002289	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002290	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002291	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002292	i need the book with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002293	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002294	search for the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002295	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002296	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002297	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002298	get the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002299	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002300	what is the number of reviews and number of ratings of book ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002301	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002302	i want the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002303	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002304	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002305	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002306	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002307	search for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002308	what is the number of ratings and language of book ?	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002309	which books has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002310	what is the url and number of pages of book ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002311	i would like the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002312	what is the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002313	retrieve the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002314	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002315	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002316	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002317	what is both the number of pages and link of book ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002318	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002319	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002320	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002321	what is the url and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002322	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002323	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002324	what book have higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000002325	i would like to know both the number of reviews and link of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002326	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002327	get the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002328	which is the books which has the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002329	what is the link and number of pages of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002330	i need the book with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002331	find the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002332	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002333	i am looking for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002334	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002335	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002336	which are the book which have number of reviews 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S4000002337	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002338	which are the 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S4000002339	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002340	i am looking for the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002341	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002342	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002343	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002344	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002345	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002346	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002347	which books has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002348	what are QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002349	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002350	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002351	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002352	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002353	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002354	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002355	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002356	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002357	i am looking for the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002358	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002359	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002360	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002361	search for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002362	what is the image and number of reviews of books	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002363	what are book with rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S4000002364	i would like to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002365	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002366	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002367	i need the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002368	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002369	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002370	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002371	what is the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002372	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002373	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002374	search the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002375	i need the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002376	what is the image and book edition of books ?	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002377	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002378	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002379	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002380	i would like the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002381	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002382	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002383	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002384	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002385	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002386	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002387	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002388	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002389	get the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002390	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002391	search the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002392	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002393	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002394	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002395	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002396	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002397	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002398	search for the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002399	search the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002400	find the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002401	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002402	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002403	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002404	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002405	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002406	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002407	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002408	i am looking for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002409	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002410	search the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002411	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002412	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002413	what is both the url and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002414	get the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002415	what is the number of pages and url of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002416	retrieve the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002417	search the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002418	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002419	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002420	what are books which have number of pages 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S4000002421	what is the image and isbn of book ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002422	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002423	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002424	what book get number of reviews 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S4000002425	what is both the link and rating of book ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002426	what is the number of pages and url of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002427	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002428	what is both the book format and image of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002429	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002430	which is the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002431	find the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002432	search for the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002433	what are the book having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S4000002434	what is the url and language of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002435	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002436	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002437	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002438	which are the book with number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S4000002439	search for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002440	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002441	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002442	i am looking for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002443	what is both the link and rating of book	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002444	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002445	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002446	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002447	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002448	get the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002449	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002450	search for the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002451	search for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002452	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002453	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002454	what is the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002455	search the link and image of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002456	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002457	what is both the isbn and link of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002458	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002459	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002460	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002461	what is the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002462	which are the books which have over 7 number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S4000002463	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002464	i need the book which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002465	i am looking for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002466	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002467	what is the image and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002468	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002469	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002470	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002471	search the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002472	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002473	i need the book with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002474	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002475	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002476	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002477	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002478	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002479	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002480	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002481	i want the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002482	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002483	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002484	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002485	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002486	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002487	i want to know both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002488	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002489	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002490	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002491	i want the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002492	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002493	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002494	which are the books that have number of ratings larger than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S4000002495	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002496	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002497	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002498	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002499	retrieve the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002500	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002501	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002502	search the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002503	i am looking for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002504	what is both the rating and url of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002505	i am looking for the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002506	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002507	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002508	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002509	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002510	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002511	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002512	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002513	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002514	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002515	what is both the author and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002516	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002517	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002518	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002519	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002520	i am looking for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002521	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002522	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002523	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002524	retrieve the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002525	which book have number of pages lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S4000002526	what books gets the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002527	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002528	get the book which has the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002529	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002530	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002531	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002532	get the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002533	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002534	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002535	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002536	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002537	i want the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002538	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002539	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002540	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002541	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002542	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002543	get the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002544	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002545	i would like the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002546	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002547	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002548	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002549	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002550	what is both the language and url of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002551	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002552	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002553	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002554	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002555	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002556	what books gets the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002557	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002558	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002559	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002560	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002561	get the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002562	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002563	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002564	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002565	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002566	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002567	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002568	i am looking for the book with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002569	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002570	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002571	retrieve the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002572	which books gets the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002573	search the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002574	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002575	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002576	count the person .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002577	i would like to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002578	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002579	i want to know the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002580	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002581	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002582	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002583	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002584	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002585	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002586	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002587	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002588	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002589	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002590	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002591	what is both the author and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002592	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002593	what books has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002594	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002595	which book gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002596	get the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002597	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002598	find the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002599	what books has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002600	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002601	what books has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002602	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002603	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002604	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002605	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002606	what is both the language and link of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002607	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002608	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002609	i am looking for the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002610	which books has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002611	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002612	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002613	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002614	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002615	which are the book with number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S4000002616	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002617	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002618	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002619	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002620	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002621	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002622	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002623	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002624	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002625	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002626	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002627	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002628	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002629	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002630	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002631	please search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002632	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002633	what is both the author and link of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002634	get the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002635	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002636	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002637	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002638	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002639	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002640	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002641	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002642	find the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002643	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002644	what is the rating and language of books ?	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002645	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002646	which are book with over 1 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S4000002647	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002648	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002649	i want the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002650	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002651	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002652	what is both the book edition and url of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002653	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002654	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002655	i am looking for the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002656	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002657	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002658	i am looking for the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002659	count the person	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002660	i am looking for the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002661	what books gets the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002662	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002663	i want the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002664	what are books which have 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S4000002665	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002666	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002667	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002668	what is the image and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002669	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002670	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002671	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002672	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002673	i want the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002674	get the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002675	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002676	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002677	what book has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002678	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002679	what is both the isbn and link of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002680	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002681	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002682	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002683	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002684	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002685	what book gets the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002686	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002687	what is both the rating and book edition of books	now => [ param:aggregateRating.ratingValue:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002688	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002689	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002690	search the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002691	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002692	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002693	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002694	i need the language and isbn of books .	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002695	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002696	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002697	what is both the url and number of pages of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002698	get the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002699	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002700	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002701	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002702	search for the books which has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002703	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002704	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002705	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002706	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002707	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002708	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002709	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002710	find the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002711	i would like the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002712	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002713	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002714	search for the book with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002715	search the books which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002716	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002717	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002718	search the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002719	what is the book edition and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002720	get the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002721	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002722	what is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002723	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002724	i need the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002725	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002726	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002727	what is the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002728	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002729	what is the link and book format of book	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002730	i want the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002731	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002732	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002733	what is both the url and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002734	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002735	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002736	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002737	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002738	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002739	search the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002740	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002741	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002742	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002743	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002744	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002745	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002746	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002747	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002748	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002749	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002750	what is the url and isbn of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002751	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002752	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002753	search for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002754	what is both the url and image of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002755	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002756	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002757	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002758	i want the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002759	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002760	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002761	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002762	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002763	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002764	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002765	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002766	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002767	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002768	search the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002769	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002770	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002771	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002772	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002773	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002774	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002775	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002776	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002777	find the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002778	search the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002779	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002780	what is both the image and isbn of book	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002781	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002782	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002783	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002784	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002785	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002786	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002787	what is the books which has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002788	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002789	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002790	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002791	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002792	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002793	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002794	what are the book having number of ratings lower than 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S4000002795	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002796	search the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002797	which are books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S4000002798	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002799	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002800	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002801	what is both the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002802	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002803	what book has the lowest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002804	i am looking for the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002805	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002806	search the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002807	i am looking for the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002808	i would like the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002809	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002810	what is both the isbn and image of book	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002811	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002812	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002813	which is the book which has the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002814	how many awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000002815	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002816	what book get rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S4000002817	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002818	i would like the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002819	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002820	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002821	what is both the url and author of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002822	what is the rating and language of books	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002823	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002824	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002825	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002826	i want to know the author and isbn of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002827	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002828	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002829	what is both the rating and book format of books	now => [ param:aggregateRating.ratingValue:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002830	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002831	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002832	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002833	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002834	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002835	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002836	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002837	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002838	i want the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002839	please count the people	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002840	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002841	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002842	i would like the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002843	retrieve the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002844	i want to know both the link and book format of books .	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002845	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002846	search the link and image of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002847	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002848	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002849	what is both the url and number of pages of book	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002850	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002851	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002852	what is both the number of reviews and author of book ?	now => [ param:aggregateRating.reviewCount:Number , param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002853	get the book which has the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002854	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002855	i would like the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002856	i want the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002857	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002858	what book gets the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002859	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002860	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002861	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002862	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002863	i am looking for the book with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002864	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002865	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002866	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002867	i would like the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002868	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002869	i would like to know both the number of reviews and link of books .	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002870	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002871	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002872	what books has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002873	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002874	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002875	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002876	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002877	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002878	what is the url and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002879	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002880	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002881	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002882	search for the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002883	what is both the link and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002884	what is the link and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002885	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002886	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002887	search the books which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002888	what is the book with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002889	i need the book which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002890	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002891	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002892	what is both the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002893	get the book which has the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002894	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002895	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002896	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002897	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002898	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002899	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002900	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002901	i want the books which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002902	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002903	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002904	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002905	i would like the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002906	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002907	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002908	what is the number of pages and url of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002909	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002910	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002911	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002912	find the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002913	what is both the number of reviews and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002914	what is both the rating and language of book ?	now => [ param:aggregateRating.ratingValue:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002915	get the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002916	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002917	search the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002918	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002919	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002920	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002921	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002922	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002923	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002924	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002925	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002926	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002927	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002928	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002929	which is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002930	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002931	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002932	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002933	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002934	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002935	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002936	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002937	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002938	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002939	how many awards are there in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000002940	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002941	what is the image and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002942	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002943	search the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002944	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002945	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002946	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002947	what books gets the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002948	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002949	what is the book edition and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002950	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002951	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002952	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002953	i want to know both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002954	what are books which have number of ratings zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S4000002955	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002956	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002957	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002958	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002959	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002960	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002961	what is both the book edition and number of pages of books	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002962	get the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002963	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002964	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002965	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002966	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002967	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002968	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002969	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002970	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000002971	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002972	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002973	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002974	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002975	search for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002976	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002977	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002978	i would like the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002979	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002980	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002981	i would like the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002982	which are the books with smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S4000002983	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002984	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002985	retrieve the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002986	what is both the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002987	what is the author and isbn of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002988	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002989	i would like the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000002990	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002991	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000002992	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002993	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002994	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000002995	find the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002996	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002997	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000002998	what is the language and book edition of books	now => [ param:bookEdition:String , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000002999	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003000	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003001	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003002	i need the books which has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003003	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003004	search the books which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003005	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003006	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003007	what is the link and language of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003008	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003009	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003010	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003011	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003012	what is the image and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003013	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003014	what is both the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003015	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003016	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003017	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003018	what is the language and image of books ?	now => [ param:image:Entity(tt:picture) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003019	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003020	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003021	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003022	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003023	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003024	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003025	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003026	what is the link and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003027	which are book which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S4000003028	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003029	search the link and image of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003030	search the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003031	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003032	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003033	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003034	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003035	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003036	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003037	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003038	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003039	what is both the number of pages and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003040	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003041	i need the books which has the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003042	search the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003043	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003044	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003045	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003046	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003047	search for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003048	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003049	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003050	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003051	what is the book edition and image of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003052	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003053	which books gets the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003054	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003055	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003056	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003057	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003058	what are books that have more rating than zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S4000003059	what book gets the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003060	i need the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003061	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003062	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003063	what is both the link and language of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003064	i want the books which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003065	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003066	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003067	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003068	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003069	search for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003070	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003071	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003072	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003073	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003074	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003075	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003076	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003077	what is both the link and language of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003078	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003079	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003080	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003081	retrieve the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003082	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003083	what book has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003084	find the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003085	i need the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003086	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003087	what is the number of ratings and link of book	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003088	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003089	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003090	search for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003091	what is both the number of reviews and isbn of books	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003092	what are books that have over 5 number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S4000003093	i am looking for the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003094	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003095	find the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003096	what is both the url and isbn of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003097	i want to know the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003098	what book have higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S4000003099	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003100	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003101	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003102	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003103	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003104	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003105	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003106	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003107	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003108	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003109	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003110	i am looking for the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003111	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003112	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003113	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003114	what is both the link and number of reviews of book ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003115	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003116	get the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003117	search for the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003118	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003119	what book gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003120	find the book with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003121	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003122	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003123	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003124	i am looking for the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003125	what is the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003126	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003127	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003128	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003129	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003130	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003131	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003132	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003133	what is both the number of ratings and link of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003134	which books have higher rating than 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S4000003135	find the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003136	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003137	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003138	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003139	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003140	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003141	what is both the rating and number of ratings of book	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003142	i would like the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003143	what is both the language and link of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003144	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003145	find the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003146	which book have no number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S4000003147	what is both the number of ratings and url of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003148	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003149	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003150	i need both the number of reviews and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003151	find the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003152	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003153	i would like to know both the number of reviews and link of books .	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003154	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003155	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003156	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003157	what is both the author and image of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003158	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003159	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003160	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003161	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003162	which book have number of reviews 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S4000003163	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003164	i want the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003165	find the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003166	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003167	what is both the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003168	search for the books which has the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003169	i need the language and isbn of books	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003170	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003171	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003172	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003173	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003174	get the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003175	i need the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003176	what book is 3 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S4000003177	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003178	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003179	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003180	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003181	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003182	what are the book without fewer than 12 awards ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S4000003183	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003184	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003185	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003186	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003187	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003188	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003189	search for the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003190	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003191	which book have 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S4000003192	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003193	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003194	what is both the url and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003195	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003196	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003197	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003198	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003199	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003200	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003201	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003202	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003203	i want the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003204	what is both the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003205	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003206	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003207	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003208	retrieve the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003209	what is the books with the tiniest number of awards ?	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003210	what is both the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003211	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003212	what is the image and number of reviews of books	now => [ param:aggregateRating.reviewCount:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003213	i would like the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003214	i need the language and isbn of books .	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003215	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003216	what books get more rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S4000003217	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003218	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003219	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003220	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003221	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003222	what is the number of reviews and language of book	now => [ param:aggregateRating.reviewCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003223	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003224	which books get over zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S4000003225	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003226	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003227	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003228	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003229	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003230	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003231	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003232	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003233	i am looking for the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003234	which book is 2 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S4000003235	i would like the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003236	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003237	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003238	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003239	retrieve the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003240	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003241	search the books which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003242	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003243	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003244	i am looking for the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003245	search the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003246	get the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003247	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003248	search for the book with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003249	i want the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003250	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003251	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003252	what is the image and link of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003253	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003254	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003255	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003256	what is the author and url of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003257	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003258	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003259	what is the rating and number of reviews of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003260	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003261	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003262	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003263	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003264	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003265	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003266	retrieve the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003267	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003268	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003269	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003270	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003271	what are book without awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S4000003272	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003273	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003274	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003275	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003276	which are the books that have number of ratings larger than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S4000003277	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003278	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003279	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003280	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003281	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003282	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003283	i want the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003284	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003285	show me the image and author of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003286	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003287	get the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003288	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003289	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003290	which are the books which have higher number of pages than 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S4000003291	get the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003292	search the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003293	show me the image and author of book .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003294	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003295	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003296	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003297	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003298	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003299	i am looking for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003300	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003301	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003302	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003303	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003304	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003305	get the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003306	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003307	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003308	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003309	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003310	what books have over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S4000003311	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003312	what is the url and language of book ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003313	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003314	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003315	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003316	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003317	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003318	retrieve the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003319	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003320	what is the isbn and link of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003321	what is the author and url of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003322	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003323	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003324	what is both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003325	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003326	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003327	list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003328	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003329	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003330	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003331	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003332	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003333	what book gets the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003334	i want the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003335	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003336	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003337	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003338	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003339	what is the book format and isbn of book	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003340	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003341	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003342	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003343	i am looking for the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003344	count the books .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003345	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003346	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003347	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003348	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003349	which are books having rating 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S4000003350	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003351	which are book with number of ratings one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S4000003352	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003353	i need both the number of reviews and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003354	what is the book format and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003355	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003356	what is both the url and book edition of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003357	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003358	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003359	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003360	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003361	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003362	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003363	i am looking for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003364	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003365	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003366	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003367	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003368	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003369	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003370	what is the number of reviews and number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003371	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003372	search the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003373	get the book which has the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003374	what is the image and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003375	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003376	retrieve the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003377	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003378	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003379	what is the books with the lowest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003380	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003381	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003382	i need the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003383	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003384	i would like the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003385	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003386	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003387	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003388	find the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003389	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003390	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003391	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003392	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003393	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003394	i am looking for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003395	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003396	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003397	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003398	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003399	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003400	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003401	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003402	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003403	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003404	what is both the image and url of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003405	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003406	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003407	what book has the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003408	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003409	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003410	which is the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003411	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003412	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003413	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003414	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003415	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003416	retrieve the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003417	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003418	what is the isbn and number of reviews of book	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003419	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003420	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003421	what is both the image and number of pages of books	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003422	i am looking for the book with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003423	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003424	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003425	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003426	what is the book edition and url of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003427	i need the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003428	what books has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003429	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003430	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003431	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003432	what is the books with the highest number of awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003433	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003434	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003435	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003436	find the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003437	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003438	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003439	i need the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003440	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003441	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003442	find the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003443	retrieve the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003444	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003445	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003446	which are QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003447	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003448	retrieve the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003449	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003450	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003451	find the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003452	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003453	what is both the number of reviews and link of book ?	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003454	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003455	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003456	i need the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003457	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003458	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003459	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003460	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003461	what is the link and number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003462	which is the books which has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003463	what is the image and isbn of book ?	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003464	what is the books with the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003465	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003466	search for the books which has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003467	i need the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003468	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003469	what is both the language and book format of books ?	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003470	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003471	what is the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003472	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003473	i want the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003474	find the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003475	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003476	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003477	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003478	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003479	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003480	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003481	find the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003482	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003483	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003484	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003485	what is the number of pages and language of books ?	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003486	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003487	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003488	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003489	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003490	i am looking for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003491	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003492	i would like the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003493	which are books having over 2 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 2 => notify
S4000003494	i would like the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003495	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003496	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003497	what is the url and number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003498	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003499	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003500	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003501	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003502	what is both the link and number of pages of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003503	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003504	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003505	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003506	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003507	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003508	i need the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003509	what is both the link and number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003510	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003511	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003512	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003513	what are the book that have 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S4000003514	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003515	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003516	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003517	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003518	i would like to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003519	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003520	what is the book with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003521	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003522	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003523	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003524	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003525	what is the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003526	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003527	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003528	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003529	what are book which have 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S4000003530	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003531	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003532	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003533	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003534	list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003535	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003536	what is the image and isbn of book	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003537	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003538	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003539	what are book that have over 9 number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S4000003540	find the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003541	i want the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003542	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003543	how many awards are there in books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003544	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003545	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003546	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003547	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003548	i would like the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003549	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003550	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003551	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003552	what is the url and book edition of books ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003553	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003554	i need the language and isbn of books	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003555	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003556	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003557	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003558	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003559	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003560	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003561	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003562	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003563	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003564	get the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003565	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003566	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003567	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003568	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003569	get the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003570	i would like the books with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003571	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003572	i am looking for the book with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003573	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003574	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003575	which is the books which has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003576	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003577	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003578	search the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003579	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003580	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003581	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003582	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003583	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003584	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003585	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003586	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003587	search the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003588	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003589	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003590	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003591	what is both the language and url of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003592	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003593	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003594	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003595	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003596	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003597	what is the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003598	which books has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003599	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003600	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003601	i am looking for the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003602	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003603	i am looking for the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003604	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003605	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003606	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003607	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003608	what are the book with number of ratings 4 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S4000003609	which books have 5 or greater number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S4000003610	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003611	retrieve the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003612	which book get 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S4000003613	which are the book having over 10 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S4000003614	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003615	i want to know the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003616	retrieve the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003617	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003618	what is both the language and number of pages of books	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003619	what are book with rating 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S4000003620	i want the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003621	find the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003622	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003623	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003624	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003625	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003626	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003627	what is both the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003628	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003629	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003630	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003631	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003632	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003633	what is the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003634	please count the books	now => aggregate count of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003635	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003636	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003637	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003638	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003639	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003640	what is the image and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003641	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003642	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003643	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003644	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003645	get the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003646	which books gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003647	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003648	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003649	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003650	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003651	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003652	what is both the url and image of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003653	what is the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003654	i am looking for the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003655	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003656	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003657	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003658	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003659	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003660	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003661	i am looking for the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003662	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003663	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003664	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003665	get the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003666	i would like to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003667	which books gets the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003668	which books gets the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003669	please count the people	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003670	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003671	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003672	what is the number of reviews and number of ratings of book ?	now => [ param:aggregateRating.ratingCount:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003673	i would like the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003674	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003675	retrieve the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003676	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003677	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003678	which is the book with the lowest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003679	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003680	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003681	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003682	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003683	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003684	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003685	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003686	what book have lower number of ratings than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S4000003687	i need the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003688	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003689	i need both the number of reviews and rating of books .	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003690	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003691	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003692	i would like to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003693	retrieve the books with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003694	i want the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003695	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003696	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003697	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003698	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003699	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003700	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003701	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003702	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003703	i want the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003704	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003705	what is both the isbn and image of books	now => [ param:image:Entity(tt:picture) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003706	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003707	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003708	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003709	i want the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003710	how many awards are there in the book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003711	what books has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003712	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003713	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003714	what book get rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S4000003715	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003716	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003717	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003718	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003719	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003720	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003721	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003722	what is the image and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003723	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003724	which books have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S4000003725	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003726	retrieve the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003727	search for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003728	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003729	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003730	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003731	what is the number of ratings and language of book	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003732	search the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003733	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003734	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003735	search the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003736	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003737	how many awards do books have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003738	search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003739	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003740	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003741	i am looking for the book which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003742	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003743	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003744	what books gets the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003745	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003746	find the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003747	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003748	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003749	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003750	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003751	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003752	which is the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003753	which are books having 12 or higher number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S4000003754	search for the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003755	how many awards are there in a book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003756	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003757	i would like to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003758	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003759	i would like to know both the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003760	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003761	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003762	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003763	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003764	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003765	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003766	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003767	i need the book which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003768	what is both the url and number of pages of books ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003769	search the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003770	search the books which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003771	what is both the book edition and number of pages of book ?	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003772	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003773	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003774	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003775	i would like the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003776	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003777	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003778	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003779	i need to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003780	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003781	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003782	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003783	what is the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003784	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003785	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003786	search for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003787	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003788	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003789	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003790	what is the number of ratings and language of books ?	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003791	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003792	i would like the book with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003793	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003794	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003795	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003796	what is the book edition and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003797	what are book which have 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S4000003798	get the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003799	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003800	i would like the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003801	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003802	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003803	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003804	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003805	which is the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003806	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003807	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003808	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003809	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003810	i am looking for the books with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003811	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003812	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003813	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003814	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003815	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003816	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003817	what is both the link and image of book	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003818	find the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003819	what is both the book edition and number of pages of books	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003820	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003821	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003822	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003823	i need the book with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003824	what is both the number of pages and link of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003825	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003826	which are the books that have number of ratings larger than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S4000003827	i would like the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003828	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003829	what are book having number of reviews 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S4000003830	i want the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003831	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003832	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003833	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003834	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003835	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003836	what is both the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003837	i would like the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003838	retrieve the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003839	find the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003840	what is both the language and link of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003841	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003842	i would like to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003843	find the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003844	i am looking for the book with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003845	search the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003846	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003847	i am looking for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003848	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003849	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003850	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003851	i would like to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003852	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003853	find the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003854	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003855	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003856	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003857	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003858	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003859	which are the books having isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S4000003860	i am looking for the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003861	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003862	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003863	what is the books with the lowest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003864	retrieve the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003865	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003866	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003867	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003868	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003869	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003870	get the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003871	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003872	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003873	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003874	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003875	what is the number of reviews and number of pages of book ?	now => [ param:aggregateRating.reviewCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003876	find the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003877	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003878	how many awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003879	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003880	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003881	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003882	search for the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003883	i would like the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003884	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003885	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003886	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003887	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003888	what is the number of pages and number of reviews of book	now => [ param:aggregateRating.reviewCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003889	get the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003890	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003891	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003892	what is both the number of ratings and link of books ?	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003893	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003894	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003895	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003896	i want the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003897	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003898	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003899	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003900	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003901	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003902	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003903	search the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003904	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003905	find the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003906	search the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003907	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003908	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003909	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003910	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003911	i am looking for the books with the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003912	find the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003913	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003914	search the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003915	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003916	which are book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S4000003917	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003918	i want to know both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003919	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003920	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003921	i need the book with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003922	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003923	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003924	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003925	i need the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003926	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003927	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003928	what is both the url and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003929	which are books that have number of pages greater than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 6 => notify
S4000003930	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003931	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003932	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003933	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003934	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003935	i need the books which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003936	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003937	search the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003938	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003939	what is the link and image of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003940	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003941	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003942	search the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003943	i would like the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003944	i need the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003945	what is the books with the smallest number of awards ?	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003946	which book has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003947	retrieve the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003948	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003949	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003950	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003951	i need the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003952	what is the book edition and url of books	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003953	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003954	i want the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003955	get the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003956	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003957	what is the url and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003958	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003959	search the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003960	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003961	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003962	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003963	what books gets the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003964	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003965	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003966	search for the books with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003967	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003968	what is both the number of pages and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003969	i want the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003970	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003971	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003972	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003973	what is the number of ratings and number of pages of books ?	now => [ param:aggregateRating.ratingCount:Number , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003974	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003975	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003976	what is the number of pages and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003977	find the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003978	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003979	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003980	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003981	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003982	search for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003983	please list QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003984	what is both the author and image of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000003985	search for the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003986	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003987	please search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003988	how many awards are there in books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000003989	i want the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003990	search the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003991	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003992	which is the book with the largest count of awards ?	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000003993	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000003994	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000003995	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003996	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003997	what is the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000003998	i am looking for the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000003999	i need the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004000	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004001	which are the book with over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S4000004002	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004003	retrieve the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004004	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004005	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004006	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004007	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004008	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004009	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004010	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004011	find the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004012	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004013	get the books with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004014	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004015	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004016	find the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004017	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004018	what is both the book edition and number of pages of books	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004019	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004020	which are the books with 7 or lower number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S4000004021	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004022	i need the language and isbn of books	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004023	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004024	i want the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004025	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004026	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004027	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004028	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004029	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004030	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004031	i would like the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004032	what is the image and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004033	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004034	get the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004035	what is both the url and book edition of book ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004036	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004037	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004038	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004039	what book gets the minimum number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004040	get the book with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004041	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004042	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004043	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004044	which is the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004045	i would like the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004046	search the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004047	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004048	what books have number of reviews at least 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S4000004049	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004050	what book has the lowest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004051	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004052	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004053	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004054	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004055	i want to know the author and isbn of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004056	i need the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004057	search the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004058	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004059	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004060	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004061	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004062	search the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004063	get the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004064	i want the books which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004065	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004066	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004067	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004068	search for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004069	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004070	search the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004071	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004072	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004073	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004074	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004075	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004076	i am looking for the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004077	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004078	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004079	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004080	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004081	please enumerate QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004082	get the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004083	how many awards are there in a book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000004084	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004085	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004086	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004087	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004088	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004089	what is the link and book edition of book	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004090	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004091	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004092	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004093	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004094	i need the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004095	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004096	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004097	count the people	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004098	what book gets the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004099	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004100	search the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004101	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004102	search the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004103	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004104	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004105	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004106	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004107	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004108	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004109	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004110	which are book that have lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S4000004111	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004112	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004113	what are books which have number of pages greater than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S4000004114	get the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004115	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004116	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004117	search for the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004118	what is both the url and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004119	i am looking for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004120	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004121	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004122	i need both the number of reviews and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004123	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004124	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004125	what is the url and language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004126	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004127	what is the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004128	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004129	i am looking for the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004130	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004131	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004132	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004133	i would like the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004134	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004135	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004136	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004137	i need the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004138	what is both the image and url of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004139	find the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004140	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004141	what books have 8 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S4000004142	what is both the isbn and book format of books	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004143	get the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004144	search the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004145	i am looking for the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004146	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004147	what is the book edition and image of books ?	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004148	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004149	what books gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004150	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004151	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004152	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004153	retrieve the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004154	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004155	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004156	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004157	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004158	which is the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004159	what are books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S4000004160	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004161	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004162	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004163	what is both the book edition and image of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004164	i would like the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004165	i would like the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004166	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004167	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004168	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004169	i am looking for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004170	i need the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004171	find the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004172	search for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004173	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004174	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004175	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004176	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004177	i am looking for the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004178	i would like to search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004179	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004180	what is both the url and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004181	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004182	search the books which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004183	i am looking to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004184	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004185	which are book having one or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S4000004186	i need the books with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004187	what is the url and rating of book ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004188	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004189	i would like the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004190	search the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004191	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004192	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004193	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004194	find the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004195	what are the books having no more than 5 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 5 => notify
S4000004196	what book is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S4000004197	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004198	search the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004199	i would like to know both the image and link of people .	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004200	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004201	which is the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004202	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004203	i am looking for the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004204	i want the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004205	find the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004206	what books gets the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004207	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004208	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004209	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004210	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004211	what is the url and language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004212	find the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004213	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004214	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004215	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004216	what is the book format and author of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004217	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004218	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004219	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004220	search for the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004221	which books has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004222	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004223	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004224	what is the number of ratings and language of book	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004225	how many awards are there in a books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000004226	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004227	i need to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004228	find the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004229	what is the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004230	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004231	i need the book with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004232	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004233	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004234	i am looking to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004235	i need the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004236	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004237	search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004238	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004239	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004240	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004241	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004242	what is both the number of reviews and isbn of books	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004243	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004244	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004245	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004246	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004247	i need the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004248	what is the book format and author of book ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004249	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004250	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004251	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004252	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004253	i would like the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004254	what book get number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S4000004255	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004256	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004257	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004258	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004259	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004260	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004261	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004262	i am looking for the book with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004263	what are the books having over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S4000004264	i would like the books with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004265	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004266	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004267	i need the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004268	i would like the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004269	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004270	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004271	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004272	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004273	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004274	i want to know the author and isbn of books	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004275	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004276	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004277	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004278	retrieve the book which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004279	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004280	search for the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004281	get the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004282	which are the book that have 3 or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 3 => notify
S4000004283	which are the book that have rating 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S4000004284	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004285	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004286	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004287	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004288	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004289	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004290	search for the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004291	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004292	search for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004293	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004294	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004295	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004296	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004297	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004298	what is the book format and author of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004299	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004300	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004301	i would like the books with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004302	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004303	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004304	please get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004305	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004306	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004307	search for the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004308	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004309	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004310	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004311	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004312	retrieve the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004313	i need the books with the smallest count of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004314	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004315	what is the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004316	what is the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004317	what is the image and link of books ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004318	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004319	i would like the book with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004320	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004321	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004322	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004323	retrieve the books with the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004324	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004325	i am looking for the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004326	i need the books with the largest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004327	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004328	get the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004329	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004330	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004331	i want the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004332	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004333	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004334	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004335	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004336	how many people are there	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004337	i am looking for the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004338	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004339	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004340	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004341	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004342	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004343	what is the book format and number of ratings of book ?	now => [ param:aggregateRating.ratingCount:Number , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004344	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004345	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004346	i would like the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004347	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004348	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004349	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004350	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004351	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004352	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004353	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004354	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004355	what is the image and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004356	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004357	find the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004358	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004359	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004360	search the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004361	i want to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004362	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004363	i want the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004364	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004365	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004366	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004367	i would like the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004368	which books gets the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004369	what is the link and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004370	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004371	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004372	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004373	search the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004374	search the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004375	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004376	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004377	find the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004378	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004379	what is both the url and isbn of books ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004380	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004381	get the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004382	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004383	search for the book which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004384	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004385	find the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004386	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004387	which is the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004388	search for the books which has the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004389	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004390	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004391	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004392	what is the books with the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004393	i need the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004394	search for the book with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004395	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004396	search for the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004397	i need the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004398	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004399	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004400	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004401	get the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004402	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004403	find the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004404	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004405	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004406	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004407	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004408	find the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004409	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004410	what is both the link and language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004411	what is both the author and number of reviews of books	now => [ param:aggregateRating.reviewCount:Number , param:author:Entity(edu.stanford.cs294s.sierra:Person) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004412	search for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004413	i am looking for the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004414	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004415	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004416	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004417	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004418	what is the image and url of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004419	i would like the book with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004420	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004421	search for the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004422	what is both the link and number of pages of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004423	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004424	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004425	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004426	please get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004427	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004428	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004429	i want to know both the author and image of book	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004430	search the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004431	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004432	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004433	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004434	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004435	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004436	what is both the image and book edition of books	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004437	i would like the books with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004438	i am looking to get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004439	i am looking to search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004440	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004441	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004442	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004443	retrieve the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004444	retrieve the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004445	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004446	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004447	which books gets the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004448	i want to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004449	please enumerate QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004450	what is the books with the lowest number of ratings ?	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004451	get the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004452	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004453	which is the books which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004454	how many people are there ?	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004455	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004456	search the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004457	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004458	what is the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004459	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004460	please find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004461	get the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004462	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004463	i need the books which has the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004464	what books gets the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004465	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004466	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004467	what is the image and link of books	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004468	i would like to know both the number of reviews and link of books	now => [ param:aggregateRating.reviewCount:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004469	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004470	what are the book having 11 or less rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S4000004471	i want the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004472	i would like the books with the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004473	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004474	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004475	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004476	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004477	what is both the book format and book edition of books	now => [ param:bookEdition:String , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004478	what is the books with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004479	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004480	retrieve the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004481	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004482	find the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004483	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004484	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004485	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004486	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004487	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004488	get the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004489	which books gets the maximum number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004490	i want the books which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004491	i would like the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004492	what is both the url and isbn of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004493	which are books having lower number of ratings than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S4000004494	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004495	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004496	retrieve the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004497	get the book with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004498	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004499	get the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004500	find the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004501	what is both the rating and url of books ?	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004502	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004503	what is both the isbn and rating of books ?	now => [ param:aggregateRating.ratingValue:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004504	search for the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004505	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004506	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004507	i need the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004508	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004509	which is the book with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004510	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004511	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004512	i want the book which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004513	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004514	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004515	search the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004516	i am looking for the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004517	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004518	i am looking for the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004519	find the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004520	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004521	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004522	please list QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004523	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004524	what is the language and link of books	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004525	search for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004526	what is both the url and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004527	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004528	find the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004529	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004530	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004531	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004532	what are book which have awards QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S4000004533	i need the language and isbn of books	now => [ param:inLanguage:String , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004534	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004535	what is the url and book edition of book ?	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004536	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004537	what is both the link and language of book	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004538	i would like the book with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004539	i need both the number of reviews and rating of books .	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004540	which are the books that have 4 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S4000004541	get the books with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004542	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004543	what is both the book edition and language of books	now => [ param:bookEdition:String , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004544	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004545	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004546	find the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004547	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004548	search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004549	search the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004550	what are book having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S4000004551	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004552	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004553	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004554	retrieve the books which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004555	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004556	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004557	which books get higher number of pages than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S4000004558	get the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004559	what is both the number of reviews and rating of books	now => [ param:aggregateRating.ratingValue:Number , param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004560	which are book with number of reviews lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S4000004561	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004562	search the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004563	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004564	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004565	what is both the language and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004566	how many awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S4000004567	i want the books which has the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004568	search for the books which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004569	i am looking for the book with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004570	which books gets the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004571	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004572	i would like the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004573	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004574	search the books which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004575	search the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004576	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004577	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004578	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004579	i need the book with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004580	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004581	which is the books with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004582	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004583	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004584	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004585	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004586	i am looking for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004587	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004588	retrieve the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004589	search the books which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004590	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004591	which books has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004592	what book get number of reviews 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 => notify
S4000004593	i want the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004594	what books has the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004595	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004596	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004597	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004598	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004599	i would like the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004600	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004601	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004602	i need the book with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004603	i need the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004604	i am looking for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004605	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004606	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004607	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004608	i need to retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004609	i want the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004610	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004611	what are the books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S4000004612	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004613	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004614	i need the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004615	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004616	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004617	i need the book with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004618	which are books which have 12 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S4000004619	what is the isbn and number of ratings of books	now => [ param:aggregateRating.ratingCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004620	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004621	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004622	search for the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004623	find the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004624	what is both the link and language of books ?	now => [ param:inLanguage:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004625	find the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004626	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004627	search for the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004628	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004629	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004630	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004631	i am looking for the books which has the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004632	find the books with the smallest count of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004633	i am looking for the books which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004634	which is the book with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004635	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004636	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004637	please count the people .	now => aggregate count of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004638	i want the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004639	i am looking for the books with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004640	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004641	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004642	retrieve the books with the largest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004643	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004644	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004645	i want the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004646	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004647	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004648	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004649	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004650	i would like to know both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004651	search for the book which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004652	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004653	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004654	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004655	get the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004656	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004657	which book gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004658	which are the books that have number of ratings more than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S4000004659	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004660	find the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004661	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004662	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004663	please search QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004664	which is the book which has the highest number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004665	retrieve the books which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004666	i would like the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004667	retrieve the books which has the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004668	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004669	find the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004670	find the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004671	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004672	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004673	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004674	i would like the books which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004675	search for the books with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004676	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004677	retrieve the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004678	search for the books with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004679	find the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004680	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004681	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004682	i would like the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004683	get the book with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004684	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004685	i want the book with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004686	i want the books with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004687	i would like the book which has the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004688	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004689	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004690	what is both the author and book format of books ?	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004691	what is both the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004692	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004693	count the books	now => aggregate count of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004694	i would like the book which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004695	what is both the isbn and link of books	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004696	retrieve the book which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004697	i need the books with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004698	i want the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004699	search for the book with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004700	find the books with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004701	search for the book which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004702	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004703	get the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004704	get the book with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004705	search for the book with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004706	retrieve the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004707	i want the books with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004708	i would like QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004709	retrieve the book which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004710	i would like the book which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004711	retrieve the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004712	find the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004713	retrieve the books with the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004714	what is both the language and number of pages of books	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004715	i am looking for the book which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004716	search the books with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004717	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004718	search the books with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004719	i would like the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004720	i am looking for the books with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004721	i need to retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004722	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004723	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004724	get the books with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004725	what is the link and image of people ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004726	find the book which has the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004727	retrieve the books which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004728	search the book which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004729	i want to find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004730	retrieve QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004731	i want the book with the tiniest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004732	i would like the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004733	i would like the book which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004734	retrieve the book which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004735	i need QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004736	search the book with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004737	retrieve the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004738	what is the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004739	find the book which has the minimum number of pages	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004740	get the book which has the lowest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004741	i am looking for the books with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004742	i am looking for the books with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004743	i would like QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004744	search the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004745	which is the books which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004746	find the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004747	i want the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004748	i am looking for the books with the tiniest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004749	i would like the books which has the maximum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004750	search for QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004751	i want QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004752	please search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004753	get QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004754	i would like to search QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004755	find the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004756	search for the books which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004757	i want to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004758	i am looking for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004759	i need the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004760	i would like to find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004761	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004762	retrieve the books with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004763	i want the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004764	find the books which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004765	i am looking to get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004766	retrieve QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004767	please find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004768	i would like the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004769	what is the isbn and number of reviews of books	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004770	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004771	find QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004772	i am looking for the books with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004773	get QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004774	i need the book with the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004775	i need QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004776	what are the book with 5 or lower number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S4000004777	what is both the link and number of pages of books	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004778	search the books with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004779	i want QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 => notify
S4000004780	search for the books with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004781	i would like the books which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004782	search for the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004783	i want the books with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004784	search the link and image of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004785	search for the books with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004786	which are the 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S4000004787	what book gets the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004788	i need the book with the lowest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004789	find the books with the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004790	what is the isbn and number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number , param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004791	what is the number of pages and language of books ?	now => [ param:inLanguage:String , param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S4000004792	find the books with the highest number of pages .	now => ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004793	i would like the books with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004794	i would like the book with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] => notify
S4000004795	find the book which has the minimum number of pages .	now => ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004796	what books has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] => notify
S4000004797	find QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S4000004798	what is both the image and link of people	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S4000004799	i am looking to search for QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000004800	what are the 12 page 12 -star book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number == 12 => notify
S5000004801	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000004802	what books are 1 -star and 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 3 => notify
S5000004803	show me what 's the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000004804	retrieve books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000004805	i need book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004806	get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004807	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000004808	get books that have number of ratings lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000004809	i need book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000004810	retrieve book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000004811	find book having number of ratings 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000004812	show me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004813	enumerate 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000004814	please list book having number of ratings less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000004815	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000004816	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000004817	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004818	retrieve books which have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004819	which QUOTED_STRING_0 have number of pages lower than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 2 => notify
S5000004820	get books that have number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000004821	i am looking for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004822	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004823	get book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000004824	tell me what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004825	retrieve book which have less number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000004826	list 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000004827	what book are 9 page and get 3 or higher number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:numberOfPages:Number == 9 => notify
S5000004828	get book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000004829	what are the QUOTED_STRING_0 's QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000004830	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004831	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000004832	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000004833	please list book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004834	i want the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004835	get book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000004836	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000004837	get 9 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000004838	search for book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000004839	show me what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004840	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004841	what are the books which have QUOTED_STRING_0 in their awards ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000004842	list NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004843	which are the one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000004844	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000004845	i need books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004846	please get books which have isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004847	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004848	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004849	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004850	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004851	i am looking for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000004852	search books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004853	i am looking for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000004854	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004855	get books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000004856	i would like 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000004857	get books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000004858	enumerate books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000004859	retrieve books which do n't have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000004860	enumerate books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000004861	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004862	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004863	i would like to search for book having fewer than 9 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000004864	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000004865	retrieve books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000004866	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004867	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004868	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000004869	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004870	list books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000004871	retrieve book without number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000004872	which QUOTED_STRING_0 has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004873	how many awards do the book which has the lowest number of ratings have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000004874	get books which have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000004875	i want 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000004876	i would like to retrieve book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000004877	show me what 's the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004878	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000004879	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004880	get 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000004881	i would like to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004882	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004883	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000004884	please list books with rating smaller than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004885	get QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000004886	which books have over one number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004887	give me the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004888	please search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004889	what are books with QUOTED_STRING_0 in their book edition which is one -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000004890	find books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000004891	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000004892	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000004893	i would like book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000004894	please enumerate books that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000004895	i am looking for book that have rating 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000004896	please enumerate books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000004897	i want books which have rating at most 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004898	which QUOTED_STRING_0 get number of pages 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 6 => notify
S5000004899	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000004900	please list books which have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000004901	i need book with 1 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000004902	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000004903	what are NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004904	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004905	get book that have 12 or less number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000004906	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004907	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000004908	i need the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004909	get books that have over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000004910	i would like books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000004911	please retrieve books with smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000004912	i need book with number of pages 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000004913	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004914	i want to get book having NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000004915	get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000004916	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004917	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004918	i need to search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000004919	i would like book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000004920	how many awards does the books which has the lowest number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000004921	i would like to get books having fewer than 9 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000004922	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004923	search for books that have greater number of ratings than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000004924	i would like the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004925	which are QUOTED_STRING_0 with number of reviews smaller than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000004926	search book having 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000004927	i need the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004928	what are books with rating greater than zero and number of pages greater than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 and param:numberOfPages:Number >= 11 => notify
S5000004929	i need book that have number of ratings not less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000004930	find book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000004931	i would like the number of pages and link of the books with the least awards .	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) => notify
S5000004932	i need to search for books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000004933	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000004934	show me what is the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004935	search for book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000004936	i want to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000004937	which are zero page 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number == 0 => notify
S5000004938	i would like books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000004939	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004940	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004941	please list books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000004942	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000004943	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004944	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004945	i would like book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000004946	which are the book having NUMBER_0 pages and number of ratings equal to 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 11 and param:numberOfPages:Number == NUMBER_0 => notify
S5000004947	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000004948	get books that have number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000004949	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004950	get book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000004951	i am looking for book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000004952	retrieve book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000004953	i would like to find books which do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000004954	please find books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004955	get books which have smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000004956	which books are 4 page and get smaller number of ratings than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 4 => notify
S5000004957	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000004958	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004959	search for NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000004960	search for book which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000004961	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000004962	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004963	i need to get books with number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000004964	i need to search for book that have number of ratings more than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000004965	find book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000004966	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000004967	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004968	what books get larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000004969	tell me the number of reviews of book	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004970	i need 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000004971	i need book having 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000004972	i would like to find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000004973	which are books that have less number of pages than 7 and have number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:numberOfPages:Number <= 7 => notify
S5000004974	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004975	retrieve books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000004976	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004977	i am looking for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004978	what are the books which have 11 pages and with rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 11 => notify
S5000004979	i want book without pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000004980	i need book with one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000004981	get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000004982	please find 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000004983	search books which do not have fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000004984	get 7 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000004985	which are books which have zero number of ratings , with number of reviews zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000004986	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004987	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004988	i am looking for book with no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000004989	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000004990	get book having 5 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000004991	i would like to get book which have 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000004992	i need book with over 11 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000004993	i need books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000004994	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000004995	i am looking for books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000004996	give me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000004997	search for books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000004998	find the QUOTED_STRING_0 with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000004999	how many awards in the books which has the highest rating	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005000	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005001	get 7 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005002	i want to retrieve book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005003	what is the image and url of the book which has the minimum number of pages	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000005004	i am looking to retrieve QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005005	i want to search books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005006	how many awards are there in the books with the lowest number of ratings	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005007	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005008	i would like the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005009	i am looking for books that have larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005010	what are book which have number of pages 2 and with number of ratings 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:numberOfPages:Number == 2 => notify
S5000005011	i am looking to search books which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005012	please search for 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005013	get 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000005014	i would like to find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005015	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005016	i want book which have number of ratings one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000005017	please search book with number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000005018	enumerate books which have 10 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005019	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005020	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005021	what are the QUOTED_STRING_0 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005022	please list 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005023	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005024	i would like to retrieve book with zero or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005025	get NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005026	search books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005027	please enumerate books which have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005028	get book which have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005029	show me the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005030	i need one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005031	which books have number of pages not less than 0 and is 12 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number >= 0 => notify
S5000005032	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005033	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005034	i need the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005035	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005036	get books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005037	please search for books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005038	enumerate books which have 10 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005039	search books which have over 1 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000005040	i want 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005041	please enumerate 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005042	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005043	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005044	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005045	i am looking to retrieve 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005046	i want book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005047	i would like to search book having higher number of reviews than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005048	get books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005049	please enumerate books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005050	i need to search for zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005051	which are the 11 page books having number of reviews more than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 and param:numberOfPages:Number == 11 => notify
S5000005052	i would like to get books having fewer than 9 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000005053	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005054	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005055	please list 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005056	i would like books that have larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005057	i want to get 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005058	i want the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005059	i would like to find books having smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005060	retrieve book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005061	retrieve books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005062	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005063	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005064	get the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005065	please list 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005066	get book with no fewer than 12 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000005067	how many awards do the books with the lowest number of pages have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005068	please list 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005069	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005070	please search NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005071	i would like to search for books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005072	which are QUOTED_STRING_0 having over 12 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000005073	i would like books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005074	find the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005075	enumerate 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005076	search for book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005077	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005078	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005079	find book that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005080	show me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005081	i am looking for books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005082	show me the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005083	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005084	retrieve books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005085	i would like to retrieve book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005086	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005087	get 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005088	retrieve 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005089	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005090	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005091	search books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005092	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005093	which book are 10 page and get 11 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:numberOfPages:Number == 10 => notify
S5000005094	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005095	get book that have number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000005096	get books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005097	i am looking for books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005098	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005099	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005100	i need the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005101	which book have over one rating and zero or below number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 and param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005102	i am looking to search books with NUMBER_0 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005103	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005104	enumerate books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005105	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005106	get book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005107	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005108	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005109	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005110	get book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005111	i would like to search books that is 1 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005112	get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005113	get zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005114	get QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005115	what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005116	get book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005117	what are book that do not have more than 5 awards and have number of pages 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 5 and param:numberOfPages:Number == 2 => notify
S5000005118	get 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005119	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005120	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005121	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005122	i want books with over NUMBER_0 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000005123	retrieve the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005124	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005125	retrieve books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005126	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005127	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005128	get books that have number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005129	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005130	i need to find NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005131	please enumerate books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000005132	which books have number of pages not less than 0 and is 12 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number >= 0 => notify
S5000005133	i want to search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005134	i would like books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005135	retrieve the QUOTED_STRING_0 with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005136	please enumerate book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005137	i need 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005138	search the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005139	i need books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005140	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005141	search book having over 2 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005142	find book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005143	please enumerate 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005144	please enumerate books that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005145	i am looking to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005146	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005147	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005148	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005149	i want the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005150	get 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005151	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000005152	i need to find NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005153	get books that is 10 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005154	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005155	which are the QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000005156	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005157	i would like to know the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005158	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005159	search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005160	find book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005161	i want to find one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005162	i need to retrieve NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005163	get book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005164	please get book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005165	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005166	i would like the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005167	please search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005168	please enumerate book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000005169	i need to find books which is 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005170	i want to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005171	i am looking for book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005172	i would like books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005173	which are the zero -star books having 12 or less number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000005174	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005175	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005176	list book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005177	i need books having number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005178	i need book with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005179	find book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005180	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005181	i would like books which have number of pages 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005182	i would like to search books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005183	i would like 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005184	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005185	what are the book with zero number of ratings and over 0 number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:numberOfPages:Number >= 0 => notify
S5000005186	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005187	please retrieve book having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000005188	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005189	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005190	list 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005191	tell me what is the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005192	which are the 5 page book which have zero or below number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 and param:numberOfPages:Number == 5 => notify
S5000005193	i need book having number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000005194	search for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005195	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005196	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005197	i would like to know the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005198	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005199	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005200	retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005201	tell me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005202	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005203	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005204	what are the book without number of ratings and over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:numberOfPages:Number >= 0 => notify
S5000005205	find the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005206	tell me what is the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005207	please enumerate 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005208	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005209	please get books which have isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005210	find one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005211	i want 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005212	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005213	get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005214	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005215	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005216	i want books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005217	what books have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000005218	i would like to search book which have over 6 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000005219	what is the book edition of book ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005220	show me what 's the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005221	how many awards does the books which has the lowest number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005222	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005223	retrieve books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005224	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005225	i would like books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000005226	i would like to search for 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005227	please enumerate book that are 0 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005228	i need to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005229	i want 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005230	please search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000005231	get book with fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000005232	i need to get books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005233	i am looking for book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000005234	enumerate book which have rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005235	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005236	i would like the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005237	i am looking for book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005238	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005239	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005240	i want book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005241	i would like books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005242	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005243	get books having number of reviews smaller than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000005244	search for book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005245	how many awards in the books with the lowest number of reviews ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005246	what book get larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005247	please enumerate book that have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005248	i need to search book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005249	i want book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005250	what are the 0 -star book without more than 5 awards ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 5 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000005251	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005252	please search for book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005253	please search for book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005254	i want 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005255	find books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005256	list books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005257	i am looking for books that have larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005258	please retrieve book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005259	what are 10 page book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 10 => notify
S5000005260	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005261	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005262	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005263	i need to get books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000005264	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005265	search the QUOTED_STRING_0 with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005266	which book have number of reviews at least 3 and are NUMBER_0 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005267	i need to find book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005268	what are the books which have number of reviews one and have 10 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 and param:numberOfPages:Number == 10 => notify
S5000005269	i need book that have number of ratings not less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005270	i am looking to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005271	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005272	find book with rating one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005273	i am looking to search 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005274	find book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005275	i want book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005276	i need to find books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005277	retrieve the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005278	which book have over zero number of reviews and is 8 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005279	i would like books which have rating at most 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005280	i need the link and rating of the book which has the minimum number of pages	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000005281	i need to search for QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005282	please enumerate books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005283	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005284	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005285	i need the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005286	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005287	i need books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005288	get 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005289	show me what is the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005290	what are books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005291	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005292	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005293	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005294	please search for books that are 12 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005295	enumerate books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005296	which books get zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005297	i would like book with lower rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005298	i need books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005299	search for book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005300	i would like to get books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005301	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005302	i need the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005303	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005304	i want 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005305	please enumerate books having 3 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000005306	list NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005307	what book is 8 -star and have number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number >= 11 => notify
S5000005308	list 8 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005309	retrieve books having number of pages not less than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005310	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005311	i need books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005312	i would like to find books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005313	please enumerate 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000005314	i need book with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005315	please search for book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005316	search for books with 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005317	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005318	find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005319	i would like books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005320	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005321	please list books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005322	i want to search for books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005323	i am looking for book having rating 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000005324	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005325	i am looking for book with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005326	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005327	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005328	i am looking for the QUOTED_STRING_0 which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005329	which are NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005330	i would like to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005331	i am looking for book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005332	i need to search books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000005333	i would like to search 9 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005334	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005335	how many awards does the books which has the lowest number of pages have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005336	how many awards are there in the books which has the minimum rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005337	please find book having book edition QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005338	what is the QUOTED_STRING_0 with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005339	get 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005340	retrieve books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005341	i need to retrieve one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005342	how many awards are there in the books which has the minimum rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005343	please enumerate books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000005344	search for book with number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000005345	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005346	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005347	list books that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005348	show me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005349	get book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005350	which book have 1 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005351	get book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005352	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005353	i need books which have 12 or higher number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005354	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005355	i am looking for books having number of pages 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005356	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005357	i want books having number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005358	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000005359	what is the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000005360	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005361	search books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005362	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005363	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005364	search for books having larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005365	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005366	i need to find book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005367	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005368	get 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005369	get book which have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005370	get book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005371	search one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005372	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005373	i would like book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000005374	i want to find book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005375	find book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005376	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005377	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005378	find book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005379	search for book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005380	i need to get books with no more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000005381	please retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005382	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005383	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005384	get books that have over 10 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005385	search book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005386	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005387	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005388	get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005389	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005390	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005391	i am looking to search for books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005392	i need to get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005393	tell me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005394	please find 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005395	i am looking for the QUOTED_STRING_0 with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005396	please list book that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005397	get book with over NUMBER_0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005398	get books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005399	i want to retrieve 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005400	retrieve book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005401	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005402	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005403	please find books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005404	i need to search book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005405	i want book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005406	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005407	please search 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005408	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005409	i want to find books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005410	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005411	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005412	what are books having no fewer than one award ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000005413	i need 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005414	show me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005415	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005416	what are 10 -star 3 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 3 => notify
S5000005417	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005418	how many awards are there in the book with the maximum number of ratings	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005419	i would like to search for book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005420	i need to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005421	i need book with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005422	which are book having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005423	get books that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005424	what are book with number of pages not less than 0 and number of reviews 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 and param:numberOfPages:Number >= 0 => notify
S5000005425	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005426	please find books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000005427	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005428	i would like 9 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000005429	i am looking for book having over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005430	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005431	i need books which have number of ratings 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000005432	search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005433	i would like book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005434	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005435	i need NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005436	what are the book having over one number of reviews that is 5 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number == 5 => notify
S5000005437	retrieve 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005438	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005439	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005440	get books which have number of ratings 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000005441	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005442	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005443	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000005444	get book that have fewer than 1 award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000005445	i want book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005446	get books with language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005447	get book with number of pages not more than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005448	get book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005449	i want to search books which are 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005450	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005451	search book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005452	i am looking for book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005453	i would like one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005454	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005455	i want book which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005456	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005457	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005458	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000005459	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005460	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005461	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005462	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005463	find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005464	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005465	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005466	i want to find 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005467	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005468	find the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005469	which are the 12 -star book isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005470	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005471	i need book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005472	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005473	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005474	show me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005475	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005476	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005477	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005478	retrieve book which have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005479	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000005480	i am looking to search for books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005481	tell me what 's the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005482	i am looking for the QUOTED_STRING_0 with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005483	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005484	i need one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005485	i want books having rating smaller than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 0 => notify
S5000005486	search book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000005487	retrieve book with number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005488	get NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005489	i want to find book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005490	search NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005491	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005492	i would like to search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005493	what are QUOTED_STRING_0 's QUOTED_STRING_1	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000005494	i am looking for books that have larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005495	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005496	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005497	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005498	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000005499	retrieve the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005500	i would like to retrieve book without or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005501	i want book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005502	i am looking for book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005503	please retrieve books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005504	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005505	i am looking for 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005506	what are book with number of pages 8 that are 0 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 8 => notify
S5000005507	i need book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005508	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005509	i want book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005510	i would like to get books having fewer than 9 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000005511	get book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005512	i want to retrieve book with 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005513	what QUOTED_STRING_0 have larger number of ratings than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000005514	please search for book having 10 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005515	get books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005516	i am looking for books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005517	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005518	what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005519	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005520	what are books having the isbn containing either QUOTED_STRING_0 or QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String in_array~ [ QUOTED_STRING_0 , QUOTED_STRING_1 ] => notify
S5000005521	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005522	how many awards does the books with the least awards have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000005523	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005524	i would like to know the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005525	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005526	i am looking for books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005527	tell me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005528	search book having 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005529	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005530	i would like to get book having number of ratings 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000005531	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005532	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005533	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005534	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005535	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005536	please find book that have 10 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000005537	give me the url of person	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005538	search 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005539	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005540	i want to search for book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005541	what are books having rating 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000005542	i am looking for books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005543	get book which have rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005544	search book having 11 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005545	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000005546	i need to get books with no more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000005547	which book have number of ratings lower than 10 and is 7 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:numberOfPages:Number == 7 => notify
S5000005548	retrieve books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005549	i want books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000005550	i need book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005551	what are the 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005552	get book which have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005553	get books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005554	get book which have 7 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005555	i am looking for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005556	i need to search books that have rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000005557	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000005558	i need NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005559	search 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005560	get book with over NUMBER_0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005561	i would like 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005562	find books that have rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005563	i am looking for books which have number of ratings less than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005564	give me the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005565	get books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000005566	find book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005567	get book with over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005568	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005569	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005570	please retrieve books which have number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005571	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005572	please search book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005573	search for books with 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005574	which QUOTED_STRING_0 has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005575	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005576	i need to know the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005577	i want to search for book with 12 or less number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000005578	which are books that have rating at most 8 and have 3 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 and param:numberOfPages:Number == 3 => notify
S5000005579	please get books which have isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005580	which are books which have zero number of ratings , with number of reviews zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000005581	find the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005582	tell me what 's the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005583	i want the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005584	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000005585	what books have smaller number of ratings than 5 and are 9 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000005586	please list books with number of pages 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005587	get books with greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005588	i want to get books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005589	get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005590	which book have one or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005591	what are 3 -star 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number == 9 => notify
S5000005592	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005593	please find 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005594	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005595	tell me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005596	how many awards do the book which has the maximum number of reviews have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005597	i would like book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005598	what are the 10 -star book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005599	enumerate books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000005600	get books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005601	i would like book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005602	i want 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005603	get books having 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005604	i want book which are NUMBER_0 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005605	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005606	i need book with rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005607	i want to search for book with number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005608	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005609	i need books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005610	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005611	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005612	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005613	please list books that have higher number of reviews than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005614	enumerate 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005615	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005616	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005617	i would like to know the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005618	enumerate book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005619	i need book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005620	what are 6 page 1 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 6 => notify
S5000005621	retrieve books having number of pages not less than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005622	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005623	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005624	retrieve book that have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000005625	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005626	list 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005627	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005628	i need to find books which is 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005629	i would like to search for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005630	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005631	which are books which have zero number of ratings , with number of reviews zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.reviewCount:Number == 0 => notify
S5000005632	what are QUOTED_STRING_0 which is 0 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000005633	what are the NUMBER_0 -star book that have number of pages not less than 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number >= 4 => notify
S5000005634	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005635	get 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000005636	i would like book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000005637	i would like book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005638	i need to find books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005639	please get book which have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005640	i want 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005641	i need to search for book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005642	i am looking for books that have 7 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005643	retrieve books which have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005644	i am looking to find book which is 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005645	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005646	show me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005647	please enumerate books with rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005648	get book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005649	find book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005650	search for the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005651	how many awards are there in the books which has the minimum rating	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005652	how many awards do the book which has the lowest number of ratings have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005653	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005654	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005655	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005656	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005657	what are 1 -star 2 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 2 => notify
S5000005658	search for book that have rating not more than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S5000005659	search for books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005660	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005661	what are the book with number of reviews at least 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005662	search the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005663	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005664	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005665	what are the 10 page NUMBER_0 -star books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 10 => notify
S5000005666	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005667	which are the book that have rating higher than 9 and have 9 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:numberOfPages:Number == 9 => notify
S5000005668	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005669	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005670	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005671	find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005672	search for 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000005673	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005674	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005675	find books with 4 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000005676	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005677	get books having larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005678	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005679	how many awards are there in the books with the minimum number of ratings	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005680	what are QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000005681	find books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005682	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005683	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005684	i would like to find books having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005685	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005686	i want book which have 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005687	i am looking for 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005688	which books get number of pages equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000005689	i am looking for books which are 8 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005690	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005691	i would like to get books which have number of ratings less than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005692	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005693	please list 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005694	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005695	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005696	i am looking to retrieve 9 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005697	i would like books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005698	search book having 11 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000005699	i would like to retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005700	i am looking for the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005701	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005702	i want book that have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000005703	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000005704	i need book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005705	what are the book that have fewer than zero awards , with number of pages equal to 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 and param:numberOfPages:Number == 0 => notify
S5000005706	i want to search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005707	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005708	get NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005709	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005710	get book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005711	i want to get books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005712	i would like to know the book edition and image of the book with the lowest number of ratings .	now => [ param:bookEdition:String , param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000005713	get book which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005714	i want to retrieve book which have 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005715	get 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005716	get book that have fewer than zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000005717	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000005718	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005719	i am looking to search for 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005720	i need book with over 11 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005721	i would like to know the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005722	search for book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005723	i need book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005724	please enumerate 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000005725	retrieve book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000005726	i want to search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005727	retrieve books having number of pages not more than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005728	i want book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005729	i am looking for books which are 8 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005730	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000005731	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005732	list 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005733	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005734	tell me the language and number of ratings of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000005735	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005736	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005737	i would like to search for books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005738	find the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005739	i need to find zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005740	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005741	please retrieve book having 9 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000005742	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005743	i would like book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005744	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005745	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005746	get book having number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000005747	show me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005748	i want books with number of ratings 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000005749	get books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005750	i need 9 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005751	i would like to search for books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000005752	please list 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000005753	i want to retrieve 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000005754	get books which have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000005755	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005756	what books get lower number of pages than 8 and over 9 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:numberOfPages:Number <= 8 => notify
S5000005757	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005758	i need book with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005759	i need to retrieve 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005760	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005761	show me what 's the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005762	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005763	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005764	i am looking to get 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005765	find the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005766	what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005767	search for book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005768	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005769	tell me what is the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005770	tell me what is the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005771	find the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005772	give me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005773	i want to find book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000005774	i want book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005775	i am looking for 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005776	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005777	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005778	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005779	which are 12 page book which have rating higher than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:numberOfPages:Number == 12 => notify
S5000005780	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005781	i need 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005782	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005783	i am looking for books which have 12 or higher number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000005784	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005785	please search for books that are 12 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005786	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005787	i need to search for books with 8 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000005788	list books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005789	i would like to search for book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000005790	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005791	please get books which have rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000005792	i need book with over 11 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000005793	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005794	i am looking for books which have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005795	get book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005796	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000005797	i need to search for books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000005798	get the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005799	i am looking for book having 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005800	retrieve the QUOTED_STRING_0 with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005801	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000005802	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005803	get books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000005804	search books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000005805	i would like books with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005806	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005807	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005808	tell me what 's the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005809	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000005810	what books is in QUOTED_STRING_0 and have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005811	i am looking to search books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005812	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005813	i need to retrieve NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005814	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005815	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005816	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005817	find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005818	i would like to retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005819	what books have 4 pages and number of reviews equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 7 and param:numberOfPages:Number == 4 => notify
S5000005820	get books which have number of ratings higher than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005821	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005822	what are the 3 page books that have over 9 rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:numberOfPages:Number == 3 => notify
S5000005823	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000005824	i need to search for books that have less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005825	list books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005826	i am looking for books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000005827	i am looking to retrieve QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005828	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000005829	i would like 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005830	retrieve books having isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000005831	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000005832	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000005833	get books which have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000005834	get books which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000005835	find books which have number of ratings higher than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005836	i would like 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005837	i need to retrieve 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005838	i need the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005839	i would like book having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005840	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000005841	find the QUOTED_STRING_0 with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005842	i need to retrieve books that have greater number of ratings than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005843	tell me what 's the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005844	show me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005845	get book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000005846	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005847	list books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005848	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005849	find the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005850	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005851	enumerate books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005852	i need to search for book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000005853	search for books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000005854	what books is in QUOTED_STRING_0 and have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005855	please list book with number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005856	i need to search for book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000005857	which are the 6 page zero -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 6 => notify
S5000005858	i am looking for 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000005859	what are the books that have higher number of ratings than zero and are 10 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:numberOfPages:Number == 10 => notify
S5000005860	i need book with one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005861	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005862	search book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005863	get books having 9 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000005864	please search for 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005865	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005866	get books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005867	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000005868	i need to search for books that have less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005869	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005870	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005871	retrieve books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005872	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005873	i am looking to search book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000005874	i would like book that have lower number of reviews than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000005875	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005876	what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005877	search for books which have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005878	i would like book that have number of reviews larger than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005879	please enumerate 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005880	i want to search for book which have 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000005881	what is the number of pages of book ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005882	i am looking for books which have NUMBER_0 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005883	get book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005884	search for books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005885	i need to know the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005886	i would like books having rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000005887	enumerate books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005888	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000005889	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000005890	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005891	retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005892	what are books with 9 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005893	i need to retrieve books that have greater number of ratings than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000005894	search for books which have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000005895	i want books with 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005896	please search book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000005897	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000005898	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005899	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005900	i would like to search for books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000005901	i am looking for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005902	i want to get books with 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000005903	i would like book with over one rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005904	i need to find books which is 3 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000005905	please search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005906	how many awards are there in the books with the highest number of reviews	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000005907	i would like the QUOTED_STRING_0 which has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005908	i am looking for book which have number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000005909	what are book which have number of pages 2 and with number of ratings 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:numberOfPages:Number == 2 => notify
S5000005910	get book which have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005911	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005912	what books have greater number of pages than one and larger rating than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:numberOfPages:Number >= 1 => notify
S5000005913	how many awards in the books with the tiniest number of awards	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000005914	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005915	which books get number of reviews at least zero and are 0 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000005916	show me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005917	i am looking for books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005918	i would like to search for zero page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005919	get book having number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000005920	which books get zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005921	i would like the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005922	which are book with number of reviews 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000005923	i would like to search for zero page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005924	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000005925	i am looking to retrieve book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000005926	get books with number of ratings 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000005927	what are the zero -star 1 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 1 => notify
S5000005928	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005929	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000005930	i need to find NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005931	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005932	which are book having lower number of ratings than one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000005933	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000005934	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000005935	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000005936	retrieve books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000005937	list 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000005938	i would like the QUOTED_STRING_0 with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005939	search for 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000005940	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005941	find books that have 4 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000005942	i need books which have rating 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000005943	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000005944	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005945	i need 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005946	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005947	i need books which have 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000005948	retrieve books which have zero or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000005949	enumerate books with language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000005950	search for books which have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000005951	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005952	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000005953	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005954	find 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000005955	please get book which are NUMBER_0 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005956	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005957	i want to retrieve books which have over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005958	get books which have number of ratings higher than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000005959	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005960	find the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000005961	please search for books having number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000005962	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005963	which books get 12 or higher number of ratings and are NUMBER_0 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000005964	please get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000005965	i want books having larger rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000005966	search book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000005967	which QUOTED_STRING_0 have number of pages lower than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 2 => notify
S5000005968	i would like to know the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005969	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005970	i am looking for 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000005971	i am looking for books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000005972	search for books that have number of reviews 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 2 => notify
S5000005973	which books have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005974	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005975	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005976	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005977	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000005978	list book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000005979	what are 10 -star zero page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 0 => notify
S5000005980	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000005981	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000005982	search for books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000005983	i would like 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000005984	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000005985	get books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000005986	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000005987	retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000005988	search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000005989	get books with over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000005990	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005991	search for books which have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000005992	which are the zero -star book with greater number of ratings than 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000005993	i am looking for books that have number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000005994	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000005995	get NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000005996	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000005997	what are books with QUOTED_STRING_0 in their book edition which is one -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000005998	which QUOTED_STRING_0 has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000005999	tell me what is the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006000	how many awards do the books with the lowest number of reviews have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006001	i want books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006002	please search books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006003	i am looking to search for 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006004	i need books which have rating 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000006005	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006006	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006007	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006008	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006009	get book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006010	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006011	i would like to retrieve books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006012	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006013	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006014	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006015	list book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006016	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006017	which are QUOTED_STRING_0 with 9 or lower number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 9 => notify
S5000006018	i would like 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006019	get 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006020	i would like books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006021	get 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000006022	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006023	i want books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006024	which QUOTED_STRING_0 get number of pages 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 6 => notify
S5000006025	get books that have higher number of reviews than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006026	i am looking to find book with number of reviews lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006027	what books have 4 pages and number of reviews equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 7 and param:numberOfPages:Number == 4 => notify
S5000006028	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006029	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006030	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006031	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006032	i would like book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006033	please search for book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006034	get books which have NUMBER_0 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006035	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006036	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006037	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006038	which books are 4 page and get smaller number of ratings than 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 4 => notify
S5000006039	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006040	get book having 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006041	i am looking for book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006042	retrieve 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006043	i would like books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006044	i want book without pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006045	show me what 's the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006046	i would like 11 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006047	i want books which have rating at most 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006048	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006049	i want 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006050	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006051	please find books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006052	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006053	get books with over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006054	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006055	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006056	which are the 7 -star 11 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:numberOfPages:Number == 11 => notify
S5000006057	i need book that have zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006058	i would like to know the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006059	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006060	retrieve 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006061	find 12 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006062	i would like book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006063	retrieve books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006064	what are QUOTED_STRING_0 with awards QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_1 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000006065	give me the number of reviews of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006066	i am looking for the QUOTED_STRING_0 which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006067	how many awards does the books with the highest number of reviews have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006068	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006069	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006070	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006071	get 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006072	what are the 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006073	please retrieve book having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000006074	i need book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006075	i am looking to search book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006076	get books which have higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006077	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006078	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006079	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006080	get books having number of pages not less than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006081	retrieve book which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006082	i would like books with 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006083	what is the link and isbn of the book with the minimum number of pages ?	now => [ param:isbn:String , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006084	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006085	get book with higher number of ratings than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006086	i want books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006087	i want QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006088	tell me the language and number of ratings of the books which has the minimum rating	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006089	which QUOTED_STRING_0 have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 2 => notify
S5000006090	get book that have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006091	i need to find zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006092	get books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006093	how many awards do the books with the lowest number of ratings have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006094	i want to find books having number of reviews smaller than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006095	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006096	i am looking for NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006097	search for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006098	i am looking for book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000006099	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006100	i want book that have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000006101	get book having number of ratings less than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006102	what is the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006103	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006104	which QUOTED_STRING_0 get 7 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000006105	i want 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006106	please enumerate books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006107	search books having 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006108	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006109	retrieve books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006110	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006111	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006112	i would like book which have number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000006113	retrieve book that have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006114	tell me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006115	i would like book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000006116	i need to search for book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006117	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006118	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006119	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006120	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006121	get book without fewer than 12 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000006122	i want to search books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006123	i am looking to retrieve zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006124	tell me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006125	what are the people of QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000006126	which books are 4 page and get smaller number of ratings than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 4 => notify
S5000006127	find book that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006128	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006129	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006130	i am looking for books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006131	i am looking to search for books which have zero or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006132	which are books with over 6 rating and number of reviews 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 and param:aggregateRating.reviewCount:Number == 7 => notify
S5000006133	please get books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000006134	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006135	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006136	please enumerate book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006137	which is the QUOTED_STRING_0 which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006138	get book with over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006139	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006140	get book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006141	i want books with rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006142	please search for book having 10 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006143	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006144	i want books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006145	i want book that have 11 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000006146	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006147	how many awards are there in the books with the lowest number of ratings ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006148	search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006149	i would like the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006150	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006151	what are the books which have over one number of reviews , with rating one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006152	i need book having number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006153	what are the 3 -star book which have number of reviews lower than one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006154	please search for 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006155	retrieve books that have higher number of reviews than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006156	please retrieve books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006157	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006158	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006159	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006160	i need book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006161	i am looking to get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006162	i want to know the number of awards of books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006163	i would like books which have 9 or below number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006164	find book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006165	show me what is the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006166	i want 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006167	which are 8 -star 0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number == 0 => notify
S5000006168	find NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006169	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006170	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006171	i need to search for 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006172	i need to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006173	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006174	i am looking to retrieve 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006175	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006176	what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006177	get books which have over 1 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006178	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006179	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006180	get book which have 7 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000006181	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006182	i need the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006183	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006184	i am looking for books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006185	retrieve book that have higher rating than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006186	i want books with 11 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006187	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006188	what is the language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006189	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006190	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006191	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006192	i need books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006193	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006194	search book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006195	i would like to retrieve book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006196	i am looking to retrieve books that have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006197	enumerate books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006198	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006199	get 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006200	enumerate books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006201	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006202	i want book that have fewer than 1 award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006203	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006204	get book that have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006205	i am looking to retrieve 9 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006206	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006207	which books have over one number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006208	search for books with 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006209	please list 4 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006210	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006211	retrieve the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006212	i need book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006213	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006214	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006215	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006216	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006217	get 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006218	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006219	please search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006220	i need books which have smaller number of reviews than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000006221	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006222	show me what 's the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006223	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006224	enumerate QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006225	list books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006226	please search for book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006227	i am looking for books which have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006228	i would like to retrieve 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006229	i need book that have 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006230	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006231	get book that have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006232	list 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006233	please enumerate books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006234	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006235	i need book with one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006236	i want to find book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006237	i would like to retrieve books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006238	i am looking to search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006239	list books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006240	get 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006241	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006242	retrieve books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006243	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006244	get books that have rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006245	enumerate 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006246	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006247	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006248	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006249	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006250	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006251	which are 8 -star 0 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number == 0 => notify
S5000006252	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006253	i am looking for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006254	get books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006255	i am looking for book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000006256	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006257	what books get over 0 number of pages and rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 and param:numberOfPages:Number >= 0 => notify
S5000006258	get book with number of reviews 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000006259	get books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006260	which book get rating 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006261	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006262	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006263	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006264	search books that have 1 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006265	i need the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006266	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006267	what is the number of reviews of book	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006268	please enumerate 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006269	please search book that have isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006270	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006271	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006272	i want books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006273	get books that have number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006274	search for the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006275	which book have number of ratings 9 and are 0 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:numberOfPages:Number == 0 => notify
S5000006276	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006277	what is the number of awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006278	i would like to search for book having rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006279	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006280	please enumerate book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000006281	search for books that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006282	tell me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006283	tell me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006284	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006285	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006286	i am looking for the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006287	i am looking for books with less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006288	search books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006289	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006290	what book is 7 -star and get less number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:aggregateRating.reviewCount:Number <= 2 => notify
S5000006291	show me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006292	enumerate NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006293	please retrieve 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006294	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006295	please enumerate books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006296	i want to search books that have greater number of ratings than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006297	get book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006298	search 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006299	i need books having larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000006300	i want book which are NUMBER_0 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006301	what book have NUMBER_0 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006302	which books get greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006303	what are the book having over one number of reviews that is 5 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number == 5 => notify
S5000006304	i need book with one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006305	i would like book that have lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000006306	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006307	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006308	i need to retrieve books that are NUMBER_0 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006309	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006310	list books with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006311	find book that have number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006312	tell me the language and number of ratings of the books which has the minimum rating .	now => [ param:aggregateRating.ratingCount:Number , param:inLanguage:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006313	please list 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006314	retrieve books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006315	i want books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006316	i am looking to get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006317	get books that have number of reviews 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000006318	search books without fewer than 12 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000006319	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006320	get books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006321	what are book that have lower number of reviews than 8 and with rating equal to 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 and param:aggregateRating.reviewCount:Number <= 8 => notify
S5000006322	i would like book with over one rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006323	get books having 9 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000006324	get 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006325	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006326	i want the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006327	get book that have fewer than zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000006328	i would like books which have number of pages 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000006329	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006330	i would like books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006331	enumerate books which have 10 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006332	retrieve books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006333	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006334	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006335	i need to search for books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006336	i need the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006337	i am looking for books with 12 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000006338	what are book with number of pages not less than 0 and number of reviews 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 and param:numberOfPages:Number >= 0 => notify
S5000006339	i am looking for book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006340	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006341	i want to search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006342	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006343	i am looking for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006344	search book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006345	get books having 9 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000006346	i need to search for books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006347	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006348	get 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006349	what QUOTED_STRING_0 gets the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006350	get book which have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006351	give me the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006352	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006353	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006354	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006355	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006356	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006357	i need books that have rating 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000006358	i would like books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000006359	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006360	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006361	which are the book that have over 8 number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006362	please enumerate 2 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006363	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006364	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006365	get books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006366	i need the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006367	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006368	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006369	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006370	i am looking to retrieve book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006371	tell me what 's the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006372	i need books that have higher number of reviews than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006373	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006374	i would like to retrieve 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006375	i am looking to retrieve book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006376	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006377	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006378	i need to search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006379	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006380	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006381	which books have number of pages 8 and rating equal to 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 8 => notify
S5000006382	what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006383	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006384	get 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006385	list book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006386	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006387	show me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006388	i want the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006389	what are books that have rating at most 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006390	please retrieve books which have number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006391	what book have rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006392	i am looking to search for books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006393	please list 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006394	tell me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006395	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006396	which are QUOTED_STRING_0 having NUMBER_0 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000006397	i would like book that have rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006398	retrieve book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006399	i need to find NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006400	list book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006401	i am looking for book with no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006402	i need books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006403	i would like to search book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006404	get book with fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006405	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006406	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006407	please enumerate books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006408	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006409	retrieve books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006410	retrieve books having isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000006411	tell me the number of reviews of book .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006412	please enumerate book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006413	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006414	what is the language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006415	i need book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006416	retrieve books having number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006417	get book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006418	i would like book with smaller number of ratings than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000006419	what are 3 page books that have rating equal to 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 and param:numberOfPages:Number == 3 => notify
S5000006420	please list book that have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006421	which are the books with smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006422	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006423	search 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006424	i would like books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006425	please list books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006426	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000006427	i would like books having rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006428	show me the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006429	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006430	i need to get book that have less number of reviews than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000006431	please enumerate book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006432	get 11 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006433	i am looking to find book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006434	give me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006435	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006436	what books get 10 or more number of pages and is 3 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number >= 10 => notify
S5000006437	i want book which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006438	get books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006439	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006440	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006441	retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006442	i am looking for QUOTED_STRING_0 book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006443	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006444	find books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006445	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006446	give me the number of reviews of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006447	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006448	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006449	what are 11 page QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 11 => notify
S5000006450	please enumerate 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006451	i would like 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006452	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006453	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006454	i need to know the book edition and link of the books which has the highest number of ratings .	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006455	i need to find book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006456	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006457	i want the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006458	get books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006459	i want to search for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006460	i would like books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006461	search for books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006462	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006463	please list books which have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006464	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000006465	i need the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006466	i am looking for books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006467	i need the QUOTED_STRING_0 which has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006468	tell me what 's the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006469	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006470	search for book that have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000006471	get books which have rating less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006472	search for book with over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006473	how many awards in the books which has the minimum number of ratings ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006474	please enumerate books having 3 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000006475	i need to find book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006476	please search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006477	search for book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006478	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006479	search for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006480	get books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006481	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006482	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006483	list books which is in QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006484	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006485	which are the book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006486	i am looking for 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006487	give me the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006488	i need to find book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000006489	please enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006490	search for books having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006491	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006492	i would like to get books having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000006493	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006494	list 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006495	i am looking for the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006496	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006497	retrieve books that have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006498	i need 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000006499	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006500	i am looking for books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006501	retrieve book that have 0 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000006502	how many awards are there in the books with the lowest number of ratings ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000006503	i would like the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006504	which book have 1 or greater rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006505	search books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006506	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006507	what are book having rating 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006508	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006509	get books without fewer than 12 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000006510	find book having one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006511	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006512	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006513	get books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006514	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000006515	i want to search 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006516	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006517	i want to retrieve books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006518	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006519	i would like to search for 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006520	which are the QUOTED_STRING_0 which have number of reviews 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 2 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000006521	i am looking for books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006522	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006523	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006524	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006525	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006526	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006527	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006528	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000006529	i am looking for 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006530	i need NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006531	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006532	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006533	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006534	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006535	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006536	i need to find book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006537	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006538	search for books which have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006539	i want to get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006540	i need to retrieve NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006541	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006542	i would like book having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006543	which book is 0 page and have number of reviews 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 11 and param:numberOfPages:Number == 0 => notify
S5000006544	i want book which have 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006545	get book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000006546	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006547	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006548	i want books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006549	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006550	get one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006551	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006552	i am looking for book having rating higher than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006553	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006554	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006555	what are book having smaller rating than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006556	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006557	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006558	what is the isbn of book ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006559	i am looking for books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006560	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006561	i want to find books which have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000006562	retrieve 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000006563	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006564	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006565	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006566	get 9 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000006567	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006568	get books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006569	i am looking for the QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006570	enumerate books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006571	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006572	get books which have number of ratings higher than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006573	i want book that is one -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006574	enumerate 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006575	i would like 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000006576	get NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006577	retrieve books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006578	get 4 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006579	i am looking for books with number of ratings larger than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000006580	which are the books having rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006581	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006582	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006583	i want the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006584	enumerate book with number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006585	tell me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006586	get book that have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006587	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006588	i need NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006589	enumerate books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006590	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006591	get books which have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000006592	tell me what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006593	please get 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006594	i need to get books without more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000006595	search books with NUMBER_0 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006596	retrieve the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006597	i need to retrieve book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006598	which are 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006599	i want book with number of pages 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006600	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006601	i need to get books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006602	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006603	i am looking to search book with number of reviews at least 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006604	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006605	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006606	please find books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000006607	i want book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006608	i am looking to search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006609	please search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006610	search books which have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000006611	what are 1 -star book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006612	search NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006613	get books that have number of ratings lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000006614	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006615	i need to search books having number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006616	i would like to get book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006617	i need to find books which is 3 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006618	i would like the QUOTED_STRING_0 with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006619	i would like to search books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006620	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006621	i would like books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006622	i need to retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006623	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006624	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006625	enumerate books which have 10 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006626	get book having number of ratings less than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006627	please list books having 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006628	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006629	i want 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006630	i would like books with number of ratings 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000006631	search for book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006632	i want books with number of ratings 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000006633	i need the link and rating of the book which has the minimum number of pages	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006634	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006635	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006636	i am looking to retrieve 9 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006637	i need the QUOTED_STRING_0 with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006638	i want book with number of reviews more than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000006639	which are book with over zero rating and number of reviews 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 and param:aggregateRating.reviewCount:Number == 11 => notify
S5000006640	i would like to search book which have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006641	i would like to retrieve book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006642	what are 11 -star book isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006643	list books which is in QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006644	what are the books which have greater number of pages than 2 and having 1 or below number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 and param:numberOfPages:Number >= 2 => notify
S5000006645	i need books that have higher number of reviews than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006646	i would like to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006647	i would like book that have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000006648	search the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006649	please enumerate books that have over 9 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006650	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006651	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006652	which are the book having NUMBER_0 pages and number of ratings equal to 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 11 and param:numberOfPages:Number == NUMBER_0 => notify
S5000006653	get books that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000006654	i need books which have 12 or higher number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000006655	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006656	i need to get 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006657	what is the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006658	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006659	i want to retrieve 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006660	please search for books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006661	i want to get book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006662	which are the book that have zero or greater number of ratings and are QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006663	get book having 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006664	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006665	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006666	i would like books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006667	what are book with rating equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000006668	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006669	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006670	i want book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000006671	i would like books that have number of reviews zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006672	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006673	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006674	get books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000006675	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006676	which are the book that have 8 pages and are 3 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number == 8 => notify
S5000006677	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000006678	i would like books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006679	i need to find book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000006680	enumerate books which have 10 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000006681	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006682	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006683	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006684	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006685	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006686	i would like books with number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000006687	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000006688	what are book that have 10 or lower number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006689	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006690	search for books which have no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000006691	list 8 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006692	please find book with fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000006693	i need books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006694	i would like to search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006695	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006696	search books with rating not more than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000006697	which are the book with 1 or above number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006698	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006699	enumerate book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006700	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006701	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006702	what is the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006703	i am looking for the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006704	search NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006705	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000006706	tell me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006707	i would like to know the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006708	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006709	get book with less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006710	search book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000006711	i want to retrieve 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006712	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000006713	get books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006714	i would like books having rating less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006715	i want book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006716	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006717	get 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006718	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006719	get books which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006720	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006721	i need the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006722	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006723	i want to get books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006724	i am looking for the QUOTED_STRING_0 with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006725	i would like book with over one rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006726	i am looking for the QUOTED_STRING_0 with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006727	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006728	which are QUOTED_STRING_0 that have number of pages zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 0 => notify
S5000006729	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006730	retrieve books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000006731	i would like 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006732	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006733	show me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006734	get one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006735	retrieve books having number of pages not more than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006736	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006737	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006738	i am looking for books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006739	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000006740	get 9 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000006741	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006742	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000006743	which are QUOTED_STRING_0 that have less number of ratings than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000006744	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006745	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006746	find books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006747	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006748	find books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006749	find the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006750	please search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006751	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006752	i would like books which have less number of ratings than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000006753	get books having 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000006754	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006755	i need book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006756	i would like to know the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006757	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006758	retrieve 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006759	i am looking to retrieve book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006760	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006761	get 4 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006762	search for 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000006763	search for books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000006764	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006765	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006766	search book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006767	what are the QUOTED_STRING_0 with greater number of ratings than 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000006768	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006769	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006770	please search for book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006771	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006772	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006773	search books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006774	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000006775	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006776	please search books which do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006777	please search books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006778	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000006779	i am looking for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006780	list book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006781	give me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006782	i want books having number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006783	tell me what is the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006784	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006785	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006786	i want to know the url and author of the books which has the highest number of ratings	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006787	i am looking to get books having number of pages not less than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006788	i need to find book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006789	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006790	i want books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006791	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006792	i want to search for books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006793	please enumerate 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006794	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000006795	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006796	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006797	get book that have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000006798	search for book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006799	what book have rating less than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000006800	find books that have rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006801	i need the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006802	which are book which have number of reviews 4 and having lower number of ratings than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:aggregateRating.reviewCount:Number == 4 => notify
S5000006803	please retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006804	which are book having isbn including QUOTED_STRING_0 and number of reviews 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 4 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006805	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006806	which book get fewer than 9 awards and less number of ratings than zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 and param:aggregateRating.ratingCount:Number <= 0 => notify
S5000006807	get 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006808	i would like book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000006809	i need book that have 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006810	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006811	find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000006812	search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006813	retrieve the QUOTED_STRING_0 with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006814	i need books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006815	find the QUOTED_STRING_0 which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006816	search NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006817	get books that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000006818	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006819	i am looking for books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006820	get 9 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000006821	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006822	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006823	i need to search books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000006824	find book having one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006825	please find 8 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000006826	i want books with number of ratings 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000006827	i am looking to search for books which have zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006828	please enumerate book having rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006829	which are the 5 -star zero page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number == 0 => notify
S5000006830	i am looking to search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006831	tell me what 's the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006832	search 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006833	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006834	i need to get books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000006835	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006836	i would like the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006837	get 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006838	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006839	search for books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000006840	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006841	i want book which have number of ratings one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000006842	search for book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006843	i would like 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006844	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006845	find books that have rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000006846	i am looking for books which have rating 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000006847	i am looking for book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006848	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006849	i would like to search books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006850	i want to search 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006851	i need books having number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006852	i want 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006853	i would like books that have less number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000006854	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006855	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000006856	find book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006857	i would like to search books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006858	i want to search for zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006859	i want books with number of ratings 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000006860	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006861	what books get number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000006862	i would like to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006863	i would like the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006864	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000006865	i want to know the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006866	i need books which have 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000006867	i would like to search books that is 1 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006868	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006869	please list books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006870	i would like book having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006871	i need books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006872	find book that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006873	show me what 's the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006874	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000006875	i would like the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006876	get book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006877	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000006878	retrieve books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000006879	retrieve books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000006880	i would like 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006881	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000006882	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000006883	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000006884	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006885	i am looking to find books having 4 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000006886	please enumerate 8 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000006887	i would like to find books which do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006888	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006889	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000006890	i want to search for book which have 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000006891	get books which have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000006892	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006893	i want book that is one -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000006894	i need books which have number of ratings 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000006895	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000006896	i would like book with lower rating than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000006897	find 6 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006898	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006899	i am looking to retrieve NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000006900	i want to get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000006901	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006902	tell me the isbn and author of the books with the lowest number of pages .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000006903	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006904	i need book with rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000006905	please enumerate books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006906	enumerate 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006907	i would like to find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000006908	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006909	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006910	i am looking for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006911	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000006912	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006913	retrieve book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006914	retrieve the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006915	please enumerate book having number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000006916	i would like books which have number of ratings more than 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000006917	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006918	get books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006919	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000006920	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006921	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006922	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006923	which are the book with 6 or more number of reviews and 11 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 and param:aggregateRating.reviewCount:Number >= 6 => notify
S5000006924	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000006925	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006926	i would like to know the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006927	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006928	i need book with higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000006929	how many awards does the books with the largest number of awards have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000006930	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006931	i am looking to retrieve QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006932	i need to search for books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006933	search for book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006934	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000006935	please search for books that are 12 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000006936	please enumerate books that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000006937	which book have number of ratings lower than 10 and is 7 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:numberOfPages:Number == 7 => notify
S5000006938	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006939	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000006940	i need book which is 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006941	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006942	please retrieve book with no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006943	i would like book having rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006944	i am looking to retrieve book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006945	what book get number of ratings lower than 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000006946	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000006947	what are the book which have number of ratings lower than 10 and with number of reviews 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000006948	i want to search 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006949	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000006950	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006951	get book which have greater number of ratings than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000006952	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000006953	what are the QUOTED_STRING_0 having 4 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 4 => notify
S5000006954	i want 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000006955	please get books which have rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006956	search for book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000006957	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006958	get books which have over 1 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000006959	retrieve the QUOTED_STRING_0 with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006960	retrieve book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000006961	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000006962	i want books which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000006963	search for books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006964	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006965	i am looking for book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006966	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000006967	what book get larger number of ratings than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000006968	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006969	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000006970	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006971	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006972	enumerate 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000006973	i want the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000006974	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006975	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000006976	i am looking for the QUOTED_STRING_0 which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000006977	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006978	get 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000006979	please enumerate books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000006980	i want to find books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000006981	search book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000006982	please list 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000006983	i am looking for books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000006984	what is the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000006985	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000006986	please enumerate books having higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000006987	which are the 5 page book which have zero or below number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 and param:numberOfPages:Number == 5 => notify
S5000006988	i would like book with over one rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000006989	i would like 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000006990	retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000006991	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000006992	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000006993	which are the 6 -star NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 and param:numberOfPages:Number == NUMBER_0 => notify
S5000006994	get book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000006995	list books that have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000006996	i would like books with number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000006997	i am looking to retrieve QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000006998	search books which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000006999	get book having number of reviews 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007000	i want to find books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007001	retrieve 7 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007002	i am looking to search books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007003	i want to retrieve books having 12 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007004	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007005	find the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007006	what book have number of reviews at least 1 and is 5 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007007	search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007008	please enumerate books having 3 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007009	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007010	search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007011	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007012	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007013	show me what 's the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007014	search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007015	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007016	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007017	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007018	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007019	get books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007020	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007021	i would like to know the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007022	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007023	what are the book having fewer than 1 award ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007024	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007025	find book that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007026	i would like to search 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007027	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007028	i want book without pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007029	i need books which have number of ratings 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000007030	search book with number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007031	show me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007032	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007033	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007034	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007035	get zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007036	what books get number of ratings zero and are 0 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000007037	find book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007038	list 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007039	list books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007040	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007041	which book get rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007042	i need to get 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007043	i am looking for books having number of pages 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000007044	please enumerate book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007045	what book is 12 page and get over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 and param:numberOfPages:Number == 12 => notify
S5000007046	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007047	search books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007048	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007049	which book have 9 pages and is 5 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number == 9 => notify
S5000007050	i am looking to get books which have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007051	get book which have 7 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007052	i am looking to search 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007053	which are the 7 page books isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 7 => notify
S5000007054	i need books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007055	retrieve books which have zero or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007056	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007057	i want to retrieve 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007058	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007059	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007060	i want books which have rating at most 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007061	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007062	please search books which do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007063	i am looking for the QUOTED_STRING_0 which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007064	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007065	i want to get book that have higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007066	search book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007067	i need the link of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007068	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007069	enumerate book with number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000007070	i want books having larger rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007071	i want to search for book which have 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000007072	i want book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007073	what are 6 page 1 -star books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 6 => notify
S5000007074	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007075	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007076	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007077	find the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007078	please search for books that are 12 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007079	what are the QUOTED_STRING_0 that have 4 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 4 => notify
S5000007080	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007081	how many awards does the books which has the lowest number of ratings have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007082	get book with higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007083	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007084	what are the zero -star 1 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 1 => notify
S5000007085	search book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007086	what are the 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007087	i need to find 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007088	list book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007089	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007090	i am looking to search for books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007091	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007092	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007093	get book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007094	i need the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007095	i want to know the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007096	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007097	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007098	i want the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007099	i need to find books which is 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007100	get books with 9 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007101	i would like books with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007102	i am looking to find books with 12 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000007103	i need one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007104	i want books with 5 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000007105	what is the isbn of book ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007106	i want books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007107	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007108	i would like book that have rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007109	i would like to search for books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007110	retrieve 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007111	please get book which are NUMBER_0 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007112	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007113	what is the url of book ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007114	search for book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007115	i want the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007116	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007117	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007118	which are the 9 -star book with 12 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000007119	how many awards in the QUOTED_STRING_0 ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) => notify
S5000007120	please list book with number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007121	i need to find book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007122	i want to search for books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007123	what books have over 0 number of reviews and less rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007124	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007125	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007126	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007127	search for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007128	please search books which do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007129	show me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007130	how many awards are there in the books which has the minimum rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007131	find book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007132	i want 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000007133	i want to search for book having rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007134	what books have number of pages smaller than one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007135	i am looking to get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007136	what books have book edition containing both QUOTED_STRING_0 and QUOTED_STRING_1 and is 11 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 and param:bookEdition:String =~ QUOTED_STRING_1 and param:numberOfPages:Number == 11 => notify
S5000007137	what is the language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007138	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007139	which are books that are 11 page and is 6 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 and param:numberOfPages:Number == 11 => notify
S5000007140	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007141	i would like the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007142	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007143	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007144	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007145	get book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000007146	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007147	i am looking to get 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007148	find the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007149	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007150	i want to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007151	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007152	search for NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007153	i want to find book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007154	i am looking for NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007155	retrieve book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007156	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007157	i need NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007158	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007159	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007160	please search for books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007161	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007162	i am looking to find books with 12 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000007163	what are books with QUOTED_STRING_0 in their book edition which is one -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007164	search for book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007165	i am looking for the QUOTED_STRING_0 with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007166	i want to find books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007167	retrieve books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007168	i need book which have higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007169	i would like to find books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007170	i need to search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007171	please enumerate books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007172	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000007173	i need to retrieve NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007174	get book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007175	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007176	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007177	search 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007178	get books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007179	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007180	which are QUOTED_STRING_0 of QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_1 ) join ( ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_0 ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000007181	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007182	get books having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007183	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007184	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007185	find book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007186	which are 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007187	search books which have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007188	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007189	i need one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007190	i need book with number of pages 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007191	get NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007192	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007193	i am looking for books having number of pages 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000007194	i want to find one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007195	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007196	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007197	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007198	which QUOTED_STRING_0 get number of pages 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 6 => notify
S5000007199	i would like to retrieve book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007200	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007201	get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007202	get book with lower rating than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007203	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007204	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007205	i need the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007206	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007207	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007208	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007209	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007210	search 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007211	please enumerate books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007212	retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007213	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007214	i need books which have 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007215	get book which have 7 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007216	please get books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007217	get books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007218	get book that have greater number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000007219	i want to search for books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007220	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007221	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007222	i need book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007223	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007224	enumerate books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007225	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007226	give me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007227	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007228	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007229	get book that have 12 or less number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000007230	retrieve book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007231	i would like to search for book with larger number of pages than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007232	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007233	please search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007234	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007235	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007236	get book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007237	tell me what is the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007238	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007239	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007240	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007241	i want 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007242	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007243	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007244	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007245	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007246	show me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007247	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007248	i would like to search book which have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007249	retrieve 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007250	i need the QUOTED_STRING_0 with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007251	what are books having number of ratings equal to 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000007252	i need to search for books that have less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007253	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007254	find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007255	how many awards does the book with the minimum number of pages have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007256	i would like to get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007257	i need book which have higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000007258	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007259	i would like to find books having smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007260	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007261	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007262	get books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007263	get 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007264	find books that have 4 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000007265	i want to search 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007266	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007267	please enumerate books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007268	please list one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007269	please list one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007270	i would like books which have less number of ratings than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000007271	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007272	i need book having lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007273	i want books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007274	please list book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000007275	get book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007276	i need NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007277	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007278	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007279	i need book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007280	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007281	i am looking for 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007282	please enumerate book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007283	i need books with number of ratings not more than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007284	i need book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007285	i want to retrieve book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007286	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007287	i am looking to search 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007288	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007289	i want books having larger rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000007290	i would like books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007291	i am looking for book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000007292	show me what 's the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007293	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007294	what book have book format hardcover and number of pages greater than 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover and param:numberOfPages:Number >= 3 => notify
S5000007295	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007296	tell me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007297	please find book having over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007298	get books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007299	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007300	find books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007301	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007302	enumerate books with language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007303	please list books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007304	how many awards are there in the books with the highest number of reviews ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007305	i want 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007306	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007307	i want books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007308	which are the book that have over 0 number of pages and have rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:numberOfPages:Number >= 0 => notify
S5000007309	get books which have higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007310	tell me what 's the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007311	i need 7 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007312	i need one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007313	i need one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007314	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007315	get NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007316	i would like book that have rating 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007317	i need book that have number of ratings not less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007318	find 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007319	i want books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007320	i need book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007321	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007322	search for the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007323	i need to search book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007324	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007325	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007326	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007327	how many awards does the books with the minimum rating have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007328	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007329	list book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007330	i want to search for zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007331	which are the book with smaller number of ratings than 1 which have number of pages equal to 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 2 => notify
S5000007332	get books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000007333	i want 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000007334	get book with less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007335	get books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007336	find book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007337	i am looking to get books which have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007338	i am looking to search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007339	i need to find books which is 3 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007340	i would like book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000007341	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007342	i want book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007343	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007344	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007345	tell me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007346	what QUOTED_STRING_0 get number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007347	i am looking for 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007348	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007349	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007350	i would like book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007351	retrieve book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007352	i want books with number of ratings 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000007353	search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007354	i need to know the book edition and link of the books which has the highest number of ratings	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000007355	enumerate 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007356	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007357	please retrieve NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007358	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007359	please enumerate books having 3 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007360	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007361	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007362	list book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007363	what are the book with over 11 number of reviews that have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 and param:numberOfPages:Number == 0 => notify
S5000007364	i want to retrieve book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007365	what are the book with over 11 number of reviews that have number of pages zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 and param:numberOfPages:Number == 0 => notify
S5000007366	how many awards do the books with the lowest number of reviews have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007367	i want book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007368	please find book with fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007369	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007370	get books with over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007371	i am looking for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007372	i would like books that have number of reviews zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007373	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007374	find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000007375	i am looking for book having NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007376	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007377	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000007378	i am looking to retrieve book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007379	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007380	i am looking to get 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007381	which are books isbn QUOTED_STRING_0 that have rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007382	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007383	please find 8 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000007384	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007385	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007386	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007387	i want 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007388	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007389	what is the isbn of book ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007390	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007391	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007392	search for NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007393	get book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007394	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007395	please list books having 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007396	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007397	which QUOTED_STRING_0 are 1 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007398	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007399	i am looking for books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007400	retrieve books with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007401	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007402	enumerate book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007403	list book that have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007404	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007405	enumerate book with number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000007406	i would like 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007407	what QUOTED_STRING_0 have number of reviews smaller than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007408	what book get more than 7 awards and are 9 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 7 and param:numberOfPages:Number == 9 => notify
S5000007409	retrieve the QUOTED_STRING_0 with the smallest number of awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007410	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007411	please enumerate book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007412	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007413	get book with number of reviews 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000007414	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007415	i am looking to search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007416	get book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007417	what is the url of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007418	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007419	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000007420	i want book that have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000007421	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007422	i am looking for books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007423	get book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007424	tell me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007425	i need book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007426	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007427	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007428	which are 8 -star 0 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number == 0 => notify
S5000007429	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007430	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007431	what is the link of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007432	i am looking for QUOTED_STRING_0 book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007433	get books with rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007434	search books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007435	show me what is the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007436	please enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007437	i would like books which have higher rating than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007438	what are the book that have number of reviews 3 and are 4 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:aggregateRating.reviewCount:Number == 3 => notify
S5000007439	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007440	i need books which have rating 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000007441	i need NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007442	i would like to search books that is 1 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007443	retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007444	i am looking to search for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007445	please search for book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007446	i am looking to find books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007447	which books have 9 or below number of reviews and 4 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 and param:numberOfPages:Number == 4 => notify
S5000007448	i need to search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000007449	i want to find book having 10 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000007450	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007451	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007452	please enumerate 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007453	search 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007454	i am looking to find books having 4 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000007455	i need to get books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007456	please list 4 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007457	list book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007458	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000007459	i want book which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007460	find books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007461	retrieve the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007462	i want books with 5 or greater number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000007463	what books get zero or below number of reviews and is 11 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 and param:numberOfPages:Number == 11 => notify
S5000007464	i am looking to retrieve QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007465	i am looking for books that have rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007466	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007467	i am looking to retrieve books that have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007468	i want book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007469	i am looking for the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007470	show me the book format and language of the books with the lowest number of ratings	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:inLanguage:String ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000007471	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007472	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007473	what are books having number of ratings equal to 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 8 => notify
S5000007474	i need to get books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007475	show me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007476	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007477	i want to get books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007478	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007479	what books get higher number of pages than 0 and are zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number >= 0 => notify
S5000007480	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007481	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007482	show me what 's the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007483	which books have number of ratings equal to zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007484	i need NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007485	i want to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007486	what is the number of reviews of book ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007487	retrieve books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007488	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007489	i am looking for books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007490	i need to find book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007491	i would like books that have less number of pages than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000007492	search book having 11 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007493	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007494	i would like to get books with rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007495	i need to search for book that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000007496	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007497	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007498	give me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007499	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000007500	search books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000007501	what are book with number of pages 8 that are 0 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 8 => notify
S5000007502	what is the url of book ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007503	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007504	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007505	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007506	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007507	i am looking for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007508	get books that have number of ratings larger than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000007509	search 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007510	i am looking to search for 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000007511	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007512	what books have number of pages less than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000007513	get books which have NUMBER_0 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007514	please get books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007515	what books get either QUOTED_STRING_0 or QUOTED_STRING_1 in their awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 or param:award:Array(String) contains~ QUOTED_STRING_1 => notify
S5000007516	i would like book which are NUMBER_0 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007517	what is the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007518	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007519	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007520	i need the QUOTED_STRING_0 with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007521	retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007522	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007523	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007524	find books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007525	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007526	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007527	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007528	get books having 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007529	what are the QUOTED_STRING_0 that have higher rating than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007530	search for book with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007531	i want books with 5 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000007532	find book having NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007533	get book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007534	i want to search books with greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000007535	i would like books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007536	i would like the QUOTED_STRING_0 which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007537	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007538	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000007539	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007540	get book which have greater number of ratings than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007541	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007542	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000007543	show me what is the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007544	get books that have number of ratings lower than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000007545	retrieve book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007546	i want to retrieve 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007547	i want books which have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000007548	please search 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007549	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007550	please enumerate book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007551	get books having number of reviews smaller than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000007552	get book which have 7 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000007553	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007554	get books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007555	which are the books that have rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007556	find the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007557	which books have lower rating than 12 and number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 and param:numberOfPages:Number >= 11 => notify
S5000007558	get 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007559	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007560	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007561	i need the url and number of pages of the books with the highest number of reviews .	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000007562	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007563	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007564	get book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007565	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007566	i am looking for books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007567	list books with number of reviews 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 7 => notify
S5000007568	i would like book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007569	please search books which do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007570	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007571	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007572	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007573	how many awards in the books with the lowest number of ratings	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007574	i need to search books that have rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000007575	please search for book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007576	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007577	retrieve the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007578	get books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007579	i would like books with number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007580	get books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007581	i need to retrieve NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007582	i would like 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000007583	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007584	i want book having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007585	get books without fewer than 12 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000007586	which are the 7 page 4 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:numberOfPages:Number == 7 => notify
S5000007587	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007588	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007589	how many awards does the books with the least awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000007590	what are 10 -star zero page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 0 => notify
S5000007591	which books are isbn QUOTED_STRING_0 and have larger rating than 5 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007592	give me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007593	i would like book which have number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000007594	i want to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000007595	i am looking for QUOTED_STRING_0 book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007596	what books have 4 awards and isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007597	what books get awards QUOTED_STRING_0 and over NUMBER_0 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 and param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000007598	find book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007599	tell me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007600	please get books which have isbn containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007601	which books get 10 or lower number of reviews and 4 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 10 and param:numberOfPages:Number <= 4 => notify
S5000007602	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007603	enumerate 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007604	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007605	search for book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000007606	get books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000007607	i want to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007608	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007609	i want to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007610	retrieve books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007611	get NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007612	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007613	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007614	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007615	i want to search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007616	search books which have smaller number of pages than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000007617	i need book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007618	get book which have greater number of ratings than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007619	i need books with number of ratings not more than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000007620	which are the books with awards containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 => notify
S5000007621	i need books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007622	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007623	get books with no fewer than 12 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000007624	i want books which have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000007625	get 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007626	please search for books with 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000007627	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007628	how many awards does the books with the highest number of reviews have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007629	please search book that have isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007630	i am looking to retrieve books with over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007631	enumerate 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007632	find book that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007633	i would like to find books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007634	how many awards in the books which has the highest rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007635	get books which have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000007636	tell me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007637	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007638	search for books with number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007639	i need books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007640	what is the url of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007641	which books have number of ratings 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007642	i would like books with number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007643	find book that have 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007644	what are book that have at most 2 awards and have number of ratings equal to zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 and param:aggregateRating.ratingCount:Number == 0 => notify
S5000007645	list book having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007646	what are book which have over 12 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007647	i am looking for books which are 8 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007648	get book having number of reviews 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007649	i am looking for the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007650	i want books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000007651	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007652	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007653	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007654	retrieve books which have more than 7 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000007655	get 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007656	i want books with number of ratings 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000007657	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007658	how many awards are there in the books which has the minimum rating	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000007659	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007660	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007661	enumerate books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007662	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007663	what are 2 page QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 2 => notify
S5000007664	i am looking for books that have rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007665	get the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007666	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007667	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007668	find books with rating not more than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007669	i need book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007670	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007671	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000007672	i am looking for books which are 8 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007673	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007674	i want to search 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007675	i need to retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007676	search books having rating 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007677	get books which have rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007678	retrieve books having isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000007679	find one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007680	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007681	i am looking for book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007682	i want books that have over 0 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007683	i need to get 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007684	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007685	get books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007686	i need to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007687	get books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007688	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007689	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000007690	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007691	i need to get books having number of ratings greater than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007692	list 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007693	i would like to get books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007694	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007695	i am looking for book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007696	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007697	i would like book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007698	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007699	i need book with number of pages 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007700	i want book with one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007701	i am looking to get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007702	search books having rating 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007703	retrieve book which have 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007704	i need to search book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007705	get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007706	please get 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007707	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007708	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007709	i want books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007710	what are the NUMBER_0 -star 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 5 => notify
S5000007711	search 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007712	enumerate 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007713	search for books with 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000007714	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007715	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007716	which are the book that have higher number of pages than zero and with number of ratings 4 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 and param:numberOfPages:Number >= 0 => notify
S5000007717	please search 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007718	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007719	i want to get books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007720	i would like to search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007721	get NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007722	i am looking to search books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000007723	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007724	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007725	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007726	retrieve 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007727	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007728	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007729	i want book with one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007730	i need to search for book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007731	list 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000007732	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007733	please enumerate book with greater rating than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007734	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007735	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007736	i want 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007737	please enumerate book with greater rating than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000007738	search for book that have larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000007739	show me what is the link of person	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007740	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007741	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007742	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007743	what are 11 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007744	what are books having no more than NUMBER_0 awards and number of reviews 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= NUMBER_0 and param:aggregateRating.reviewCount:Number == 3 => notify
S5000007745	get books that is 10 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007746	i need to find book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000007747	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007748	retrieve book without number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007749	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007750	show me what is the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007751	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007752	i want to search for book having rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007753	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007754	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007755	i want to search books with greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000007756	i need to find book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007757	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007758	enumerate books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007759	i want book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007760	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000007761	please find book having over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007762	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007763	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007764	what books get lower number of pages than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000007765	please enumerate book having 11 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007766	i am looking to search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007767	what books is 3 -star and get over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number >= 0 => notify
S5000007768	please enumerate books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000007769	what is the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007770	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007771	i want book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007772	i am looking to find books with 12 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000007773	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007774	tell me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007775	i need 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007776	enumerate books which have number of ratings more than 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000007777	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007778	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000007779	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007780	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000007781	what are the book with number of ratings one that is zero -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000007782	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007783	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000007784	retrieve books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007785	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007786	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007787	i need to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007788	i would like to retrieve books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007789	please enumerate book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000007790	i am looking for the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007791	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007792	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007793	i want to search for books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007794	i want to search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007795	i would like to search for book with larger number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007796	show me what 's the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007797	how many awards does the books with the least awards have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000007798	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007799	search books which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000007800	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007801	get 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007802	i am looking for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000007803	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007804	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007805	i want to search books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000007806	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007807	i would like to search for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007808	get book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007809	list books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007810	i am looking for 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000007811	i need the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007812	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007813	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007814	please list books having 4 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000007815	i want books with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007816	search for book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000007817	i am looking for QUOTED_STRING_0 book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007818	tell me the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007819	what are the 5 -star books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007820	what is the number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007821	please list 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007822	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007823	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007824	i need to retrieve books that are NUMBER_0 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007825	i am looking to search for books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007826	i need books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007827	i need book with number of pages 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007828	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007829	i am looking for book having rating 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007830	i need to search book which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000007831	search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007832	i need to find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007833	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007834	search books with rating not more than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000007835	which are the QUOTED_STRING_0 having number of pages equal to 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 4 => notify
S5000007836	get books with over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007837	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000007838	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000007839	what are the QUOTED_STRING_0 having rating smaller than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007840	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007841	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000007842	i want to find 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007843	i need to search for book that have over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000007844	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007845	get book having number of reviews 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000007846	i would like to retrieve books having higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007847	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007848	which are book which have number of ratings equal to 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007849	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000007850	i want to retrieve books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007851	i am looking for the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007852	find book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000007853	get books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007854	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007855	what are the QUOTED_STRING_0 with greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007856	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007857	search for books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007858	get books having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000007859	i want books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007860	get 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007861	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000007862	search book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007863	please enumerate books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007864	i would like book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007865	retrieve book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007866	find book having number of ratings 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000007867	i am looking for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007868	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000007869	i need books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007870	i want to retrieve book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007871	which are book with over zero rating and number of reviews 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 and param:aggregateRating.reviewCount:Number == 11 => notify
S5000007872	which are the people in QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000007873	i need the QUOTED_STRING_0 which has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007874	i need to retrieve book that have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000007875	find book which have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007876	get 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007877	i need to search for book that is zero -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007878	i am looking to search 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007879	which are the 6 -star NUMBER_0 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 and param:numberOfPages:Number == NUMBER_0 => notify
S5000007880	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007881	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007882	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007883	i want QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000007884	show me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007885	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007886	retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000007887	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007888	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007889	find one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007890	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007891	please search books with over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000007892	i need book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007893	search for 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000007894	i want books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000007895	what are the QUOTED_STRING_0 which have rating smaller than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000007896	what is the language of books ?	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007897	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007898	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007899	find books which have over 6 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000007900	i need book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000007901	retrieve books with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000007902	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007903	i would like 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007904	i need book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000007905	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007906	i am looking to get 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000007907	i would like books having over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000007908	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007909	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007910	retrieve book which have 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000007911	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007912	tell me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007913	please enumerate books with over 6 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000007914	find book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000007915	i need to find NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007916	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007917	get book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007918	get books which have 12 or higher number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000007919	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007920	get books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000007921	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007922	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000007923	search books having 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007924	i want book having number of ratings more than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000007925	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000007926	i need to get book with more rating than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000007927	i need the link and rating of the book which has the minimum number of pages .	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000007928	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007929	search one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000007930	get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007931	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000007932	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007933	i am looking to get books having 5 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 5 => notify
S5000007934	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007935	i need zero -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007936	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000007937	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000007938	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007939	i want 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007940	retrieve book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000007941	i want 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007942	enumerate NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000007943	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007944	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007945	i am looking for books that have number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000007946	i need to get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007947	search books which do n't have fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007948	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007949	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007950	please get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000007951	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007952	i need to retrieve book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007953	which books have number of pages 8 and rating equal to 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 8 => notify
S5000007954	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000007955	search for books which have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000007956	i need books which have rating 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000007957	i need to search for zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000007958	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000007959	search books which do not have fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000007960	search for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000007961	i want the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000007962	i need books which have 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007963	what are book which have number of pages 2 and with number of ratings 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:numberOfPages:Number == 2 => notify
S5000007964	get book with fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000007965	i want to search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000007966	i need 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000007967	show me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007968	what are the 5 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000007969	enumerate book which have rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000007970	which are the NUMBER_0 page book with language equal to QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000007971	what are book with number of pages 8 that are 0 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 8 => notify
S5000007972	get 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000007973	please enumerate books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000007974	please search books which do not have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000007975	what is the isbn of books ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007976	search 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007977	find books with less number of reviews than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000007978	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007979	please list books which have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000007980	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007981	i am looking for books which are 8 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007982	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000007983	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000007984	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000007985	i need 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000007986	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007987	what are the QUOTED_STRING_0 that have number of pages lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 10 => notify
S5000007988	search books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000007989	find book with rating one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000007990	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000007991	i need to search for books that have less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000007992	list 8 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000007993	tell me what 's the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007994	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000007995	i would like to search book which have one or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000007996	i would like to retrieve book without or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000007997	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000007998	i need book that have over one number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000007999	retrieve books which have zero or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008000	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008001	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008002	i need to search book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008003	show me the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008004	i want to retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008005	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008006	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000008007	show me what 's the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008008	retrieve 4 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008009	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008010	which are the QUOTED_STRING_0 that have one page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 1 => notify
S5000008011	what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008012	i need the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008013	find the QUOTED_STRING_0 which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008014	i want to retrieve books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000008015	get book having number of reviews 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000008016	i want to retrieve books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008017	search book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008018	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008019	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008020	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008021	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008022	what are the books that have higher number of ratings than zero and are 10 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 and param:numberOfPages:Number == 10 => notify
S5000008023	show me what 's the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008024	what are the 9 page 9 -star book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 and param:numberOfPages:Number == 9 => notify
S5000008025	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008026	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008027	i want to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008028	get book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008029	i want books having larger rating than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000008030	get books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008031	list book having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000008032	how many awards in the books which has the maximum number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008033	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008034	i want to search books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008035	show me what is the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008036	list books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008037	i want to search books with 5 or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008038	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008039	list books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008040	i would like book having rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008041	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008042	what are the books which have 11 pages and with rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 11 => notify
S5000008043	i would like books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008044	please list 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000008045	what are the 12 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008046	get NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008047	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008048	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008049	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008050	i would like to retrieve book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008051	get books having number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008052	tell me what is the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008053	i want to get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008054	i need the link and rating of the book which has the minimum number of pages .	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008055	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008056	i need books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008057	i want to search books with 5 or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 => notify
S5000008058	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008059	search for books that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008060	i want to search books with greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008061	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008062	i need the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008063	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008064	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008065	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008066	i want book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008067	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008068	i want book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008069	search for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008070	what are 3 page books that have rating equal to 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 and param:numberOfPages:Number == 3 => notify
S5000008071	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008072	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008073	retrieve books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008074	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008075	get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008076	get books which have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008077	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008078	search book having 11 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008079	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008080	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008081	get books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008082	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008083	search book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008084	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008085	retrieve books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008086	which are 0 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008087	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008088	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008089	list books that have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008090	i am looking to retrieve 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008091	show me what 's the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008092	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008093	find the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008094	i want book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008095	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000008096	get books that have over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008097	i would like book which have zero number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008098	i need 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008099	find book that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008100	which are 3 -star 1 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number == 1 => notify
S5000008101	get books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008102	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008103	i would like to search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008104	which book get rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008105	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008106	i am looking for books with 12 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008107	please search book that have isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008108	i want 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000008109	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008110	i need to get books with no more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000008111	i need the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008112	i want to get books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008113	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008114	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008115	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008116	i need 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008117	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008118	i want book with higher number of reviews than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000008119	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008120	search for 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008121	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008122	retrieve the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008123	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008124	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008125	i want to search books with smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008126	i would like 11 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008127	please enumerate books that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008128	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008129	please list book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008130	search for book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008131	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008132	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008133	search for book that have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000008134	i would like book that have rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008135	what is the QUOTED_STRING_0 with the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008136	i need to find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000008137	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008138	what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008139	please retrieve book which have number of ratings 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000008140	i am looking for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000008141	list books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008142	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008143	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008144	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008145	i would like 11 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008146	i need to get 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008147	i would like to get books having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000008148	i need book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008149	please search book that have isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008150	search book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000008151	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008152	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008153	i need book that have 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008154	what books have 4 awards and isbn containing QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008155	i need to get books with no more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000008156	find the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008157	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008158	get book having lower number of reviews than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008159	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008160	i would like to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008161	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008162	i want books which have rating at most 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008163	which books get 12 or less number of ratings and number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 and param:aggregateRating.reviewCount:Number == 6 => notify
S5000008164	i am looking to find 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008165	get book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008166	i would like books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008167	i would like to search for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008168	list book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008169	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008170	get book which is 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008171	get book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008172	get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008173	i need to know the book edition and link of the books which has the highest number of ratings	now => [ param:bookEdition:String , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008174	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008175	i want books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008176	please list books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008177	get books which have NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008178	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008179	find the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008180	i am looking to get 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008181	please search book that have isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008182	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008183	please enumerate book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008184	i am looking to search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008185	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008186	i am looking to get 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008187	i want books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000008188	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008189	get one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008190	i would like books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000008191	i need to get books with no more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000008192	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008193	find book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008194	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008195	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008196	please search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008197	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008198	i am looking for 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008199	please list 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008200	i want books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008201	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000008202	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008203	i am looking to retrieve 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008204	i need to know the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008205	i am looking for the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008206	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008207	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008208	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008209	i am looking to get books which have book format hardcover	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000008210	search for book that have rating not more than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S5000008211	get books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008212	i am looking to retrieve books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008213	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008214	what book have 9 pages and is 12 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number == 9 => notify
S5000008215	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008216	what are books with rating equal to 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008217	i am looking to find book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008218	tell me what 's the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008219	i want book without pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008220	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008221	please get book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008222	search books which have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000008223	retrieve book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008224	please enumerate books that have over 9 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008225	i want book that have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000008226	what is the book edition of book ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008227	i need NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008228	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008229	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008230	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008231	i would like to search for books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000008232	i would like one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008233	please find book with fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008234	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008235	i want to get book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008236	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008237	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008238	which QUOTED_STRING_0 gets the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008239	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000008240	get book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008241	what are the book which do n't have more than 0 awards and with rating 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 and param:aggregateRating.ratingValue:Number == 6 => notify
S5000008242	i would like to find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008243	enumerate 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008244	i am looking for book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008245	i would like book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008246	search 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008247	what are book with number of pages equal to 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008248	i would like to search for books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000008249	please search book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008250	get books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008251	which are book with rating greater than 5 and number of pages 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 and param:numberOfPages:Number == 5 => notify
S5000008252	what are 11 page QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 11 => notify
S5000008253	what QUOTED_STRING_0 have NUMBER_0 or greater number of reviews ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000008254	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008255	search book having 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008256	i would like to get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008257	search book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008258	i need to find 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008259	tell me what 's the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008260	show me the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008261	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008262	which QUOTED_STRING_0 gets the lowest number of pages ?	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008263	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008264	i want the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008265	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008266	i need book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008267	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008268	i need book having 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008269	retrieve books which have more than 7 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000008270	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008271	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008272	get books that is 10 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008273	please enumerate book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008274	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000008275	i need books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008276	i need 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008277	i would like books having rating less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008278	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000008279	what books get lower number of pages than 8 and over 9 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:numberOfPages:Number <= 8 => notify
S5000008280	i want to get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008281	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008282	i am looking for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008283	i would like to search for zero page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008284	please search for books that are 12 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008285	search for books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008286	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008287	show me what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008288	get book which have number of ratings at least 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008289	i would like book that have number of reviews larger than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008290	i am looking for the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008291	search 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008292	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008293	search for books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008294	retrieve books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008295	enumerate 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008296	tell me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008297	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008298	i would like to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008299	what are the books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008300	i would like book with no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008301	retrieve the QUOTED_STRING_0 with the smallest number of awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008302	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008303	retrieve the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008304	get books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008305	tell me what is the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008306	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008307	i want book which have 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008308	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008309	i am looking for book having rating 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008310	retrieve book which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008311	i want to search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008312	show me what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008313	what are books having less number of pages than 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008314	search for book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000008315	which are books isbn QUOTED_STRING_0 that have rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008316	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008317	i would like book having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008318	enumerate books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008319	i need to get book with more rating than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008320	how many awards does the books with the minimum rating have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008321	which books is 12 page and have book format equal to ebook ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook and param:numberOfPages:Number == 12 => notify
S5000008322	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008323	i need book with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008324	i need 5 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008325	get NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008326	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008327	i would like the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008328	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008329	i need books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008330	retrieve books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008331	what are the book with over 11 number of reviews that have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 and param:numberOfPages:Number == 0 => notify
S5000008332	please enumerate books which do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008333	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008334	please enumerate books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008335	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008336	i need to get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008337	get book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008338	i am looking for books which have number of ratings less than 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008339	how many awards in the books which has the highest number of reviews ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008340	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008341	i need book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008342	get 7 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008343	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008344	search for books which have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000008345	show me what 's the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008346	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008347	please retrieve book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008348	list book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008349	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008350	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008351	tell me what 's the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008352	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008353	i am looking for book with lower rating than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008354	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008355	search books which have no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000008356	retrieve books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008357	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008358	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008359	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008360	i want books with over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008361	find book having NUMBER_0 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000008362	i would like books which have 9 or below number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008363	i am looking to retrieve book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008364	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008365	i would like to search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008366	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008367	i would like books having over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008368	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008369	what QUOTED_STRING_0 has the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008370	i would like to get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008371	i would like book that have lower number of reviews than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000008372	please enumerate 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008373	i am looking to search for books which have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008374	enumerate books with language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008375	which are books with over 6 rating and number of reviews 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 and param:aggregateRating.reviewCount:Number == 7 => notify
S5000008376	i need the QUOTED_STRING_0 which has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008377	tell me what 's the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008378	i would like book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000008379	i want books with rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008380	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008381	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008382	i would like book that have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008383	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008384	i want book which have number of reviews lower than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008385	i would like to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008386	find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008387	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008388	what are the books with smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008389	i want to retrieve book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008390	i would like the QUOTED_STRING_0 which has the minimum number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008391	i need to search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008392	i want 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008393	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008394	i need books which have smaller number of reviews than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008395	what are the 12 -star 3 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number == 3 => notify
S5000008396	what are the QUOTED_STRING_0 with over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number >= 11 => notify
S5000008397	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008398	get books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008399	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008400	i want to search books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008401	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008402	retrieve the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008403	please retrieve books having 9 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000008404	how many awards are there in the books with the lowest number of ratings ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008405	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008406	which book is 6 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 6 => notify
S5000008407	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008408	get book with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008409	retrieve books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008410	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008411	enumerate books with language including QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008412	i want to find book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008413	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008414	search for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008415	i would like 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008416	show me what 's the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008417	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008418	find 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000008419	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008420	i want books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008421	i need book which have higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008422	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008423	list book that have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000008424	i would like books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008425	give me the url of person .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008426	retrieve books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008427	get books which have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008428	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008429	what books have less number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000008430	how many awards does the books which has the lowest number of pages have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008431	search for NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008432	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008433	i need to get books having number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008434	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008435	get book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008436	i need book with number of pages at most 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008437	retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008438	get book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008439	i need book having 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008440	please enumerate books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000008441	i need books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008442	what is the QUOTED_STRING_0 which has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008443	find one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008444	get book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008445	get books with book format paperback .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000008446	list books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008447	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008448	please enumerate book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000008449	get 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008450	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008451	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008452	i need book with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008453	get book with lower rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008454	i want to search for book that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008455	please get book which have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008456	i want the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008457	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008458	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008459	please enumerate book that have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000008460	what is the image and url of the book which has the minimum number of pages	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008461	enumerate 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008462	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008463	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008464	search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008465	i would like books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008466	show me what is the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008467	i want books which have over 7 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000008468	i need to find 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008469	give me the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008470	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008471	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008472	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008473	list books that have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008474	please find books having 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008475	get books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000008476	enumerate books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008477	i am looking to retrieve book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008478	search for the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008479	i need book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008480	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008481	i want 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008482	find 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008483	get books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008484	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008485	please list books with over 9 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000008486	please retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008487	retrieve book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008488	show me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008489	please retrieve books which have number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008490	search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008491	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008492	search for books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000008493	i want books which have rating at most 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008494	search for books with 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008495	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008496	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008497	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008498	get 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008499	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008500	search book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008501	i am looking for books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008502	i would like to search for 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008503	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000008504	i need 5 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008505	what are the books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008506	which QUOTED_STRING_0 has the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008507	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008508	search books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008509	search the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008510	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008511	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008512	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008513	please list books having 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008514	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008515	i would like to search for 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008516	what are the 0 page book with over 5 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 and param:numberOfPages:Number == 0 => notify
S5000008517	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008518	what book get greater number of ratings than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000008519	please enumerate 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008520	i am looking to get books having number of pages not less than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008521	i am looking for books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008522	i am looking to retrieve books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008523	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008524	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000008525	i would like books with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008526	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008527	get 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008528	find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008529	i need books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008530	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008531	what QUOTED_STRING_0 have number of reviews smaller than 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000008532	search for book which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008533	get books that have number of ratings larger than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000008534	i need to search for book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008535	i would like to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008536	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008537	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008538	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008539	get books having over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008540	please find book with fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008541	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008542	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008543	i am looking for the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008544	i would like book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008545	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008546	how many awards do the books which has the minimum rating have	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000008547	which are the book with number of reviews larger than 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008548	i would like to find book having lower number of reviews than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008549	what are the QUOTED_STRING_0 's QUOTED_STRING_1 .	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000008550	i would like to retrieve book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008551	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008552	find book having one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008553	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008554	list book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008555	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000008556	i want books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008557	get books that is 10 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008558	i want the QUOTED_STRING_0 with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008559	i would like to search book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008560	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008561	enumerate books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008562	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008563	which are QUOTED_STRING_0 book with smaller number of pages than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 10 => notify
S5000008564	i would like to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008565	i am looking for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008566	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008567	what is the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008568	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008569	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008570	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008571	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008572	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008573	get books with smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008574	enumerate books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008575	i would like to search books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008576	i need 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008577	tell me what 's the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008578	find book having lower number of reviews than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008579	get 0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008580	i want to retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008581	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008582	i want to search for 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008583	retrieve book with zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008584	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008585	i would like 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008586	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008587	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008588	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008589	what book have rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000008590	retrieve books with over 5 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008591	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008592	i am looking to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008593	get books that have number of ratings lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008594	retrieve the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008595	retrieve book that have 0 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008596	which are the 9 page books that are 2 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 and param:numberOfPages:Number == 9 => notify
S5000008597	find the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008598	list books that have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008599	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008600	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008601	get book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008602	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008603	i would like to find books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000008604	tell me what 's the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008605	i am looking to retrieve 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008606	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008607	search for book which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008608	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008609	i want book which have 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000008610	get books which have 12 or higher number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008611	please enumerate books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008612	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008613	get book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000008614	i want the QUOTED_STRING_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008615	search for the QUOTED_STRING_0 which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008616	please retrieve book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008617	i want to search 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008618	i am looking for book that have smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008619	i would like book that have number of reviews larger than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008620	i want books having greater number of reviews than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008621	search for book with number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008622	please list book that have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000008623	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008624	what is the number of pages of book	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008625	get book which have 7 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000008626	show me what is the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008627	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008628	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008629	get book that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008630	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008631	please get book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008632	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008633	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008634	what is the isbn of book ?	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008635	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008636	i am looking for books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008637	i am looking for book which have number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000008638	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008639	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008640	i am looking for the QUOTED_STRING_0 with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008641	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008642	which are 8 page 3 -star book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 and param:numberOfPages:Number == 8 => notify
S5000008643	retrieve books which have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008644	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008645	i would like book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008646	which are QUOTED_STRING_0 that have number of pages zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 0 => notify
S5000008647	which books have number of pages not less than 0 and is 12 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number >= 0 => notify
S5000008648	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008649	what is the number of awards in the book ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008650	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008651	get books with over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008652	retrieve books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008653	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008654	i would like to search for book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008655	i am looking for books with 12 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000008656	get book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008657	i am looking for books which have 12 or higher number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000008658	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008659	i would like to search for books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008660	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008661	get the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008662	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000008663	i need books which have smaller number of reviews than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000008664	i need to search book which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008665	i am looking for book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008666	i need book that is one -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008667	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008668	list 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008669	get 7 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000008670	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008671	i am looking for the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008672	find book that have 12 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008673	i would like one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008674	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008675	i need to find zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008676	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008677	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008678	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008679	which is the QUOTED_STRING_0 which has the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008680	i would like books which have rating at most 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008681	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008682	which book are 7 page and have number of reviews 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 7 => notify
S5000008683	retrieve book that have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000008684	get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008685	i am looking for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008686	please enumerate book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000008687	please find books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008688	get zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008689	i would like books which have rating at most 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008690	tell me what is the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008691	i would like to get book which have 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008692	i want to retrieve 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008693	i want to retrieve 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008694	i want the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008695	i need the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008696	what books get lower number of pages than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000008697	what is the number of pages and book edition of the books with the highest number of reviews	now => [ param:bookEdition:String , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008698	list 8 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008699	get books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008700	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008701	which are QUOTED_STRING_0 with number of reviews smaller than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000008702	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008703	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008704	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008705	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008706	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008707	retrieve 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008708	i would like to search for book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000008709	i am looking for book without fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008710	what is the rating of books ?	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008711	search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008712	i want books having larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000008713	retrieve books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008714	i am looking for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008715	enumerate book with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008716	i am looking to retrieve 9 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008717	i want to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008718	get 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008719	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008720	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008721	enumerate book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008722	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000008723	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008724	i want NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008725	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008726	i am looking to retrieve 9 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008727	get book with fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000008728	get book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008729	i want books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008730	show me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008731	i am looking for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008732	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008733	i would like books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008734	please search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008735	what book have over 5 number of reviews and are NUMBER_0 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 and param:numberOfPages:Number == NUMBER_0 => notify
S5000008736	i want book that is one -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008737	tell me the isbn and author of the books with the lowest number of pages	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008738	what books have zero pages and are 9 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 and param:numberOfPages:Number == 0 => notify
S5000008739	what are book that have over 5 number of reviews and having number of ratings 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 and param:aggregateRating.reviewCount:Number >= 5 => notify
S5000008740	i need books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000008741	i need books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008742	i need to know the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008743	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008744	i want 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008745	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008746	enumerate books with language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008747	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008748	i am looking for book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008749	please search for 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008750	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008751	get books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008752	i am looking to search for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000008753	search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008754	please get 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000008755	i need the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008756	retrieve books which have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000008757	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008758	please list 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008759	i want 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008760	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008761	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008762	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000008763	get book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008764	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008765	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008766	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008767	find book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008768	i need to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008769	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008770	i want books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000008771	please search for books that are 12 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008772	i need books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000008773	tell me what is the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008774	i would like the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000008775	enumerate books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008776	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008777	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008778	i want to find books having number of reviews smaller than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008779	i am looking to search for books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008780	i want to get books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008781	i would like books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000008782	get 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008783	what are the book that have number of ratings at least 5 and have rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 and param:aggregateRating.ratingValue:Number == 3 => notify
S5000008784	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008785	i would like the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008786	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008787	i would like the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008788	i need book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008789	i would like the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008790	i want books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000008791	tell me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008792	find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008793	enumerate books having greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008794	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008795	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008796	i need to search for books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008797	i would like to find book having lower number of reviews than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008798	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008799	i would like to find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000008800	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008801	enumerate 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008802	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008803	i am looking for book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008804	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008805	i want to get 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008806	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008807	i am looking for books that have number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000008808	which are books which are 2 -star and have number of ratings less than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 and param:aggregateRating.ratingValue:Number == 2 => notify
S5000008809	retrieve book having rating larger than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008810	search the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008811	which are the NUMBER_0 page book with over 3 rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 and param:numberOfPages:Number == NUMBER_0 => notify
S5000008812	i want to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008813	what QUOTED_STRING_0 has the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008814	what books are 9 page and get number of reviews equal to 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 9 => notify
S5000008815	get book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008816	search for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008817	i would like books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008818	please search books which do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008819	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008820	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000008821	i want to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008822	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000008823	list book having smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000008824	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000008825	please enumerate 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008826	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000008827	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008828	search books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000008829	i would like to know the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008830	i need to get books having number of ratings greater than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008831	get 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008832	i need to search for books with 8 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000008833	i am looking for book which have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008834	i want to get book that have higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000008835	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008836	which book get no more than 11 awards and are 9 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000008837	please search books which do n't have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000008838	i need to search for books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008839	i would like the number of pages of book .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008840	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008841	i would like book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000008842	retrieve books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000008843	please enumerate 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008844	get book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008845	please enumerate books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000008846	find book with rating one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008847	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008848	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008849	get book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008850	what are the books having number of ratings less than 2 and number of ratings greater than 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 and param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008851	search for books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008852	search books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008853	what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008854	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000008855	i want book that have 11 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000008856	get 11 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000008857	what are the 1 -star QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000008858	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008859	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008860	please find 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008861	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008862	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000008863	search for books that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000008864	i need books with number of ratings not more than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000008865	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008866	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008867	get book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008868	please enumerate books with over 6 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000008869	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008870	i would like book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008871	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008872	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000008873	get 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000008874	i want to know the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008875	please retrieve NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008876	give me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008877	i need one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000008878	enumerate 0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008879	get book with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000008880	i am looking to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008881	i am looking for books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008882	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008883	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008884	get books which have smaller number of pages than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000008885	i need book with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000008886	i need to search book which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008887	please retrieve books which is in QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008888	i am looking to retrieve NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008889	get book that have number of pages 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008890	i want books having number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008891	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008892	please find books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000008893	find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000008894	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008895	what is the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000008896	what are the book which have number of ratings lower than 10 and with number of reviews 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:aggregateRating.reviewCount:Number == 1 => notify
S5000008897	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000008898	please list books which have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008899	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008900	what books get number of pages equal to 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000008901	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008902	list 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000008903	search books having rating 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000008904	what are book which have over zero number of reviews , with lower rating than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008905	search book having over 2 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008906	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000008907	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000008908	get book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000008909	please get book which have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000008910	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008911	i want books which have rating at most 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000008912	show me what is the link of person	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008913	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000008914	retrieve books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008915	show me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008916	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008917	get books that have number of reviews 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 6 => notify
S5000008918	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008919	i need book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008920	what is the image and number of pages of the books which has the highest number of ratings	now => [ param:image:Entity(tt:picture) , param:numberOfPages:Number ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000008921	i need books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000008922	i want to retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008923	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000008924	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008925	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008926	what are the 8 page 2 -star book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 and param:numberOfPages:Number == 8 => notify
S5000008927	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008928	please get 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000008929	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008930	search for books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000008931	i would like to know the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008932	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000008933	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008934	i need the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008935	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008936	please search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000008937	i am looking for the QUOTED_STRING_0 which has the maximum number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008938	please get book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000008939	what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008940	get book with number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000008941	search for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008942	get books with 9 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000008943	retrieve books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000008944	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000008945	i am looking to search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000008946	what are the 5 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008947	what are the 0 -star book having book edition containing both QUOTED_STRING_0 and QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:bookEdition:String =~ QUOTED_STRING_0 and param:bookEdition:String =~ QUOTED_STRING_1 => notify
S5000008948	i would like to search books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000008949	search for book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000008950	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000008951	tell me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008952	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000008953	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008954	i am looking to get 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000008955	i am looking to find book that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000008956	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000008957	get book with higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000008958	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008959	i need the QUOTED_STRING_0 with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008960	retrieve 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000008961	what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008962	get books that have number of ratings lower than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 => notify
S5000008963	get books with rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000008964	show me what is the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008965	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008966	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000008967	tell me what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008968	i would like book having rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008969	get books having number of reviews larger than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000008970	what are NUMBER_0 page QUOTED_STRING_0 book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000008971	i want to retrieve book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008972	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008973	search 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000008974	list books with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000008975	search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000008976	list books which is in QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000008977	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000008978	i need 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000008979	please find 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000008980	i want the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008981	tell me the number of reviews of book .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008982	i would like book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000008983	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008984	what book have over 1 number of reviews and rating 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000008985	search books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008986	i would like books with number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000008987	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000008988	please enumerate book with number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000008989	i would like books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000008990	give me the number of reviews of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008991	find 12 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000008992	list book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000008993	retrieve books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000008994	tell me what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008995	get book which have 7 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000008996	i want books having greater number of reviews than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000008997	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000008998	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000008999	i want book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009000	i need to find NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009001	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009002	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000009003	i would like the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009004	please search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009005	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009006	i would like books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009007	i am looking for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009008	get books with 9 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009009	search for the QUOTED_STRING_0 with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009010	please list 1 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009011	i am looking for books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009012	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009013	i need book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009014	i am looking for books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009015	i would like book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009016	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009017	find 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009018	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009019	i need to get books with number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009020	i am looking for book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009021	i need to search for zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009022	which are the books that have NUMBER_0 or more number of pages and have book format equal to audiobook format	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:AudiobookFormat and param:numberOfPages:Number >= NUMBER_0 => notify
S5000009023	i need to find books which is 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009024	i want to get books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009025	tell me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009026	i want 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009027	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009028	i need 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000009029	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009030	i want to retrieve 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009031	get books with smaller rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009032	what is the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009033	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009034	get book with higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009035	i am looking for books which have number of ratings less than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009036	show me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009037	i want books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009038	find books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009039	retrieve books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009040	please search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009041	please get book which have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009042	i need book which is 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009043	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009044	i need books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009045	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009046	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009047	find books that have 4 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000009048	i want to get books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009049	what book is 3 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009050	search for books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009051	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009052	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009053	search for book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009054	i need to search 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009055	tell me the number of awards of books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009056	search for book that have rating not more than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S5000009057	find book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009058	i am looking for books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009059	i need to search for book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009060	retrieve book that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009061	find book with rating one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009062	i want books which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009063	what books have rating greater than 8 and number of pages equal to 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 and param:numberOfPages:Number == 12 => notify
S5000009064	i would like 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009065	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009066	i am looking to search book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009067	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009068	i need to get 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009069	i would like books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009070	find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009071	i want book which have higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009072	search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009073	i want books with number of ratings 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000009074	i want to search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009075	search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009076	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009077	i am looking to search 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009078	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009079	get books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009080	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009081	show me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009082	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009083	how many awards in the books which has the highest rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000009084	search for book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009085	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009086	tell me what is the isbn of book .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009087	i want to get book that have higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009088	i need to retrieve book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009089	i am looking to search for books that is 10 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009090	i am looking for one page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009091	what books is in QUOTED_STRING_0 and have greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009092	search book that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009093	i need to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009094	which are the books that have lower number of reviews than 8 and is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:aggregateRating.reviewCount:Number <= 8 => notify
S5000009095	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009096	what book get smaller number of pages than 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 => notify
S5000009097	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009098	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009099	get 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009100	how many awards are there in the books which has the minimum rating	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000009101	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009102	what are the 1 -star books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009103	i would like 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009104	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009105	i am looking to find one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009106	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000009107	tell me what is the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009108	please enumerate 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000009109	i need book which have higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009110	i want to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009111	enumerate 0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009112	i am looking for books which do n't have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009113	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009114	i would like to search for book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009115	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009116	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009117	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009118	which are QUOTED_STRING_0 with over zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009119	list book having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000009120	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009121	i want book which have 11 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009122	i am looking for book that have smaller number of pages than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009123	i am looking to search for books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009124	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009125	find NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009126	get 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009127	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009128	what books are NUMBER_0 -star and 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 9 => notify
S5000009129	i am looking to retrieve NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009130	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009131	i need to search books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009132	please retrieve books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009133	i need book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009134	i need to retrieve books that have greater number of ratings than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009135	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009136	get NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009137	i am looking for the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009138	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009139	i want the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009140	retrieve the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009141	i want to know the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009142	list books having greater number of reviews than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009143	search for books having rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009144	please enumerate books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009145	search for books which have number of ratings at least 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009146	give me the number of reviews of books .	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009147	i need books which have number of ratings 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000009148	please enumerate books that have over 9 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009149	i am looking for 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009150	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009151	i am looking to find books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009152	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009153	i need to find 5 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009154	get books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009155	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009156	get 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009157	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009158	get book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009159	i would like book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009160	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009161	enumerate books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009162	get book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009163	get book which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009164	search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009165	give me the url of person .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009166	retrieve books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009167	please list book having 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009168	get books that have over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009169	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009170	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009171	which are the 10 -star book which are in QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009172	i would like book having number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000009173	which are the book with over 0 number of reviews which have book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 and param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000009174	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009175	i need book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009176	show me what 's the number of awards in the book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009177	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009178	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009179	i want book which have 11 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009180	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009181	retrieve books that have number of pages greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000009182	i would like books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009183	search for book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009184	get book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009185	i need to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009186	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009187	i need books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009188	retrieve 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009189	please search for book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009190	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009191	retrieve book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009192	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009193	get books with over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009194	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009195	i need 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009196	i need book that have 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009197	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009198	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009199	tell me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009200	i am looking for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009201	get book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009202	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009203	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009204	i need to retrieve 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009205	i would like 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009206	i want book with number of pages 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009207	enumerate NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009208	i want 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009209	please search for 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009210	tell me what is the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009211	retrieve books which have zero or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009212	get book which have 11 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009213	i am looking for book which have rating 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009214	tell me what is the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009215	get books which have number of ratings 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000009216	i want to get books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009217	which QUOTED_STRING_0 have rating at most 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009218	retrieve book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009219	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009220	i need book having lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009221	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009222	enumerate book with number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009223	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009224	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009225	please search for 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009226	which book have 9 pages and is 5 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number == 9 => notify
S5000009227	i would like to search for book with larger number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009228	search the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009229	get books which have 12 or higher number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 12 => notify
S5000009230	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009231	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009232	get book which have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009233	search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009234	which are QUOTED_STRING_0 with number of reviews smaller than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009235	i am looking to retrieve books that have one or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009236	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009237	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009238	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009239	which are 0 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009240	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009241	get book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000009242	i need book having number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000009243	get book which have greater number of ratings than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009244	i am looking to search for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009245	please enumerate book that have fewer than 1 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009246	show me the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009247	which are the books that have number of ratings at least 5 and have rating 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000009248	get 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009249	i am looking to search for 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009250	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009251	i need books which have 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009252	i would like books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009253	i would like to search books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009254	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009255	what are the books which have 11 pages and with rating 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 and param:numberOfPages:Number == 11 => notify
S5000009256	i need to search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009257	what are 2 page QUOTED_STRING_0 books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 2 => notify
S5000009258	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009259	show me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009260	i want to get book that have higher number of pages than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009261	tell me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009262	i am looking for book having NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000009263	search 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009264	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009265	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009266	retrieve books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000009267	tell me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009268	retrieve 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009269	what are the people of QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000009270	i would like books that have number of reviews zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009271	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009272	i am looking for 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009273	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009274	get books that have 1 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009275	give me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009276	please enumerate books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009277	what books get zero or below number of reviews and is 11 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 and param:numberOfPages:Number == 11 => notify
S5000009278	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009279	tell me what is the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009280	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000009281	please list books which have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009282	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009283	i need the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009284	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009285	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009286	i am looking for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009287	i need the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009288	enumerate book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009289	get books that is 10 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009290	search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009291	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009292	i need to search for books with 8 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000009293	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009294	i want books which have rating at most 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000009295	please search for book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009296	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009297	i want book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009298	i want to search books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009299	which are NUMBER_0 -star one page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 1 => notify
S5000009300	retrieve books that have 11 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000009301	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009302	please enumerate books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009303	i want books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009304	i need books having larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000009305	i need to search for books with 8 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000009306	please search for 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009307	get books with rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009308	search for book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009309	which are the book having rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009310	find book having number of ratings 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009311	what are the QUOTED_STRING_0 with over 10 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009312	i want 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009313	retrieve books having number of pages not less than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009314	search for book that have rating not more than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S5000009315	please list book that have over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009316	find books which have higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009317	i want to get books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009318	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009319	get 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009320	i need to find book with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009321	get book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009322	i need 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009323	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009324	i need book that have 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009325	tell me what 's the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009326	get books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009327	i would like to search for 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009328	find books that have rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009329	i need NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009330	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009331	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009332	enumerate books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009333	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009334	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009335	please search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009336	retrieve book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009337	i need book with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009338	retrieve 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000009339	retrieve 2 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000009340	i want to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000009341	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009342	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009343	i need books which have 8 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 8 => notify
S5000009344	what QUOTED_STRING_0 has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009345	please retrieve book having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000009346	get books having number of reviews smaller than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009347	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009348	i want to get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009349	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009350	i would like to search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009351	search for the QUOTED_STRING_0 which has the maximum number of pages .	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009352	please search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009353	search for book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009354	retrieve the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009355	retrieve 12 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000009356	i need to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009357	search for 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009358	i need to search books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009359	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000009360	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009361	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009362	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009363	get books which have over 1 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009364	i need book which have higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009365	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009366	search book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009367	i am looking to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009368	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009369	i would like books that have less number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= NUMBER_0 => notify
S5000009370	i am looking to search for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009371	what are the book with number of ratings one that is zero -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000009372	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009373	i am looking for 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009374	please search for books that are 12 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009375	i am looking to retrieve book that have number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009376	get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000009377	i am looking for books that have rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009378	search for book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009379	get zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009380	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009381	show me what is the link of person .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009382	how many QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) => notify
S5000009383	search for book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009384	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009385	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009386	i want books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009387	i want to search for books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009388	i need book which have higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009389	please search book that have isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009390	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009391	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009392	which are one -star 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 0 => notify
S5000009393	how many awards do the books with the least awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000009394	which are the book that have lower number of ratings than one and have number of pages equal to 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 3 => notify
S5000009395	find books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009396	tell me what 's the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009397	how many awards does the books with the largest number of awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000009398	i need to get book with more rating than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009399	i am looking to find book that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009400	show me what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009401	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009402	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009403	search book having over 2 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009404	get 9 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000009405	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009406	get books that have rating higher than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009407	get book having 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009408	i want to search 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009409	i need 7 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009410	get zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009411	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009412	which book get no more than 11 awards and are 9 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 and param:aggregateRating.ratingValue:Number == 9 => notify
S5000009413	i want to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009414	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009415	what are the book that have number of ratings at least 5 and have rating 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 and param:aggregateRating.ratingValue:Number == 3 => notify
S5000009416	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009417	get book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009418	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009419	list books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009420	what are the 9 -star QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009421	i would like books having higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009422	show me what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009423	what are the QUOTED_STRING_0 with over 10 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009424	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009425	what are the QUOTED_STRING_0 's QUOTED_STRING_1	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( ( @edu.stanford.cs294s.sierra.Person ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) =~ QUOTED_STRING_1 ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000009426	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009427	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009428	please find books that have no number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009429	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009430	i am looking for 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009431	i need to find books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009432	please enumerate books with number of pages 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009433	please list 4 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009434	tell me what 's the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009435	please search books which do n't have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009436	which book have number of reviews 4 and are isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 4 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009437	i would like books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009438	i need to know the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009439	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009440	i would like the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009441	i would like to find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009442	search books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009443	get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009444	list book with higher number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009445	i would like to get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009446	get book with number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009447	get books having over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009448	i am looking to get 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009449	get 9 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000009450	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009451	i need books which have smaller number of reviews than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000009452	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009453	i would like to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009454	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009455	i would like books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009456	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009457	i want book with zero pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009458	what are 11 page QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 11 => notify
S5000009459	what books get rating 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009460	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009461	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009462	i am looking to retrieve book that have number of reviews greater than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009463	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009464	i am looking for the QUOTED_STRING_0 with the most awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009465	please enumerate books with over 6 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000009466	i am looking for 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009467	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009468	get books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009469	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009470	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009471	give me the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009472	what books have greater number of pages than one and larger rating than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:numberOfPages:Number >= 1 => notify
S5000009473	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009474	get book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009475	i would like to know the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009476	i am looking for book having over one number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009477	search for book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009478	find book that have larger number of pages than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009479	please list 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009480	what is the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009481	i would like book with over one rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009482	which books are 4 page and get smaller number of ratings than 1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 and param:numberOfPages:Number == 4 => notify
S5000009483	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009484	i want book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009485	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009486	i want books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000009487	i would like to get book that have over 0 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009488	find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009489	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009490	i would like to search for books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009491	i need to retrieve book which have 1 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009492	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009493	i would like to search for book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009494	please search 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009495	i need book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009496	please search for 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009497	what is the url and author of the books with the highest number of pages	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000009498	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009499	please retrieve book with no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009500	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009501	i want book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000009502	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009503	search for book having 4 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000009504	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009505	i need to find books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000009506	find 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009507	search books that have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009508	retrieve books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009509	i want to search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009510	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009511	please list book having 4 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000009512	i am looking for 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009513	what are book having number of reviews at least 10 and number of ratings 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009514	which QUOTED_STRING_0 have number of pages lower than 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number <= 2 => notify
S5000009515	search for book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009516	please search for book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009517	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009518	i want to find book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009519	please enumerate books with over 6 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000009520	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000009521	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009522	i am looking for book which have less number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009523	which are book having lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000009524	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009525	i need to search for books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000009526	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009527	please retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009528	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009529	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009530	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009531	which are book that have isbn containing QUOTED_STRING_0 and have one or below rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009532	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009533	get book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009534	list books having 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009535	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009536	i want book without pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009537	i would like to search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009538	retrieve books with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009539	i need book that have 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009540	please enumerate books with rating not more than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000009541	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009542	search for book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009543	list 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009544	what are books having number of ratings equal to 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000009545	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009546	i need to search for book that have fewer than 1 award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000009547	which books get greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000009548	i am looking for the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009549	i want to search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009550	get one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009551	get book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009552	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009553	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009554	i am looking for books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009555	i would like to search for books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000009556	i want books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009557	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009558	which are QUOTED_STRING_0 having over 12 rating ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009559	get books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009560	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000009561	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000009562	i would like the number of pages and link of the books with the least awards	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) => notify
S5000009563	list books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009564	please search for book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009565	get book which have 7 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009566	i need to retrieve NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009567	which are the book that have 10 or more number of pages and having number of pages at most 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 9 and param:numberOfPages:Number >= 10 => notify
S5000009568	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009569	i would like book having greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009570	get books that have number of ratings larger than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 => notify
S5000009571	get book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009572	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009573	find books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009574	get book having 5 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 5 => notify
S5000009575	i would like to search book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009576	what is the book edition of book	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009577	please enumerate 8 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000009578	search the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009579	i need to search books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009580	search for the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009581	get book having number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000009582	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009583	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000009584	search for 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009585	i want books with 12 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009586	what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009587	i am looking for 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009588	i would like book that have lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000009589	i am looking to find book with number of reviews lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009590	i want to get 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009591	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009592	i am looking for book with no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009593	get NUMBER_0 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009594	i need to search for book that have over 10 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009595	i need to find book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009596	i would like to search books with number of pages 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009597	show me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009598	please enumerate 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009599	enumerate book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009600	get book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009601	please search for books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009602	i would like to search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009603	tell me what is the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009604	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009605	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009606	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009607	i am looking for book having over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009608	tell me what is the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009609	i need to get books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009610	search for 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009611	get books with rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009612	i would like book which have number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009613	tell me what 's the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009614	get books having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000009615	search book with number of ratings greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000009616	how many awards are there in the books which has the maximum rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000009617	retrieve book that have higher rating than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009618	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009619	i need 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009620	what are books with number of ratings 1 which have 12 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 and param:aggregateRating.reviewCount:Number <= 12 => notify
S5000009621	what is the url and image of the books with the maximum number of pages ?	now => [ param:image:Entity(tt:picture) , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000009622	search book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009623	get books which do n't have fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009624	i want 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009625	i would like 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009626	retrieve books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009627	i am looking to get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009628	i want book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009629	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009630	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009631	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009632	what are 1 -star 11 page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:numberOfPages:Number == 11 => notify
S5000009633	get book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009634	list books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009635	get books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009636	show me what is the rating of books .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009637	i need to search book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009638	list book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000009639	enumerate one page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009640	i would like to get books that is 10 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009641	get books having over 8 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009642	tell me what is the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009643	please search for books with 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000009644	i need book with number of pages 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009645	i would like to get book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009646	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009647	enumerate one page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009648	retrieve books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009649	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009650	i want to search 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009651	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009652	i need to get zero -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009653	i would like to search for books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000009654	what is the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009655	what are zero -star books with number of ratings 8 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 8 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000009656	tell me what 's the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009657	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009658	i am looking for the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009659	search book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009660	get book with lower rating than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009661	i would like to retrieve 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009662	what is the number of ratings of book ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009663	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009664	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009665	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009666	find books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009667	please search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009668	please list book having number of ratings less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000009669	tell me what 's the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009670	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009671	show me what is the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009672	i need book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009673	find the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009674	search 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009675	get one -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009676	retrieve books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009677	get books having number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009678	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009679	i would like to get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000009680	what is the number of pages of books ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009681	show me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009682	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009683	i want book which have higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000009684	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009685	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009686	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009687	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009688	find book having book edition QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009689	i want to retrieve book with 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009690	list books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000009691	please enumerate book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009692	show me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009693	what is the QUOTED_STRING_0 with the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009694	enumerate 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009695	get books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009696	i am looking to get books which have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009697	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009698	show me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009699	retrieve 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009700	i would like one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009701	i am looking for books with less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009702	list 8 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009703	i would like to get book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009704	i need 5 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009705	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009706	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009707	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009708	i need to get books which have one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009709	which books have number of pages not less than 0 and is 12 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 and param:numberOfPages:Number >= 0 => notify
S5000009710	i am looking for QUOTED_STRING_0 book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009711	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009712	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009713	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009714	enumerate book having rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009715	retrieve the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009716	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009717	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009718	enumerate books having lower number of reviews than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000009719	what are 11 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009720	i want to search books which have 3 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009721	get book that have number of pages 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009722	tell me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009723	i want the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009724	retrieve the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009725	i am looking to search books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009726	find book having one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009727	show me what 's the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009728	i am looking for book which have less number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009729	what book have number of reviews smaller than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000009730	i am looking for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009731	list 8 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000009732	i would like to find books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009733	get 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009734	which book get 3 pages and are in QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 3 => notify
S5000009735	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009736	i need to find book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000009737	what is the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000009738	find books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009739	please list books having 4 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 4 => notify
S5000009740	which books get larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009741	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009742	what are book which have number of pages 2 and with number of ratings 9 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 and param:numberOfPages:Number == 2 => notify
S5000009743	find books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009744	show me what 's the link of person	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009745	i am looking for books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009746	retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009747	i need book with rating 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009748	get book that have fewer than zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000009749	please retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009750	tell me what is the number of ratings of books .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009751	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009752	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009753	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000009754	i want the QUOTED_STRING_0 with the highest number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009755	i want to know the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009756	get 7 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009757	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009758	i would like to get books having fewer than 9 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000009759	i would like to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009760	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009761	what is the image and number of ratings of the books with the lowest number of ratings	now => [ param:aggregateRating.ratingCount:Number , param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000009762	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009763	i need to search for book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000009764	find book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000009765	i am looking for books which have over 8 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 8 => notify
S5000009766	i want to find book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009767	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009768	retrieve 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009769	i need to search for QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009770	i want book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009771	find book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009772	i am looking to get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009773	please search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009774	i am looking to search for 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009775	search for book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000009776	i need to know the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009777	what is the image of book ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009778	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009779	i would like to get book which have 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009780	i would like to find books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009781	i need to find books which is 3 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009782	find book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009783	i need book which is 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009784	search for books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009785	search book having 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009786	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009787	find books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000009788	i want book that have 11 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 11 => notify
S5000009789	i would like to get book which have 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009790	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009791	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009792	i would like book which have number of ratings 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009793	which books get higher number of reviews than 10 and are 9 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 and param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009794	please find books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000009795	find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009796	search book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009797	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009798	show me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009799	which are the book with over 1 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009800	search for book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000009801	i want to search for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009802	show me what 's the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009803	please get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009804	what are the books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009805	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009806	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009807	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009808	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009809	what books is in QUOTED_STRING_0 and have greater rating than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009810	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009811	i need book that have number of ratings not less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009812	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009813	i want to find 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009814	show me what is the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009815	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009816	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009817	i am looking to retrieve QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009818	which books have language containing both QUOTED_STRING_0 and QUOTED_STRING_1 and number of reviews 4 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 4 and param:inLanguage:String =~ QUOTED_STRING_0 and param:inLanguage:String =~ QUOTED_STRING_1 => notify
S5000009819	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009820	how many awards in the books which has the highest number of ratings	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000009821	i would like to know the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009822	i need NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009823	i want to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009824	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009825	please retrieve books which have number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009826	which are 8 -star 0 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 and param:numberOfPages:Number == 0 => notify
S5000009827	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009828	search for books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009829	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009830	i am looking for books having 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009831	get books with 1 or above number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009832	i need books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000009833	tell me what 's the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009834	find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000009835	retrieve books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009836	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009837	i am looking to get books which have book format hardcover .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000009838	what are the QUOTED_STRING_0 which have number of ratings equal to 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000009839	search for books which have NUMBER_0 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
S5000009840	find 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000009841	please get 7 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000009842	please retrieve books having number of pages greater than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009843	get NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009844	get books with 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009845	tell me what 's the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009846	get 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009847	find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000009848	what book get number of ratings 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000009849	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009850	search for the QUOTED_STRING_0 with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009851	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009852	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000009853	i want book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000009854	search the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009855	retrieve 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009856	list books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009857	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009858	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000009859	i need to find 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000009860	get books that have 1 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000009861	retrieve book that have higher rating than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000009862	get book having 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009863	get books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009864	i need books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009865	tell me what is the isbn of book	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009866	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009867	i need books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009868	show me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009869	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000009870	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009871	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009872	i want books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009873	find the QUOTED_STRING_0 with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009874	please enumerate books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000009875	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009876	what is the number of pages of book ?	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009877	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009878	enumerate books which have 10 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000009879	i want to know the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009880	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000009881	what books get larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000009882	i am looking for the QUOTED_STRING_0 with the highest number of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000009883	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009884	i would like book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009885	i would like books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009886	i would like book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000009887	i am looking for book having rating 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000009888	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009889	what are the books with smaller rating than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000009890	enumerate books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009891	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009892	get books that have zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000009893	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009894	find book that have 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000009895	i want book having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009896	what books get book format hardcover ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000009897	i am looking for books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000009898	please search book with number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000009899	i am looking for the QUOTED_STRING_0 with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009900	get 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000009901	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009902	i need to know the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009903	please find 8 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000009904	please get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000009905	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009906	which are the NUMBER_0 page book with language equal to QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000009907	get book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009908	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000009909	get book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000009910	i need book with number of reviews lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000009911	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009912	search for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000009913	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009914	what is the number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009915	search for book with number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009916	i need to search book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009917	retrieve book which have less number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009918	which book get number of ratings zero and are 7 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.ratingValue:Number == 7 => notify
S5000009919	which are book that have less number of pages than 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000009920	find book that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000009921	find book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009922	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009923	i would like book having number of reviews NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000009924	find book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009925	get book which have higher number of reviews than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000009926	what are book with book format equal to ebook	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:EBook => notify
S5000009927	which are NUMBER_0 -star one page books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 1 => notify
S5000009928	which are the 7 -star 11 page book ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:numberOfPages:Number == 11 => notify
S5000009929	i want book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009930	list book that have 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000009931	please search book which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000009932	i need to know the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009933	i need the QUOTED_STRING_0 with the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009934	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009935	i would like books having rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000009936	what book have book format hardcover and number of pages greater than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover and param:numberOfPages:Number >= 3 => notify
S5000009937	which are the books with awards QUOTED_STRING_0 that have number of pages 2 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:award:Array(String) contains~ QUOTED_STRING_0 and param:numberOfPages:Number == 2 => notify
S5000009938	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009939	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009940	i would like 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000009941	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009942	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000009943	tell me what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009944	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009945	what are the book having 0 or lower number of reviews that have less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:aggregateRating.reviewCount:Number <= 0 => notify
S5000009946	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009947	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009948	get NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000009949	i need to search books that have rating at most 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000009950	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009951	i need to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009952	i want to retrieve books which have over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009953	search one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009954	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009955	get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009956	i want to find books which have larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000009957	i want book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000009958	get book having number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000009959	i want book with rating 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009960	i would like to find books having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000009961	get books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000009962	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009963	get books with over 1 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000009964	i would like books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009965	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009966	find the QUOTED_STRING_0 which has the minimum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009967	show me what 's the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009968	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000009969	search for book with number of ratings 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000009970	which books get over 10 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000009971	get book which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000009972	i want 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000009973	i need 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009974	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009975	i am looking for book which have rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000009976	i need to search for QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000009977	please retrieve book that have over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000009978	i need to get books with no more than 11 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000009979	get book which have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000009980	find book having lower number of reviews than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000009981	which is the QUOTED_STRING_0 which has the maximum number of pages ?	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000009982	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000009983	i am looking for book which have less number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000009984	search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009985	i need to search for books that have less number of pages than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000009986	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000009987	please search for book having 10 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000009988	find books that have 4 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000009989	get books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000009990	what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009991	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000009992	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000009993	please find books that do n't have number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000009994	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000009995	get 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000009996	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000009997	search 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000009998	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000009999	please find book that have 10 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000010000	please list book that have zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010001	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010002	i need to know the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010003	i am looking for books that have rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010004	i would like the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010005	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010006	retrieve books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010007	get 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010008	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010009	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010010	i need the QUOTED_STRING_0 with the least awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010011	i need the link and rating of the book which has the minimum number of pages .	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010012	find books which have number of pages 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010013	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010014	tell me what 's the book edition of books	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010015	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010016	list book that have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010017	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010018	tell me what is the number of awards in books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010019	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010020	what are 11 -star book isbn QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010021	please list 6 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000010022	i need books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010023	i need to find 5 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010024	i am looking for 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010025	i would like to search book which have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010026	i am looking for book with over zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010027	search 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010028	i would like the QUOTED_STRING_0 which has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010029	i want book with higher number of reviews than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 6 => notify
S5000010030	which book have greater number of ratings than 7 and are 4 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 and param:aggregateRating.ratingValue:Number == 4 => notify
S5000010031	i would like to get books having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000010032	i need 7 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000010033	i need the QUOTED_STRING_0 with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010034	retrieve book with less rating than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010035	give me the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010036	which are the books that have rating 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010037	which are the books having rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010038	tell me what is the url of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010039	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010040	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010041	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010042	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010043	get books which have over 1 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010044	show me the number of awards in book	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010045	get book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010046	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010047	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010048	i need NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010049	i would like to find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010050	i would like to know the number of pages of books .	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010051	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010052	what are the book which have no more than 0 awards and with rating 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 and param:aggregateRating.ratingValue:Number == 6 => notify
S5000010053	i need the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010054	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010055	i would like books having rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010056	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010057	get 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010058	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010059	i want books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010060	get 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010061	what are the book with over NUMBER_0 number of reviews that have 6 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:numberOfPages:Number == 6 => notify
S5000010062	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010063	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010064	i need book that have number of ratings not less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010065	please list book that have zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010066	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010067	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010068	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010069	retrieve the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010070	tell me what is the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010071	i am looking to find book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010072	retrieve the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010073	i want to retrieve book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010074	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010075	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010076	search for books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010077	enumerate one page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010078	retrieve books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010079	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010080	retrieve books with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010081	get book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010082	get 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010083	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010084	i need to search for book that have fewer than 1 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010085	i would like NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010086	i need to get 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010087	search 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010088	search for book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010089	i want books with over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010090	i would like to search book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010091	i am looking to get 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010092	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010093	search for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010094	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010095	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010096	i am looking for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010097	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010098	i need books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010099	what book is NUMBER_0 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010100	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010101	list books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010102	i need 9 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010103	i am looking to search books with NUMBER_0 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010104	get books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010105	i need to find book with 1 or lower number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010106	i would like book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010107	i need books which have 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010108	retrieve book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010109	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010110	i would like books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010111	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010112	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010113	i need to search for books which have 9 or below number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010114	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010115	i want to search for book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010116	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010117	i want to get book that have higher number of pages than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010118	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010119	i need to get books having book format hardcover	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000010120	get the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010121	get 10 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010122	i would like 12 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000010123	i need books which have 10 or above rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010124	i want book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010125	search for books with 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010126	i want book which have 11 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010127	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010128	list books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010129	please search for 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010130	which are the people for QUOTED_STRING_0	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000010131	get books with 9 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010132	i need the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010133	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010134	i need to search for NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010135	please list book that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010136	get book that have over 0 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010137	what books have 4 pages and number of reviews equal to 7 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 7 and param:numberOfPages:Number == 4 => notify
S5000010138	what is the number of pages and url of the books with the highest number of pages ?	now => [ param:numberOfPages:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010139	i need to search for book that is zero -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010140	i need to find zero page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010141	get books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010142	what are book with number of pages equal to 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010143	enumerate books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010144	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010145	give me the url of person	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010146	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010147	search for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010148	which are QUOTED_STRING_0 with number of reviews smaller than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010149	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010150	i want to search books that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010151	search books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000010152	search for the QUOTED_STRING_0 with the maximum number of ratings	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010153	i need book with one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010154	i would like book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010155	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010156	get book without fewer than 12 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 12 => notify
S5000010157	search 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010158	please list books which have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010159	please list books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000010160	retrieve books that have one or below rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010161	find 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000010162	i would like books which have 9 or below number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010163	i need the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010164	tell me what 's the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010165	tell me what is the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010166	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010167	i want to search books that have 4 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000010168	i want to retrieve book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010169	get book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000010170	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010171	i need the link and rating of the book which has the minimum number of pages	now => [ param:aggregateRating.ratingValue:Number , param:url:Entity(tt:url) ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010172	what QUOTED_STRING_0 have rating smaller than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010173	i am looking to get books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010174	i am looking for 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010175	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010176	list 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010177	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010178	i want books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010179	get book with rating 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010180	show me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010181	retrieve book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010182	i want to search books that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010183	i want 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010184	how many awards in QUOTED_STRING_0	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) => notify
S5000010185	which book get larger number of pages than 5 and are 7 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:numberOfPages:Number >= 5 => notify
S5000010186	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010187	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010188	what is the link of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010189	i would like to find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010190	get 9 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 9 => notify
S5000010191	tell me what is the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010192	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010193	i would like to get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010194	i want book which have number of ratings one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 1 => notify
S5000010195	get books which have number of ratings 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 3 => notify
S5000010196	show me the book format and language of the books with the lowest number of ratings .	now => [ param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) , param:inLanguage:String ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010197	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010198	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010199	show me what 's the number of ratings of book	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010200	i want book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000010201	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010202	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010203	i am looking to search for books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010204	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010205	i am looking to get books which have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010206	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010207	get book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010208	search books which have number of ratings NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000010209	i would like books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000010210	i would like books which have number of pages lower than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010211	i need books which are 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010212	get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010213	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010214	what are the QUOTED_STRING_0 which have rating smaller than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010215	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010216	i am looking for the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010217	find book having lower number of pages than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010218	i would like to find books having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010219	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010220	please retrieve books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010221	i would like the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010222	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010223	get 11 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010224	i would like 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010225	i need 11 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010226	please enumerate book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010227	find the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010228	i would like books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010229	i would like to search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010230	please enumerate 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010231	i want 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010232	search for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010233	please search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010234	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010235	i would like to retrieve book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010236	find book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000010237	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010238	i want to know the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010239	find book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010240	find books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010241	get book which have number of ratings at least 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010242	find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010243	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010244	please list books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010245	enumerate book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010246	i want books with number of ratings 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000010247	please enumerate book that is 2 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010248	i would like book that have number of reviews larger than 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010249	get book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010250	get books which have 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010251	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010252	i need to retrieve books that have greater number of ratings than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010253	tell me what is the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010254	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010255	get 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010256	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010257	i am looking for the rating of book	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010258	which books get rating less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010259	i need the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010260	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010261	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010262	i want to find books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010263	get book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010264	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010265	please list books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000010266	give me the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010267	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010268	i need books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010269	get QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010270	what is the url of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010271	what is the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010272	what book get number of reviews greater than 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010273	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000010274	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010275	which are the zero -star book with greater number of ratings than 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000010276	i need books with number of ratings not more than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010277	i am looking for books which have number of ratings less than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010278	show me what 's the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010279	i want to know the image of book	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010280	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010281	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010282	i want the QUOTED_STRING_0 with the fewest awards	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010283	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010284	retrieve books which have zero or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010285	i would like to search for book with larger number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010286	search for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010287	get book that have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010288	i want books with 12 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000010289	i need books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000010290	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000010291	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010292	i would like to retrieve books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010293	i would like books having 3 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010294	show me what 's the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010295	find book that have larger number of pages than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000010296	please list books which have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010297	i would like book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010298	search books which have over 12 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010299	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010300	what are the books that have number of reviews 3 and are 4 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 4 => notify
S5000010301	i need to search books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010302	please search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010303	i want 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010304	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010305	get books with rating greater than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010306	i would like the QUOTED_STRING_0 with the least awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010307	i want book that is one -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010308	retrieve books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010309	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010310	i am looking for the QUOTED_STRING_0 with the highest number of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010311	i would like NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010312	i want to retrieve book which have 7 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010313	i need book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010314	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010315	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010316	please list book with number of reviews greater than 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010317	i need the isbn of books	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010318	i need book that have zero number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010319	search the number of awards in the books	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010320	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010321	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010322	i am looking for books which have 7 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000010323	i would like books with number of ratings 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 9 => notify
S5000010324	show me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010325	get book that have 12 or less number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 12 => notify
S5000010326	i am looking for the QUOTED_STRING_0 with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010327	i need book with one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010328	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010329	i would like to search for books that have 1 or above number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010330	how many QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) => notify
S5000010331	get book with number of reviews more than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010332	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010333	get book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010334	i would like to search books with language QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010335	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010336	please search 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010337	what is the url of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010338	tell me the number of reviews of book	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010339	retrieve books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010340	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010341	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010342	tell me what is the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010343	search one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010344	i need to retrieve one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010345	search for the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010346	which are the book which have rating 6 , with number of pages 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 and param:numberOfPages:Number == 9 => notify
S5000010347	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010348	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010349	get book which have greater number of ratings than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010350	i need to search for books that have less number of pages than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010351	please enumerate books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000010352	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010353	get books that have smaller number of ratings than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000010354	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010355	enumerate books having greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010356	find the QUOTED_STRING_0 with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010357	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010358	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010359	i would like to get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010360	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010361	get books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010362	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010363	what book is 7 -star and get less number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010364	please search for 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010365	search books which have over 1 number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010366	i would like 12 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000010367	i would like one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010368	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010369	i want to search for books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010370	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010371	i need books with more rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010372	i would like to find book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010373	i would like NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010374	get books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000010375	please find books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010376	get book with number of reviews 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 8 => notify
S5000010377	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010378	please search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010379	i want to find one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010380	what is the book edition and number of ratings of the books with the lowest number of ratings	now => [ param:aggregateRating.ratingCount:Number , param:bookEdition:String ] of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010381	i need to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000010382	i would like to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010383	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010384	retrieve the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010385	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010386	what book get number of ratings lower than 6 and are zero page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 and param:numberOfPages:Number == 0 => notify
S5000010387	please search for books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010388	search for the QUOTED_STRING_0 which has the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010389	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010390	search 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010391	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010392	retrieve book with number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010393	i need to find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010394	i need 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010395	please list books which have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010396	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010397	retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010398	i would like to find books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010399	retrieve book that have 0 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 0 => notify
S5000010400	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010401	search for books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010402	what books have number of reviews 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010403	i would like 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010404	enumerate books which have number of ratings more than 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 4 => notify
S5000010405	i want books with 11 or higher number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010406	please retrieve books having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000010407	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010408	please find book with fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010409	which book have number of reviews lower than one and rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 and param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010410	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010411	please search for books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010412	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010413	search for 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010414	i am looking for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010415	get books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010416	what are the books that have number of reviews 3 and are 4 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 3 and param:numberOfPages:Number == 4 => notify
S5000010417	i want books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010418	what are 10 page book with number of ratings 5 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 and param:numberOfPages:Number == 10 => notify
S5000010419	find NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010420	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010421	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010422	what book get 9 or lower number of ratings and 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 and param:numberOfPages:Number >= 3 => notify
S5000010423	retrieve 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000010424	i need book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010425	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010426	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010427	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010428	list books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010429	which are the book having number of ratings at least 3 which is 12 -star ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:aggregateRating.ratingValue:Number == 12 => notify
S5000010430	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010431	i am looking to search books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010432	tell me what is the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010433	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010434	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010435	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010436	i want to know the url and author of the books which has the highest number of ratings	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:url:Entity(tt:url) ] of ( ( sort param:aggregateRating.ratingCount:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010437	i would like the QUOTED_STRING_0 which has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010438	search for book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010439	find book that have 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010440	list books that have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010441	i would like books having rating less than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 12 => notify
S5000010442	i want books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010443	search for book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010444	please search books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010445	i would like to search 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010446	please list book that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010447	i would like book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000010448	i am looking to get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010449	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010450	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010451	search book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010452	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010453	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010454	i want to search for 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010455	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010456	i would like to know the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010457	i want to retrieve book with 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010458	search for book that have rating not more than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 2 => notify
S5000010459	what book get number of ratings 0 and NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010460	i want books with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010461	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010462	search for books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010463	i am looking for book having 0 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010464	tell me what 's the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010465	retrieve book which have 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010466	list book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000010467	i want book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010468	tell me what is the language of book	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010469	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010470	i need book that have 7 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010471	get one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010472	what is the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010473	get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010474	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010475	i would like to search book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010476	get book which have zero rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010477	i need to find books with less number of ratings than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010478	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010479	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010480	search for books with book format paperback	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Paperback => notify
S5000010481	search NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010482	i need to search book which is 10 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010483	get 10 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010484	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010485	i would like to search books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010486	i would like books having no fewer than one award .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000010487	which are books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010488	please search for book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010489	i am looking to retrieve NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010490	please get book with zero pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010491	i am looking for book that have one or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010492	i would like to retrieve book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010493	i need to search for book that is zero -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010494	get book that have larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010495	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010496	search books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000010497	please search for books with 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010498	show me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010499	get book that have larger number of pages than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010500	i would like to retrieve books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010501	search books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000010502	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010503	i would like book having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010504	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010505	retrieve book which have less number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 2 => notify
S5000010506	i would like to find books having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010507	what is the link of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010508	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010509	search books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010510	i need books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010511	i would like to find book having lower number of reviews than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010512	i would like book that have lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000010513	search for book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010514	tell me the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010515	tell me what is the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010516	retrieve book having number of pages less than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010517	i want to get books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010518	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010519	i need book that have 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010520	retrieve 2 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010521	i want to retrieve books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010522	i need to search for QUOTED_STRING_0 books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010523	search for book that have one or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010524	i want to find books which have larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010525	i need book with rating 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010526	which books get greater number of pages than 2 and number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 and param:numberOfPages:Number >= 2 => notify
S5000010527	show me what is the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010528	i would like to retrieve books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010529	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010530	what is the number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010531	i need to search for book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010532	find books that have rating at most 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010533	i would like 2 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000010534	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010535	i am looking to search books with NUMBER_0 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010536	enumerate one page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010537	retrieve books that have one or below rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010538	list book having fewer than 9 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 9 => notify
S5000010539	get 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000010540	tell me what 's the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010541	i need to search for book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010542	i want book which have over 1 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010543	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010544	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010545	i want the QUOTED_STRING_0 with the fewest awards .	now => ( sort param:count:Number asc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010546	i want to search books that have 4 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 4 => notify
S5000010547	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010548	find book with rating one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010549	please enumerate 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000010550	i want to retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010551	i would like book that have number of reviews larger than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010552	what is the language of books	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010553	retrieve books which have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010554	i want to retrieve book that have 5 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010555	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010556	please retrieve books having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000010557	enumerate books which have 10 or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010558	i would like 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010559	enumerate 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010560	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010561	retrieve 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010562	what are the QUOTED_STRING_0 which have rating smaller than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010563	search 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010564	search for 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010565	search book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000010566	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010567	i want the QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010568	i am looking for books that have larger number of ratings than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010569	search for book with over 10 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010570	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010571	i would like to know the awards of book .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010572	please search for 4 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010573	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010574	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010575	search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010576	search NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010577	i want books with 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010578	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010579	show me what 's the number of awards in the book .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010580	i need NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010581	show me what 's the link of person .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010582	which are the QUOTED_STRING_0 having rating one ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010583	i am looking for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010584	i am looking for books which have number of ratings greater than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000010585	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010586	i need book having number of ratings at most NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010587	i need book that have over one number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010588	i am looking for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010589	retrieve books having isbn containing both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 and param:isbn:String =~ QUOTED_STRING_1 => notify
S5000010590	i want 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010591	show me what is the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010592	search books having 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010593	i would like to find books having smaller number of pages than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010594	find book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010595	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010596	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010597	please list 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000010598	please get book having number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010599	what are 7 -star 7 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 and param:numberOfPages:Number == 7 => notify
S5000010600	get 6 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000010601	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010602	i need books with more rating than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010603	i am looking for QUOTED_STRING_0 book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010604	find the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010605	i would like books which have number of pages 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000010606	find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010607	get books that have 1 or above number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 1 => notify
S5000010608	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010609	get books with rating zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010610	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010611	get 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010612	retrieve book with number of reviews lower than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010613	get 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010614	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010615	how many awards in the books with the highest number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000010616	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010617	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010618	search for books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010619	search NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010620	please list one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010621	tell me what is the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010622	what books get lower number of pages than 3 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010623	i would like to find books that have zero awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) == 0 => notify
S5000010624	i would like to retrieve 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010625	show me what 's the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010626	i want the QUOTED_STRING_0 with the highest number of pages	now => ( sort param:numberOfPages:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010627	i want books with number of ratings 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000010628	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010629	i need to search for books with 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000010630	get book having 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010631	retrieve books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010632	which books get at least 5 awards and rating equal to zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 5 and param:aggregateRating.ratingValue:Number == 0 => notify
S5000010633	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010634	get book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000010635	i want book which have over 1 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010636	i need books that have zero or greater number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010637	find book having one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010638	i want to find book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010639	please enumerate books having 3 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000010640	i need to search for books with 8 or less number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000010641	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010642	get book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010643	tell me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010644	i am looking to get 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010645	i need book having number of reviews NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
S5000010646	what are books which are 9 page ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010647	i need NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010648	what is the number of ratings of books ?	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010649	please search book with number of ratings 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 7 => notify
S5000010650	i would like to find book having book edition containing QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010651	i would like to know the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010652	i am looking for books having number of pages 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000010653	find book that have over 9 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010654	i need to search for book that have number of ratings more than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010655	get 0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010656	enumerate books which have 10 or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 10 => notify
S5000010657	i would like to know the language of book .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010658	i want to get book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010659	i need to find NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010660	which are the 2 page book having book edition QUOTED_STRING_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 2 => notify
S5000010661	i need to get books having book format hardcover	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000010662	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000010663	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010664	which are the NUMBER_0 page book with language equal to QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000010665	what is the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010666	i want to find books which have 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010667	get book that have 10 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010668	what are QUOTED_STRING_0 that have number of pages 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == 0 => notify
S5000010669	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010670	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010671	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010672	retrieve books that have number of pages greater than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 6 => notify
S5000010673	find the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010674	i want books having larger number of pages than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010675	search books isbn QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010676	i want to find books which have 1 or below number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000010677	i want book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010678	find NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010679	get book having number of reviews 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 1 => notify
S5000010680	i want 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010681	get books having 7 or higher number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010682	find one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010683	please find books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010684	get books that have rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010685	which book have 9 pages and is 5 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:numberOfPages:Number == 9 => notify
S5000010686	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010687	retrieve book which have 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010688	find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000010689	which books are isbn QUOTED_STRING_0 and have larger rating than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 and param:isbn:String =~ QUOTED_STRING_0 => notify
S5000010690	i need NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010691	retrieve 1 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010692	get books which have number of pages lower than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000010693	get book having 4 or above number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010694	enumerate books having greater rating than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010695	please enumerate books which have over 11 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010696	i am looking to search 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010697	i am looking to search books which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010698	i need to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010699	retrieve book with less rating than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000010700	list books having 10 or above rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000010701	give me the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010702	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010703	list book having smaller rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 10 => notify
S5000010704	what books get lower number of pages than 8 and over 9 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 9 and param:numberOfPages:Number <= 8 => notify
S5000010705	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010706	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010707	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010708	i am looking to search for 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010709	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010710	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010711	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010712	tell me what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010713	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010714	i need to search for book that have fewer than 1 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010715	i am looking for the QUOTED_STRING_0 with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000010716	what books have over 0 number of reviews and less rating than NUMBER_0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010717	i am looking to search book with number of reviews at least 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000010718	i would like book which have zero number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010719	i want to know the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010720	please enumerate books that have over 9 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010721	i am looking for the image of book .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010722	what book get larger number of ratings than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010723	i am looking for the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010724	get book with number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000010725	find book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010726	i want books with rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010727	get books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010728	find the book edition of books .	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010729	i am looking to search for 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010730	i want book with number of reviews more than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000010731	i need to search for book that is zero -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010732	i would like books that have number of reviews zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010733	i need the link of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010734	what QUOTED_STRING_0 has the minimum number of pages ?	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010735	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010736	retrieve one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010737	i need to get books having book format hardcover .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000010738	i am looking for the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010739	please enumerate 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010740	i want to get books with 5 or greater number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 5 => notify
S5000010741	search the number of awards in the books .	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010742	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010743	i would like to search books with language QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010744	i want to search for book with number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010745	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010746	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010747	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010748	i would like book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010749	i need book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010750	get books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010751	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010752	show me the link of books .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010753	please enumerate books which have over 11 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000010754	i am looking to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010755	enumerate QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010756	what are 5 -star books ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010757	i need book that have number of ratings not less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010758	retrieve books which have greater number of ratings than 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010759	what are books having number of reviews at least 1 and 2 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 and param:numberOfPages:Number == 2 => notify
S5000010760	retrieve 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010761	i am looking for books which are 8 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 8 => notify
S5000010762	search for books with 0 or more rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 0 => notify
S5000010763	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010764	i am looking for the rating of book .	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010765	i am looking for book having rating 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010766	search for books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010767	search books which have number of ratings NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == NUMBER_0 => notify
S5000010768	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010769	i need to know the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010770	how many awards in the book which has the highest number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000010771	search books that have 8 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010772	i want books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010773	search for book having number of pages 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010774	please enumerate book that have 5 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010775	i would like book having number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010776	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010777	enumerate 0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010778	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010779	retrieve book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010780	i would like books having number of reviews smaller than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000010781	search 10 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010782	retrieve the QUOTED_STRING_0 with the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010783	i would like to get book having 8 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 8 => notify
S5000010784	please enumerate 8 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 8 => notify
S5000010785	i would like book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010786	i would like to retrieve books having higher number of pages than 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010787	i want books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010788	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010789	retrieve book with zero number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 => notify
S5000010790	i would like to get books which have number of ratings higher than NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000010791	retrieve one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010792	please search for books which do not have fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010793	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010794	i would like to search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010795	i am looking to get books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010796	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010797	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010798	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010799	show me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010800	i need to search for book that is zero -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010801	retrieve books which have more than 7 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 7 => notify
S5000010802	i want to search for book having rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010803	i need to search books having number of ratings 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 5 => notify
S5000010804	i am looking to retrieve 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010805	find book having NUMBER_0 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010806	please search 11 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010807	retrieve books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010808	i want book which have 4 or below number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 4 => notify
S5000010809	get book having number of ratings less than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000010810	list 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010811	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010812	i want to get 10 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010813	i would like to search for book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010814	i need books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010815	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010816	i would like book having less number of reviews than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 11 => notify
S5000010817	i would like to get book which have 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010818	retrieve 4 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010819	get books with over 1 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010820	i would like to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010821	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010822	get 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010823	get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010824	i want to get book having NUMBER_0 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010825	i am looking for books that have rating 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010826	tell me what 's the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010827	enumerate 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010828	i need book that have number of ratings not less than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010829	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010830	i am looking for books which have number of pages zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010831	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010832	tell me what 's the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010833	please enumerate 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010834	tell me what 's the number of ratings of books	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010835	please retrieve books which have number of ratings at most NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010836	retrieve books having 1 or greater rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010837	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010838	give me the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010839	i would like books having less number of pages than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010840	i am looking to get 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000010841	get 11 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 11 => notify
S5000010842	find 6 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000010843	please enumerate book having rating 4	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000010844	i need to search books that have rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000010845	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010846	get book that have fewer than zero awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 0 => notify
S5000010847	what is the number of reviews of books ?	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010848	show me what is the rating of books	now => [ param:aggregateRating.ratingValue:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010849	i want books having over 4 number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000010850	search for 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010851	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000010852	i am looking for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010853	what are QUOTED_STRING_0 with 5 or greater number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 5 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010854	i need the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010855	get book which have rating zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010856	which are books having 10 or greater number of reviews which have 7 or lower number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 and param:numberOfPages:Number <= 7 => notify
S5000010857	what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010858	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010859	find book with rating one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010860	what are the QUOTED_STRING_0 with number of ratings lower than 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 10 and param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 => notify
S5000010861	retrieve the QUOTED_STRING_0 with the highest number of ratings .	now => ( sort param:aggregateRating.ratingCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010862	i am looking for 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010863	what is the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010864	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010865	get books which have NUMBER_0 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
S5000010866	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010867	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010868	i am looking to search for books which have greater number of ratings than 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 => notify
S5000010869	get books having number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000010870	tell me what 's the url of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010871	i would like the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010872	which book have over 7 number of ratings and less number of ratings than zero ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 and param:aggregateRating.ratingCount:Number >= 7 => notify
S5000010873	search for books with 10 or lower number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 10 => notify
S5000010874	get 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010875	search 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010876	please enumerate books having higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010877	show me what is the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010878	which are the QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000010879	please retrieve books which is in QUOTED_STRING_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000010880	i need 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010881	what book get smaller number of ratings than 5 and are 7 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 and param:aggregateRating.ratingValue:Number == 7 => notify
S5000010882	what is the author and image of the books with the lowest number of reviews	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010883	i want to retrieve books having 12 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010884	enumerate 5 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000010885	i need books which are 1 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000010886	get 12 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000010887	tell me the number of reviews of books	now => [ param:aggregateRating.reviewCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010888	i want to find book having 10 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000010889	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010890	i am looking to search for books which have lower number of ratings than one .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000010891	which books have 9 or below number of reviews and 4 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 and param:numberOfPages:Number == 4 => notify
S5000010892	i need books which have number of ratings at least 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000010893	i would like books which have less number of ratings than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 2 => notify
S5000010894	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010895	how many awards in the book which has the highest rating ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000010896	what book have number of reviews at least 1 and is 5 -star	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 and param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010897	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010898	i want to find book having rating 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010899	which books get over 10 number of ratings ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010900	get book that have greater number of pages than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= NUMBER_0 => notify
S5000010901	retrieve book having rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010902	i need to search for books that have 9 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010903	get book with fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010904	search for books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010905	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010906	search for book which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010907	i need 4 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010908	i would like book having greater number of ratings than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010909	i would like to get books which are 9 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000010910	i am looking to get books which have book format hardcover	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookFormat:Enum(EBook,AudiobookFormat,Hardcover,Paperback) == enum:Hardcover => notify
S5000010911	please enumerate book with greater rating than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000010912	search for book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000010913	retrieve the QUOTED_STRING_0 with the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010914	please get books which have rating larger than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 6 => notify
S5000010915	what are the book having fewer than 1 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 1 => notify
S5000010916	show me what 's the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010917	find books that have zero or greater number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000010918	what are books having the isbn containing either QUOTED_STRING_0 or QUOTED_STRING_1 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String in_array~ [ QUOTED_STRING_0 , QUOTED_STRING_1 ] => notify
S5000010919	i would like to know the number of pages of books	now => [ param:numberOfPages:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010920	i want to search books with greater number of ratings than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 => notify
S5000010921	please retrieve book having 9 or lower number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 9 => notify
S5000010922	get book that have 11 pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010923	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010924	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010925	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000010926	i need books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000010927	what is the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010928	what are the awards of books ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010929	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010930	i want to know the awards of books .	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010931	i want books with 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010932	i need books with number of ratings not more than 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000010933	tell me what 's the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010934	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010935	what are the books with less number of reviews than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 12 => notify
S5000010936	i would like book which have number of reviews lower than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000010937	give me the number of ratings of book .	now => [ param:aggregateRating.ratingCount:Number ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010938	i need the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010939	i want 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000010940	get 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010941	get books having number of ratings lower than 6 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000010942	give me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010943	what are 11 page QUOTED_STRING_0 books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 and param:numberOfPages:Number == 11 => notify
S5000010944	search books with NUMBER_0 or below number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= NUMBER_0 => notify
S5000010945	please search 11 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000010946	i would like 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010947	search books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010948	search for books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000010949	which book get no number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000010950	i need book which have 1 or greater number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010951	what are book which is 10 -star and have number of pages 10 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 and param:numberOfPages:Number == 10 => notify
S5000010952	which are the books which have rating at most 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000010953	i need the isbn of books .	now => [ param:isbn:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010954	search for 7 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010955	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010956	i need to get books with number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000010957	please list books with rating smaller than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000010958	enumerate books having lower number of reviews than 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 10 => notify
S5000010959	i am looking for the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010960	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000010961	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010962	which are the QUOTED_STRING_0 's people	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000010963	i am looking for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010964	get book which have over 3 rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000010965	i would like 3 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010966	find book that have over 9 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 9 => notify
S5000010967	get book which have zero rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 0 => notify
S5000010968	show me what 's the link of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010969	search for the QUOTED_STRING_0 which has the lowest number of pages .	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000010970	enumerate books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010971	how many awards are there in the book which has the minimum number of pages	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000010972	find 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010973	what is the number of awards in the books ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) => notify
S5000010974	please get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
S5000010975	i would like the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010976	retrieve 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000010977	i am looking for book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000010978	i am looking to find one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000010979	i need book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000010980	list book having book edition containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010981	please find book having book edition QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:bookEdition:String =~ QUOTED_STRING_0 => notify
S5000010982	i am looking for 10 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000010983	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000010984	tell me what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010985	i would like to retrieve books having higher number of pages than 1 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000010986	show me the url of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000010987	i would like to know the link of books	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000010988	tell me the isbn and author of the books with the lowest number of pages .	now => [ param:author:Entity(edu.stanford.cs294s.sierra:Person) , param:isbn:String ] of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) => notify
S5000010989	i want books with 12 or higher number of ratings .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000010990	i need to search for books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000010991	get books which have no fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000010992	i am looking for books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000010993	get books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000010994	search for 7 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 7 => notify
S5000010995	i would like books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000010996	i am looking to search for 3 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 3 => notify
S5000010997	what books get over 10 number of ratings and are 12 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 10 and param:numberOfPages:Number == 12 => notify
S5000010998	please list books that have 9 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 9 => notify
S5000010999	get NUMBER_0 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000011000	please search for book that have smaller number of ratings than 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 5 => notify
S5000011001	i want to search for book having rating 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000011002	search for books having less number of pages than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000011003	i want books which have over 12 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000011004	please enumerate books isbn QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011005	i am looking for 5 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000011006	which are the 6 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000011007	i am looking for book which have 1 or greater number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011008	please get books which have isbn containing QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:isbn:String =~ QUOTED_STRING_0 => notify
S5000011009	i am looking for books that have higher number of reviews than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011010	get books which have over 7 number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 7 => notify
S5000011011	get books which have number of ratings higher than NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000011012	i want 5 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 5 => notify
S5000011013	get 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000011014	i want book which have number of reviews 0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011015	i am looking to get 1 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000011016	i need 7 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 7 => notify
S5000011017	i would like to search book which have over 6 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 6 => notify
S5000011018	enumerate books with language including QUOTED_STRING_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:inLanguage:String =~ QUOTED_STRING_0 => notify
S5000011019	i need books which have 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000011020	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011021	get book that have 11 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 11 => notify
S5000011022	i would like 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000011023	tell me what is the url of book .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011024	i would like to get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000011025	search book which have number of reviews 0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011026	i am looking for books that have 3 or more number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000011027	i need to find books which is 3 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000011028	enumerate 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011029	get book with number of reviews 5 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000011030	retrieve books which have one or more number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000011031	find the QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011032	how many awards does the books with the largest number of awards have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( @edu.stanford.cs294s.sierra.Book ) ) ) [ 1 ] ) ) => notify
S5000011033	which are the book that have zero number of ratings and having zero number of pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 0 and param:numberOfPages:Number == 0 => notify
S5000011034	get 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011035	i want to retrieve book with 1 or below number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 1 => notify
S5000011036	what is the url of people ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011037	search for the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011038	i would like to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011039	i am looking for books which have 7 or more rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 7 => notify
S5000011040	get 6 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 => notify
S5000011041	retrieve book having number of pages less than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 7 => notify
S5000011042	please search for books which have number of ratings at least 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 11 => notify
S5000011043	please list books which have lower number of ratings than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 1 => notify
S5000011044	retrieve book that have 0 or lower number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011045	i need books which have over zero number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011046	search for book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000011047	i want books with number of ratings 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 4 => notify
S5000011048	please enumerate book with greater rating than 12 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 12 => notify
S5000011049	i need to search for 12 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000011050	what book are 8 page and have rating larger than 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 and param:numberOfPages:Number == 8 => notify
S5000011051	show me what 's the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011052	please search for 2 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000011053	i am looking for book that have over 0 number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 0 => notify
S5000011054	please search for 2 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 2 => notify
S5000011055	how many awards are there in the book which has the minimum number of pages ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:numberOfPages:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000011056	i need books with more rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000011057	i need to search book that have higher rating than 9	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000011058	i would like 2 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 2 => notify
S5000011059	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011060	get book with number of reviews lower than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 9 => notify
S5000011061	i would like book with over one rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000011062	find books that have rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000011063	get books with less number of ratings than zero	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 0 => notify
S5000011064	what are the people of QUOTED_STRING_0 .	now => ( ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) join ( @edu.stanford.cs294s.sierra.Person ) ) filter param:id:Entity(edu.stanford.cs294s.sierra:Person) == param:author:Entity(edu.stanford.cs294s.sierra:Person) => notify
S5000011065	show me what is the language of books .	now => [ param:inLanguage:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011066	i need to search books that have rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000011067	i need to get books without more than 11 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 11 => notify
S5000011068	please search book with number of reviews at least 3 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000011069	get 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000011070	what is the link of books ?	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011071	tell me the image of books	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011072	get books that have at most 2 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000011073	find NUMBER_0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011074	i would like to retrieve books with more rating than 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 10 => notify
S5000011075	i need the QUOTED_STRING_0 with the minimum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011076	what is the image of books ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011077	get NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000011078	which are the books having rating equal to 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 12 => notify
S5000011079	please enumerate 10 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000011080	get one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011081	tell me what 's the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011082	i want to search for book that have rating higher than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 2 => notify
S5000011083	i want book which have number of reviews lower than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000011084	i want to search books which are 10 -star .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011085	i would like to know the image of books .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011086	get book that have number of pages 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000011087	i am looking for the QUOTED_STRING_0 with the most awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011088	i want book without pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000011089	please search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000011090	i would like book that have NUMBER_0 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000011091	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011092	i need the QUOTED_STRING_0 with the largest count of awards	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011093	search for book having lower number of pages than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 2 => notify
S5000011094	i want book which have number of reviews lower than one	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
S5000011095	i am looking for book without fewer than 0 awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000011096	get zero page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000011097	which are QUOTED_STRING_0 having NUMBER_0 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 and param:numberOfPages:Number == NUMBER_0 => notify
S5000011098	search NUMBER_0 page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011099	i need to retrieve one page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011100	tell me what is the url of book	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011101	please enumerate books with rating not more than 7	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 7 => notify
S5000011102	what are the awards of book	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011103	i want books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000011104	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000011105	i am looking for the QUOTED_STRING_0 which has the lowest number of pages	now => ( sort param:numberOfPages:Number asc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011106	enumerate 4 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000011107	i am looking to get books which are 9 page	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000011108	show me the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011109	what book get number of ratings lower than 6	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number <= 6 => notify
S5000011110	i want books which have over 3 rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 3 => notify
S5000011111	search for NUMBER_0 -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
S5000011112	i need to search for 4 -star book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000011113	find 10 -star books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011114	please enumerate book having rating 4 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 4 => notify
S5000011115	what is the image of people ?	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011116	i would like to search book that have number of ratings more than zero .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000011117	i need to know the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011118	i would like books that have larger number of ratings than 12	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 12 => notify
S5000011119	i would like the url of people .	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011120	which are NUMBER_0 -star one page books	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:numberOfPages:Number == 1 => notify
S5000011121	i am looking for books which have over zero number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 0 => notify
S5000011122	get NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011123	retrieve the QUOTED_STRING_0 with the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000011124	retrieve books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000011125	which are 12 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 12 => notify
S5000011126	i need the QUOTED_STRING_0 with the largest count of awards .	now => ( sort param:count:Number desc of ( compute count ( param:award:Array(String) ) of ( ( @edu.stanford.cs294s.sierra.Book ) filter param:id:Entity(edu.stanford.cs294s.sierra:Book) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S5000011127	i need to find book with 1 or above number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000011128	please search books which have no fewer than 0 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 0 => notify
S5000011129	i would like book that have lower number of reviews than 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 8 => notify
S5000011130	i would like to search book with number of reviews more than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 5 => notify
S5000011131	get book that have over 0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 0 => notify
S5000011132	which are book that have 3 or higher number of ratings and having rating 8	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= 3 and param:aggregateRating.ratingValue:Number == 8 => notify
S5000011133	search for books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000011134	retrieve books having 1 or greater rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 1 => notify
S5000011135	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011136	get books having number of reviews smaller than 7 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 7 => notify
S5000011137	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011138	enumerate 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011139	what is the book edition of books ?	now => [ param:bookEdition:String ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011140	what are books with 9 pages ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000011141	find book having one or more number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 1 => notify
S5000011142	get book with number of reviews 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 5 => notify
S5000011143	i need book that have higher rating than 9 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 9 => notify
S5000011144	get books having 6 or less number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000011145	i want to get book that have NUMBER_0 or lower rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
S5000011146	i want book with greater number of reviews than 2 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000011147	retrieve one page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011148	what are the awards of book ?	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011149	i need to retrieve book which have 1 page .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 1 => notify
S5000011150	retrieve books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011151	what is the image of people	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011152	i am looking for books that have at most 2 awards .	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) <= 2 => notify
S5000011153	retrieve book with greater number of reviews than 2	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 2 => notify
S5000011154	get NUMBER_0 page book	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011155	what books have number of reviews 0 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 0 => notify
S5000011156	search for books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000011157	get books with rating at most 8 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000011158	please retrieve books having number of pages greater than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 11 => notify
S5000011159	i would like to know the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011160	what are book which have 1 or below number of pages and having rating 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 6 and param:numberOfPages:Number <= 1 => notify
S5000011161	i would like to search books that have 3 or more number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 3 => notify
S5000011162	i am looking to find books with 9 pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 9 => notify
S5000011163	get book with higher number of reviews than 11	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 11 => notify
S5000011164	i need to get 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000011165	what are book having number of reviews at least 10 and number of ratings 6 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number == 6 and param:aggregateRating.reviewCount:Number >= 10 => notify
S5000011166	please find books with number of reviews at least 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000011167	i want books having 11 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000011168	please enumerate 5 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 5 => notify
S5000011169	i want 0 page books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 0 => notify
S5000011170	please find books having no fewer than one awards	now => ( @edu.stanford.cs294s.sierra.Book ) filter count ( param:award:Array(String) ) >= 1 => notify
S5000011171	please enumerate books having 3 or less number of pages .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 3 => notify
S5000011172	get books having 6 or less number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 6 => notify
S5000011173	i would like books with number of pages NUMBER_0 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011174	tell me the link of people	now => [ param:url:Entity(tt:url) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011175	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011176	get books having over 8 number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 8 => notify
S5000011177	i would like books that have rating at most 1	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 1 => notify
S5000011178	get book having 4 or above number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 4 => notify
S5000011179	how many awards does the books which has the lowest number of ratings have ?	now => [ param:count:Number ] of ( compute count ( param:award:Array(String) ) of ( ( sort param:aggregateRating.ratingCount:Number asc of ( @edu.stanford.cs294s.sierra.Book ) ) [ 1 ] ) ) => notify
S5000011180	i want to retrieve books which have over one number of reviews .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
S5000011181	what are the awards of books	now => [ param:award:Array(String) ] of ( @edu.stanford.cs294s.sierra.Book ) => notify
S5000011182	get books with rating greater than 5	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 5 => notify
S5000011183	search 10 -star books .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 10 => notify
S5000011184	which book is 0 page and have number of reviews 11 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number == 11 and param:numberOfPages:Number == 0 => notify
S5000011185	i need to search book having number of pages 10 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 10 => notify
S5000011186	i want to search books which have 3 or higher number of pages	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number >= 3 => notify
S5000011187	i need to find books which have number of pages 3	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 3 => notify
S5000011188	i need to search for books having 11 or less rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 11 => notify
S5000011189	please find books with number of reviews at least 10	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number >= 10 => notify
S5000011190	get one -star book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number == 1 => notify
S5000011191	i would like books with number of pages NUMBER_0	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == NUMBER_0 => notify
S5000011192	retrieve book that have 0 or lower number of reviews	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.reviewCount:Number <= 0 => notify
S5000011193	please enumerate 4 page book .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number == 4 => notify
S5000011194	retrieve books that have 8 or less rating .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 8 => notify
S5000011195	get books that have over NUMBER_0 number of ratings	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingCount:Number >= NUMBER_0 => notify
S5000011196	show me what is the image of people .	now => [ param:image:Entity(tt:picture) ] of ( @edu.stanford.cs294s.sierra.Person ) => notify
S5000011197	i would like to search for book having 4 or lower rating	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number <= 4 => notify
S5000011198	what books have number of pages less than 12 ?	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:numberOfPages:Number <= 12 => notify
S5000011199	get book which have greater rating than 11 .	now => ( @edu.stanford.cs294s.sierra.Book ) filter param:aggregateRating.ratingValue:Number >= 11 => notify
