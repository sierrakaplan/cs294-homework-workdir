class @edu.stanford.cs294s.sierra
#_[name="sierra in Schema.org"]
#_[description="Scraped data from websites that support schema.org"]
#[whitelist=["Book", "Review", "Person"]] {
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();

  list query Thing(out id: Entity(edu.stanford.cs294s.sierra:Thing) #[unique=true] #[filterable=false],
                   out url: Entity(tt:url) #_[canonical={base=["url", "link"]}] #[org_schema_type="URL"],
                   out alternateName: Array(String) #_[canonical={base=["alternate names"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Thing_alternateName"],
                   out image: Entity(tt:picture) #_[canonical={base=["image"]}] #[org_schema_type="URL"],
                   out additionalType: Array(Entity(tt:url)) #_[canonical={base=["additional types"]}] #[org_schema_type="URL"],
                   out name: String #_[canonical={base=["name"],passive_verb=["called"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Thing_name"],
                   out identifier: Entity(tt:url) #_[canonical={base=["identifier"]}] #[org_schema_type="URL"],
                   out subjectOf: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={reverse_property=["subject of"],base=["subject of"]}] #[org_schema_type="CreativeWork"],
                   out potentialAction: Entity(edu.stanford.cs294s.sierra:Action) #_[canonical={base=["potential action"]}] #[org_schema_type="Action"],
                   out description: String #_[canonical={base=["description", "summary"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Thing_description"],
                   out disambiguatingDescription: Array(String) #_[canonical={base=["disambiguating descriptions"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Thing_disambiguatingDescription"])
  #_[canonical="thing"]
  #_[confirmation="thing"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CreativeWork extends Thing(out id: Entity(edu.stanford.cs294s.sierra:CreativeWork) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_name"],
                                        out about: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["about"]}] #[org_schema_type="Thing"],
                                        out educationalAlignment: Array(Entity(edu.stanford.cs294s.sierra:AlignmentObject)) #_[canonical={base=["educational alignments"]}] #[org_schema_type="AlignmentObject"],
                                        out associatedMedia: Array(Entity(edu.stanford.cs294s.sierra:MediaObject)) #_[canonical={base=["associated media"]}] #[org_schema_type="MediaObject"],
                                        out funder: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["funder"],base=["funder"]}] #[org_schema_type="Organization"],
                                        out position: Number #_[canonical={base=["position"]}] #[org_schema_type="Integer"],
                                        out audio: Array(Entity(edu.stanford.cs294s.sierra:Clip)) #_[canonical={passive_verb=["audio"],base=["audio"]}] #[org_schema_type="Clip"],
                                        out workExample: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["work example"]}] #[org_schema_type="CreativeWork"],
                                        out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                        out encoding: Array(Entity(edu.stanford.cs294s.sierra:MediaObject)) #_[canonical={passive_verb=["encoding"],base=["encoding"]}] #[org_schema_type="MediaObject"],
                                        out interactivityType: String #_[canonical={base=["interactivity type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_interactivityType"],
                                        out character: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["character"]}] #[org_schema_type="Person"],
                                        out audience: Array(Entity(edu.stanford.cs294s.sierra:Audience)) #_[canonical={base=["audiences"]}] #[org_schema_type="Audience"],
                                        out sourceOrganization: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["source organization"]}] #[org_schema_type="Organization"],
                                        out isPartOf: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={reverse_property=["part of"],base=["part of"]}] #[org_schema_type="CreativeWork"],
                                        out video: Entity(org.schema:VideoObject) #_[canonical={base=["video"]}] #[org_schema_type="Clip"],
                                        out publication: Array(Entity(edu.stanford.cs294s.sierra:PublicationEvent)) #_[canonical={base=["publications"]}] #[org_schema_type="PublicationEvent"],
                                        out text: String #_[canonical={base=["text"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_text"],
                                        out expires: Date #_[canonical={verb=["expires"],base=["expires"]}] #[org_schema_type="Date"],
                                        out contributor: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["contributors"]}] #[org_schema_type="Organization"],
                                        out publisher: Entity(org.schema:Organization) #_[canonical={base=["publisher"]}] #[org_schema_type="Person"],
                                        out typicalAgeRange: String #_[canonical={base=["typical age range"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_typicalAgeRange"],
                                        out releasedEvent: Entity(edu.stanford.cs294s.sierra:PublicationEvent) #_[canonical={base=["released event"]}] #[org_schema_type="PublicationEvent"],
                                        out contentLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["content location"]}] #[org_schema_type="Place"],
                                        out schemaVersion: Entity(tt:url) #_[canonical={base=["schema version"]}] #[org_schema_type="URL"],
                                        out accessibilityFeature: String #_[canonical={base=["accessibility feature"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessibilityFeature"],
                                        out aggregateRating: {
                                          reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                          ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                          ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                          author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                          reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_aggregateRating_reviewAspect"]
                                        } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                        out alternativeHeadline: Array(String) #_[canonical={base=["alternative headlines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_alternativeHeadline"],
                                        out locationCreated: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["location created"]}] #[org_schema_type="Place"],
                                        out accessModeSufficient: Array(Entity(edu.stanford.cs294s.sierra:ItemList)) #_[canonical={base=["access mode sufficient"]}] #[org_schema_type="ItemList"],
                                        out temporalCoverage: Entity(tt:url) #_[canonical={base=["temporal coverage"]}] #[org_schema_type="URL"],
                                        out accountablePerson: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["accountable person"]}] #[org_schema_type="Person"],
                                        out spatialCoverage: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["spatial coverage"]}] #[org_schema_type="Place"],
                                        out accessibilitySummary: Array(String) #_[canonical={base=["accessibility summaries"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessibilitySummary"],
                                        out offers: {
                                          sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_sku"],
                                          availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                          availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                          mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_mpn"],
                                          advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                          serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_serialNumber"],
                                          ineligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_ineligibleRegion_line"]
                                          } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                          gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_gtin8"],
                                          availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                          priceSpecification: {
                                            minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                            maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                            valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                          } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                          inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                          aggregateRating: {
                                            reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                            ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                            ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                            author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                            reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_aggregateRating_reviewAspect"]
                                          } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                          availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                          category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_category"],
                                          priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                          warranty: {
                                            durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                            warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                          } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_gtin14"],
                                          gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_gtin13"],
                                          gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_gtin12"],
                                          seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                          deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                          availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                          includesObject: {
                                            unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                            typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                            amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                            unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_includesObject_unitText"],
                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                          } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                          review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                          eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                          itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                          itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                          offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                          eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                          acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                          eligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_offers_eligibleRegion_line"]
                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                        } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                        out editor: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["editor"]}] #[org_schema_type="Person"],
                                        out discussionUrl: Array(Entity(tt:url)) #_[canonical={base=["discussion url"]}] #[org_schema_type="URL"],
                                        out award: Array(String) #_[canonical={base=["awards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_award"],
                                        out copyrightHolder: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["copyright holder"]}] #[org_schema_type="Person"],
                                        out accessibilityHazard: Array(String) #_[canonical={base=["accessibility hazards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessibilityHazard"],
                                        out copyrightYear: Number #_[canonical={base=["copyright year"]}] #[org_schema_type="Number"],
                                        out recordedAt: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={passive_verb=["recorded at"],base=["recorded at"]}] #[org_schema_type="Event"],
                                        out spatial: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["spatial"],base=["spatial"]}] #[org_schema_type="Place"],
                                        out commentCount: Number #_[canonical={base=["comment count"]}] #[org_schema_type="Integer"],
                                        out inLanguage: String #_[canonical={base=["in language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_inLanguage"],
                                        out temporal: Date #_[canonical={passive_verb=["temporal"],base=["temporal"]}] #[org_schema_type="DateTime"],
                                        out accessibilityAPI: String #_[canonical={base=["accessibility api"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessibilityAPI"],
                                        out interactionStatistic: {
                                          interactionService: Entity(edu.stanford.cs294s.sierra:SoftwareApplication) #_[canonical={base=["interaction service"]}] #[org_schema_type="SoftwareApplication"],
                                          userInteractionCount: Number #_[canonical={base=["user interaction count"]}] #[org_schema_type="Integer"],
                                          interactionType: Entity(edu.stanford.cs294s.sierra:Action) #_[canonical={base=["interaction type"]}] #[org_schema_type="Action"]
                                        } #_[canonical={base=["interaction statistic"]}] #[org_schema_type="InteractionCounter"],
                                        out contentRating: {
                                          ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                          author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                          reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_contentRating_reviewAspect"]
                                        } #_[canonical={base=["content rating"]}] #[org_schema_type="Rating"],
                                        out learningResourceType: String #_[canonical={base=["learning resource type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_learningResourceType"],
                                        out accessMode: String #_[canonical={base=["access mode"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessMode"],
                                        out material: Array(Entity(tt:url)) #_[canonical={base=["materials"]}] #[org_schema_type="URL"],
                                        out isFamilyFriendly: Boolean #_[canonical={base=["family friendly"]}] #[org_schema_type="Boolean"],
                                        out exampleOfWork: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={base=["example of work"]}] #[org_schema_type="CreativeWork"],
                                        out version: Number #_[canonical={base=["version"]}] #[org_schema_type="Number"],
                                        out dateModified: Date #_[canonical={base=["date modified"]}] #[org_schema_type="DateTime"],
                                        out keywords: String #_[canonical={passive_verb=["keywords"],base=["keywords"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_keywords"],
                                        out genre: Entity(tt:url) #_[canonical={base=["genre"]}] #[org_schema_type="URL"],
                                        out mainEntity: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["main entity"]}] #[org_schema_type="Thing"],
                                        out author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                        out timeRequired: Measure(ms) #_[canonical={base=["time required"]}] #[org_schema_type="Duration"],
                                        out translator: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["translator"]}] #[org_schema_type="Person"],
                                        out thumbnailUrl: Array(Entity(tt:url)) #_[canonical={base=["thumbnail url"]}] #[org_schema_type="URL"],
                                        out hasPart: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["part"]}] #[org_schema_type="CreativeWork"],
                                        out comment: Entity(edu.stanford.cs294s.sierra:Comment) #_[canonical={base=["comment"]}] #[org_schema_type="Comment"],
                                        out encodingFormat: Entity(tt:url) #_[canonical={base=["encoding format"]}] #[org_schema_type="URL"],
                                        out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                        out license: Array(Entity(tt:url)) #_[canonical={base=["licenses"]}] #[org_schema_type="URL"],
                                        out accessibilityControl: String #_[canonical={base=["accessibility control"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_accessibilityControl"],
                                        out isBasedOn: Array(Entity(tt:url)) #_[canonical={passive_verb=["based on"],base=["based on"]}] #[org_schema_type="URL"],
                                        out creator: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["creator"]}] #[org_schema_type="Organization"],
                                        out publishingPrinciples: Entity(tt:url) #_[canonical={base=["publishing principles"]}] #[org_schema_type="URL"],
                                        out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"],
                                        out producer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["producer"]}] #[org_schema_type="Organization"],
                                        out mentions: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={verb=["mentions"],base=["mentions"]}] #[org_schema_type="Thing"],
                                        out dateCreated: Date #_[canonical={base=["date created"]}] #[org_schema_type="DateTime"],
                                        out educationalUse: String #_[canonical={base=["educational use"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_educationalUse"],
                                        out datePublished: Date #_[canonical={base=["date published"]}] #[org_schema_type="Date"],
                                        out isAccessibleForFree: Boolean #_[canonical={passive_verb=["accessible for free"],base=["accessible for free"]}] #[org_schema_type="Boolean"],
                                        out headline: String #_[canonical={base=["headline"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_headline"],
                                        out citation: Array(String) #_[canonical={base=["citations"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWork_citation"])
  #_[canonical="creative work"]
  #_[confirmation="creative work"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SoftwareApplication extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:SoftwareApplication) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_name"],
                                                      out downloadUrl: Entity(tt:url) #_[canonical={base=["download url"]}] #[org_schema_type="URL"],
                                                      out softwareRequirements: Entity(tt:url) #_[canonical={base=["software requirements"]}] #[org_schema_type="URL"],
                                                      out permissions: String #_[canonical={passive_verb=["permissions"],base=["permissions"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_permissions"],
                                                      out processorRequirements: String #_[canonical={base=["processor requirements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_processorRequirements"],
                                                      out availableOnDevice: String #_[canonical={base=["available on device"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_availableOnDevice"],
                                                      out featureList: Entity(tt:url) #_[canonical={base=["feature list"]}] #[org_schema_type="URL"],
                                                      out applicationSubCategory: Entity(tt:url) #_[canonical={base=["application sub category"]}] #[org_schema_type="URL"],
                                                      out applicationCategory: Entity(tt:url) #_[canonical={base=["application category"]}] #[org_schema_type="URL"],
                                                      out softwareVersion: String #_[canonical={base=["software version"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_softwareVersion"],
                                                      out storageRequirements: Entity(tt:url) #_[canonical={base=["storage requirements"]}] #[org_schema_type="URL"],
                                                      out applicationSuite: String #_[canonical={base=["application suite"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_applicationSuite"],
                                                      out memoryRequirements: Entity(tt:url) #_[canonical={base=["memory requirements"]}] #[org_schema_type="URL"],
                                                      out screenshot: Array(Entity(tt:picture)) #_[canonical={passive_verb=["screenshot"],base=["screenshot"]}] #[org_schema_type="ImageObject"],
                                                      out countriesSupported: String #_[canonical={base=["countries supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_countriesSupported"],
                                                      out softwareHelp: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["software help"]}] #[org_schema_type="CreativeWork"],
                                                      out softwareAddOn: Entity(edu.stanford.cs294s.sierra:SoftwareApplication) #_[canonical={base=["software add on"]}] #[org_schema_type="SoftwareApplication"],
                                                      out releaseNotes: Entity(tt:url) #_[canonical={base=["release notes"]}] #[org_schema_type="URL"],
                                                      out supportingData: Entity(edu.stanford.cs294s.sierra:DataFeed) #_[canonical={base=["supporting data"]}] #[org_schema_type="DataFeed"],
                                                      out countriesNotSupported: String #_[canonical={base=["countries not supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_countriesNotSupported"],
                                                      out operatingSystem: String #_[canonical={base=["operating system"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_operatingSystem"],
                                                      out fileSize: String #_[canonical={base=["file size"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareApplication_fileSize"],
                                                      out installUrl: Entity(tt:url) #_[canonical={base=["install url"]}] #[org_schema_type="URL"])
  #_[canonical="software application"]
  #_[confirmation="software application"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Event extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Event) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Event_name"],
                                 out about: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["about"]}] #[org_schema_type="Thing"],
                                 out funder: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["funder"],base=["funder"]}] #[org_schema_type="Organization"],
                                 out subEvent: Array(Entity(edu.stanford.cs294s.sierra:Event)) #_[canonical={base=["sub events"]}] #[org_schema_type="Event"],
                                 out workFeatured: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={base=["work featured"]}] #[org_schema_type="CreativeWork"],
                                 out audience: Array(Entity(edu.stanford.cs294s.sierra:Audience)) #_[canonical={base=["audiences"]}] #[org_schema_type="Audience"],
                                 out remainingAttendeeCapacity: Number #_[canonical={base=["remaining attendee capacity"]}] #[org_schema_type="Integer"],
                                 out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                 out endDate: Date #_[canonical={base=["end date"]}] #[org_schema_type="DateTime"],
                                 out doorTime: Date #_[canonical={base=["door time"]}] #[org_schema_type="DateTime"],
                                 out contributor: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["contributors"]}] #[org_schema_type="Organization"],
                                 out maximumAttendeeCapacity: Number #_[canonical={base=["maximum attendee capacity"]}] #[org_schema_type="Integer"],
                                 out typicalAgeRange: String #_[canonical={base=["typical age range"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_typicalAgeRange"],
                                 out organizer: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["organizers"]}] #[org_schema_type="Organization"],
                                 out aggregateRating: {
                                   reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                   ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                   ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                   author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                   reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_aggregateRating_reviewAspect"]
                                 } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                 out offers: {
                                   sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_sku"],
                                   availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                   availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                   mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Event_offers_mpn"],
                                   advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                   serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_serialNumber"],
                                   ineligibleRegion: {
                                     address: {
                                       postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                       streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_streetAddress"],
                                       addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                       addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                       postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_postalCode"],
                                       addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_addressLocality"],
                                       faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_faxNumber"],
                                       hoursAvailable: {
                                         validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                         validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                         opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                         closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                         dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                       } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                       contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                       availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_availableLanguage"],
                                       telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                       email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                       contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_contactType"],
                                       productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_address_productSupported"]
                                     } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                     circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_circle"],
                                     box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_box"],
                                     addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                     postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_postalCode"],
                                     elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                     polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_polygon"],
                                     line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_ineligibleRegion_line"]
                                   } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                   gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_gtin8"],
                                   availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                   priceSpecification: {
                                     minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                     maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                     eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                     validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                     validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                     price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                     valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                   } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                   inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                   aggregateRating: {
                                     reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                     ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                     ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                     author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                     reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_aggregateRating_reviewAspect"]
                                   } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                   availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                   category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_category"],
                                   priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                   warranty: {
                                     durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                     warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                   } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                   eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                   price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                   gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_gtin14"],
                                   gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Event_offers_gtin13"],
                                   gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_gtin12"],
                                   seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                   deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                   availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                   includesObject: {
                                     unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                     typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                     amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                     unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_includesObject_unitText"],
                                     businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                   } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                   review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                   eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                   itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                   itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                   offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                   eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                   acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                   businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                   eligibleRegion: {
                                     address: {
                                       postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                       streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_streetAddress"],
                                       addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                       addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                       postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_postalCode"],
                                       addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_addressLocality"],
                                       faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_faxNumber"],
                                       hoursAvailable: {
                                         validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                         validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                         opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                         closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                         dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                       } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                       contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                       availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_availableLanguage"],
                                       telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                       email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                       contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_contactType"],
                                       productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_address_productSupported"]
                                     } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                     circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_circle"],
                                     box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_box"],
                                     addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                     postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_postalCode"],
                                     elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                     polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_polygon"],
                                     line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_offers_eligibleRegion_line"]
                                   } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                 } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                 out inLanguage: String #_[canonical={base=["in language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_inLanguage"],
                                 out attendee: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["attendees"]}] #[org_schema_type="Organization"],
                                 out workPerformed: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={base=["work performed"]}] #[org_schema_type="CreativeWork"],
                                 out eventStatus: Enum(EventPostponed,EventRescheduled,EventScheduled,EventCancelled) #_[canonical={base=["event status"]}] #[org_schema_type="EventStatusType"],
                                 out startDate: Date #_[canonical={base=["start date"]}] #[org_schema_type="DateTime"],
                                 out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                 out superEvent: Array(Entity(edu.stanford.cs294s.sierra:Event)) #_[canonical={base=["super events"]}] #[org_schema_type="Event"],
                                 out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"],
                                 out translator: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["translator"]}] #[org_schema_type="Person"],
                                 out previousStartDate: Date #_[canonical={base=["previous start date"]}] #[org_schema_type="Date"],
                                 out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                 out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"],
                                 out location: {
                                   postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_postOfficeBoxNumber"],
                                   streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_streetAddress"],
                                   addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                   addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                   postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_postalCode"],
                                   addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_addressLocality"],
                                   faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_faxNumber"],
                                   hoursAvailable: {
                                     validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                     validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                     opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                     closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                     dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                   } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                   contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                   availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_availableLanguage"],
                                   telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                   email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                   contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_contactType"],
                                   productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Event_location_productSupported"]
                                 } #_[canonical={base=["location"]}] #[org_schema_type="PostalAddress"],
                                 out recordedIn: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={passive_verb=["recorded in"],base=["recorded in"]}] #[org_schema_type="CreativeWork"],
                                 out composer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["composer"]}] #[org_schema_type="Organization"],
                                 out isAccessibleForFree: Boolean #_[canonical={passive_verb=["accessible for free"],base=["accessible for free"]}] #[org_schema_type="Boolean"],
                                 out performer: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["performers"]}] #[org_schema_type="Organization"])
  #_[canonical="event"]
  #_[confirmation="event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserInteraction extends Event(out id: Entity(edu.stanford.cs294s.sierra:UserInteraction) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserInteraction_name"])
  #_[canonical="user interaction"]
  #_[confirmation="user interaction"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserLikes extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserLikes) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserLikes_name"])
  #_[canonical="user likes"]
  #_[confirmation="user likes"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Place extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Place) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Place_name"],
                                 out geoWithin: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo within"]}] #[org_schema_type="GeospatialGeometry"],
                                 out geoContains: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo contains"]}] #[org_schema_type="Place"],
                                 out address: {
                                   postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_postOfficeBoxNumber"],
                                   streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[filterable=false] #[drop=true] #[string_values="edu.stanford.cs294s.sierra:Place_address_streetAddress"],
                                   addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                   addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                   postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_postalCode"],
                                   addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[filterable=false] #[drop=true] #[string_values="edu.stanford.cs294s.sierra:Place_address_addressLocality"],
                                   faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_faxNumber"],
                                   hoursAvailable: {
                                     validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                     validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                     opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                     closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                     dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                   } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                   contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                   availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_availableLanguage"],
                                   telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                   email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                   contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_contactType"],
                                   productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_address_productSupported"]
                                 } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                 out openingHoursSpecification: {
                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                 } #_[canonical={base=["opening hours specification"]}] #[org_schema_type="OpeningHoursSpecification"],
                                 out faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_faxNumber"],
                                 out photo: Array(Entity(tt:picture)) #_[canonical={base=["photos"]}] #[org_schema_type="ImageObject"],
                                 out containedInPlace: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["contained in place"]}] #[org_schema_type="Place"],
                                 out geoOverlaps: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo overlaps"]}] #[org_schema_type="GeospatialGeometry"],
                                 out smokingAllowed: Boolean #_[canonical={base=["smoking allowed"]}] #[org_schema_type="Boolean"],
                                 out globalLocationNumber: String #_[canonical={base=["global location number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_globalLocationNumber"],
                                 out maximumAttendeeCapacity: Number #_[canonical={base=["maximum attendee capacity"]}] #[org_schema_type="Integer"],
                                 out geoCrosses: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo crosses"]}] #[org_schema_type="Place"],
                                 out aggregateRating: {
                                   reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                   ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                   ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                   author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                   reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_aggregateRating_reviewAspect"]
                                 } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                 out branchCode: Array(String) #_[canonical={base=["branch codes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_branchCode"],
                                 out hasMap: Array(Entity(tt:url)) #_[canonical={base=["map"]}] #[org_schema_type="URL"],
                                 out specialOpeningHoursSpecification: {
                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                 } #_[canonical={base=["special opening hours specification"]}] #[org_schema_type="OpeningHoursSpecification"],
                                 out amenityFeature: Array(Entity(edu.stanford.cs294s.sierra:LocationFeatureSpecification)) #_[canonical={base=["amenity features"]}] #[org_schema_type="LocationFeatureSpecification"],
                                 out logo: Entity(tt:picture) #_[canonical={base=["logo"]}] #[org_schema_type="ImageObject"],
                                 out telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                 out geo: Location #_[canonical={base=["location", "address"],passive_verb=["in #", "around #", "at #", "on #"]}] #[org_schema_type="GeoCoordinates"],
                                 out geoCovers: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo covers"]}] #[org_schema_type="Place"],
                                 out geoEquals: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo equals"]}] #[org_schema_type="Place"],
                                 out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                 out event: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={base=["event"]}] #[org_schema_type="Event"],
                                 out geoTouches: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo touches"]}] #[org_schema_type="Place"],
                                 out containsPlace: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={verb=["contains # place"],base=["place"]}] #[org_schema_type="Place"],
                                 out geoDisjoint: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo disjoint"]}] #[org_schema_type="GeospatialGeometry"],
                                 out isicV4: String #_[canonical={base=["isic v4"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_isicV4"],
                                 out slogan: Array(String) #_[canonical={base=["slogans"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Place_slogan"],
                                 out geoIntersects: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo intersects"]}] #[org_schema_type="GeospatialGeometry"],
                                 out isAccessibleForFree: Boolean #_[canonical={passive_verb=["accessible for free"],base=["accessible for free"]}] #[org_schema_type="Boolean"],
                                 out geoCoveredBy: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo covered by"]}] #[org_schema_type="GeospatialGeometry"],
                                 out publicAccess: Boolean #_[canonical={base=["public access"]}] #[org_schema_type="Boolean"])
  #_[canonical="place"]
  #_[confirmation="place"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Organization extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Organization) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Organization_name"],
                                        out memberOf: Array(Entity(edu.stanford.cs294s.sierra:ProgramMembership)) #_[canonical={reverse_property=["member of"],base=["member of"]}] #[org_schema_type="ProgramMembership"],
                                        out address: {
                                          postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_postOfficeBoxNumber"],
                                          streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_streetAddress"],
                                          addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                          addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                          postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_postalCode"],
                                          addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_addressLocality"],
                                          faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_faxNumber"],
                                          hoursAvailable: {
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                            closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                            dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                          } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                          contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                          availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_availableLanguage"],
                                          telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                          email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                          contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_contactType"],
                                          productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_address_productSupported"]
                                        } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                        out funder: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["funder"],base=["funder"]}] #[org_schema_type="Organization"],
                                        out faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_faxNumber"],
                                        out subOrganization: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sub organizations"]}] #[org_schema_type="Organization"],
                                        out hasOfferCatalog: Array({
                                          sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_sku"],
                                          availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                          availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                          mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_mpn"],
                                          advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                          serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_serialNumber"],
                                          ineligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_ineligibleRegion_line"]
                                          } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                          gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_gtin8"],
                                          availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                          priceSpecification: {
                                            minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                            maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                            valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                          } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                          inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                          aggregateRating: {
                                            reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                            ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                            ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                            author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                            reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_aggregateRating_reviewAspect"]
                                          } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                          availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                          category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_category"],
                                          priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                          warranty: {
                                            durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                            warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                          } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_gtin14"],
                                          gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_gtin13"],
                                          gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_gtin12"],
                                          seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                          deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                          availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                          includesObject: {
                                            unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                            typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                            amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                            unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_includesObject_unitText"],
                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                          } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                          review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                          eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                          itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                          itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                          offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                          eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                          acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                          eligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_hasOfferCatalog_eligibleRegion_line"]
                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                        }) #_[canonical={base=["offer catalog"]}] #[org_schema_type="OfferCatalog"],
                                        out globalLocationNumber: String #_[canonical={base=["global location number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_globalLocationNumber"],
                                        out aggregateRating: {
                                          reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                          ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                          ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                          author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                          reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_aggregateRating_reviewAspect"]
                                        } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                        out duns: String #_[canonical={verb=["duns"],base=["duns"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_duns"],
                                        out taxID: String #_[canonical={base=["tax id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_taxID"],
                                        out award: Array(String) #_[canonical={base=["awards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_award"],
                                        out makesOffer: Array({
                                          sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_sku"],
                                          availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                          availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                          mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_mpn"],
                                          advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                          serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_serialNumber"],
                                          ineligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_ineligibleRegion_line"]
                                          } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                          gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_gtin8"],
                                          availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                          priceSpecification: {
                                            minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                            maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                            valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                          } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                          inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                          aggregateRating: {
                                            reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                            ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                            ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                            author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                            reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_aggregateRating_reviewAspect"]
                                          } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                          availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                          category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_category"],
                                          priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                          warranty: {
                                            durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                            warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                          } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_gtin14"],
                                          gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_gtin13"],
                                          gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_gtin12"],
                                          seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                          deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                          availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                          includesObject: {
                                            unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                            typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                            amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                            unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_includesObject_unitText"],
                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                          } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                          review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                          eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                          itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                          itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                          offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                          eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                          acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                          eligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_makesOffer_eligibleRegion_line"]
                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                        }) #_[canonical={verb=["makes # offer"],base=["offer"]}] #[org_schema_type="Offer"],
                                        out foundingDate: Date #_[canonical={base=["founding date"]}] #[org_schema_type="Date"],
                                        out seeks: Array(Entity(edu.stanford.cs294s.sierra:Demand)) #_[canonical={verb=["seeks"],base=["seeks"]}] #[org_schema_type="Demand"],
                                        out member: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["members"]}] #[org_schema_type="Organization"],
                                        out alumni: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["alumni"]}] #[org_schema_type="Person"],
                                        out dissolutionDate: Date #_[canonical={base=["dissolution date"]}] #[org_schema_type="Date"],
                                        out logo: Entity(tt:picture) #_[canonical={base=["logo"]}] #[org_schema_type="ImageObject"],
                                        out telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        out email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        out department: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["departments"]}] #[org_schema_type="Organization"],
                                        out contactPoint: Array({
                                          faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_contactPoint_faxNumber"],
                                          hoursAvailable: {
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                            closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                            dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                          } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                          contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                          availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_contactPoint_availableLanguage"],
                                          telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                          email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                          contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_contactPoint_contactType"],
                                          productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_contactPoint_productSupported"]
                                        }) #_[canonical={base=["contact points"]}] #[org_schema_type="ContactPoint"],
                                        out parentOrganization: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["parent organization"]}] #[org_schema_type="Organization"],
                                        out legalName: String #_[canonical={base=["legal name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_legalName"],
                                        out employee: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["employee"]}] #[org_schema_type="Person"],
                                        out numberOfEmployees: Number #_[canonical={base=["number of employees"]}] #[org_schema_type="QuantitativeValue"],
                                        out naics: String #_[canonical={passive_verb=["naics"],base=["naics"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_naics"],
                                        out hasPOS: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["pos"]}] #[org_schema_type="Place"],
                                        out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                        out foundingLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["founding location"]}] #[org_schema_type="Place"],
                                        out owns: {
                                          typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                          ownedFrom: Date #_[canonical={passive_verb=["owned from"],base=["owned from"]}] #[org_schema_type="DateTime"],
                                          ownedThrough: Date #_[canonical={passive_verb=["owned through"],base=["owned through"]}] #[org_schema_type="DateTime"],
                                          acquiredFrom: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={passive_verb=["acquired from"],base=["acquired from"]}] #[org_schema_type="Person"]
                                        } #_[canonical={verb=["owns"],base=["owns"]}] #[org_schema_type="OwnershipInfo"],
                                        out event: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={base=["event"]}] #[org_schema_type="Event"],
                                        out founder: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["founders"]}] #[org_schema_type="Person"],
                                        out publishingPrinciples: Entity(tt:url) #_[canonical={base=["publishing principles"]}] #[org_schema_type="URL"],
                                        out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"],
                                        out isicV4: String #_[canonical={base=["isic v4"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_isicV4"],
                                        out slogan: Array(String) #_[canonical={base=["slogans"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_slogan"],
                                        out location: {
                                          postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_postOfficeBoxNumber"],
                                          streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_streetAddress"],
                                          addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                          addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                          postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_postalCode"],
                                          addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_addressLocality"],
                                          faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_faxNumber"],
                                          hoursAvailable: {
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                            closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                            dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                          } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                          contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                          availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_availableLanguage"],
                                          telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                          email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                          contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_contactType"],
                                          productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_location_productSupported"]
                                        } #_[canonical={base=["location"]}] #[org_schema_type="PostalAddress"],
                                        out brand: Entity(edu.stanford.cs294s.sierra:Brand) #_[canonical={base=["brand"]}] #[org_schema_type="Brand"],
                                        out vatID: String #_[canonical={passive_verb=["vat id"],base=["vat id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_vatID"],
                                        out leiCode: Array(String) #_[canonical={base=["lei codes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Organization_leiCode"])
  #_[canonical="organization"]
  #_[confirmation="organization"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LocalBusiness extends Place, Organization(out id: Entity(edu.stanford.cs294s.sierra:LocalBusiness) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LocalBusiness_name"],
                                                       out priceRange: String #_[canonical={base=["price range"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LocalBusiness_priceRange"],
                                                       out paymentAccepted: String #_[canonical={base=["payment accepted"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LocalBusiness_paymentAccepted"],
                                                       out openingHours: String #_[canonical={base=["opening hours"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LocalBusiness_openingHours"],
                                                       out currenciesAccepted: String #_[canonical={base=["currencies accepted"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LocalBusiness_currenciesAccepted"])
  #_[canonical="local business"]
  #_[confirmation="local business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FoodEstablishment extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:FoodEstablishment) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FoodEstablishment_name"],
                                                     out servesCuisine: String #_[canonical={verb=["serves # cuisine"],base=["cuisine"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FoodEstablishment_servesCuisine"],
                                                     out hasMenu: Entity(tt:url) #_[canonical={base=["menu"]}] #[org_schema_type="URL"],
                                                     out starRating: Array({
                                                       ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                                       author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                                       reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FoodEstablishment_starRating_reviewAspect"]
                                                     }) #_[canonical={base=["star ratings"]}] #[org_schema_type="Rating"],
                                                     out acceptsReservations: Boolean #_[canonical={verb=["accepts # reservations"],base=["reservations"]}] #[org_schema_type="Boolean"])
  #_[canonical="food establishment"]
  #_[confirmation="food establishment"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CafeOrCoffeeShop extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:CafeOrCoffeeShop) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CafeOrCoffeeShop_name"])
  #_[canonical="cafe or coffee shop"]
  #_[confirmation="cafe or coffee shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Article extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Article) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Article_name"],
                                          out pagination: String #_[canonical={passive_verb=["pagination"],base=["pagination"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Article_pagination"],
                                          out speakable: Entity(tt:url) #_[canonical={passive_verb=["speakable"],base=["speakable"]}] #[org_schema_type="URL"],
                                          out pageEnd: Number #_[canonical={base=["page end"]}] #[org_schema_type="Integer"],
                                          out articleSection: String #_[canonical={base=["article section"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Article_articleSection"],
                                          out wordCount: Number #_[canonical={base=["word count"]}] #[org_schema_type="Integer"],
                                          out articleBody: String #_[canonical={base=["article body"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Article_articleBody"],
                                          out pageStart: Number #_[canonical={base=["page start"]}] #[org_schema_type="Integer"])
  #_[canonical="article"]
  #_[confirmation="article"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Chapter(out id: Entity(edu.stanford.cs294s.sierra:Chapter) #[unique=true] #[filterable=false],
                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Chapter_name"],
                     out pagination: String #_[canonical={passive_verb=["pagination"],base=["pagination"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Chapter_pagination"],
                     out pageEnd: Number #_[canonical={base=["page end"]}] #[org_schema_type="Integer"],
                     out pageStart: Number #_[canonical={base=["page start"]}] #[org_schema_type="Integer"])
  #_[canonical="chapter"]
  #_[confirmation="chapter"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PublicationIssue extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:PublicationIssue) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PublicationIssue_name"],
                                                   out pagination: String #_[canonical={passive_verb=["pagination"],base=["pagination"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PublicationIssue_pagination"],
                                                   out issueNumber: Number #_[canonical={base=["issue number"]}] #[org_schema_type="Integer"],
                                                   out pageEnd: Number #_[canonical={base=["page end"]}] #[org_schema_type="Integer"],
                                                   out pageStart: Number #_[canonical={base=["page start"]}] #[org_schema_type="Integer"])
  #_[canonical="publication issue"]
  #_[confirmation="publication issue"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PublicationVolume extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:PublicationVolume) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PublicationVolume_name"],
                                                    out pagination: String #_[canonical={passive_verb=["pagination"],base=["pagination"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PublicationVolume_pagination"],
                                                    out pageEnd: Number #_[canonical={base=["page end"]}] #[org_schema_type="Integer"],
                                                    out volumeNumber: Number #_[canonical={base=["volume number"]}] #[org_schema_type="Integer"],
                                                    out pageStart: Number #_[canonical={base=["page start"]}] #[org_schema_type="Integer"])
  #_[canonical="publication volume"]
  #_[confirmation="publication volume"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Intangible extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Intangible) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Intangible_name"])
  #_[canonical="intangible"]
  #_[confirmation="intangible"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Service extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Service) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Service_name"],
                                        out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                        out audience: Array(Entity(edu.stanford.cs294s.sierra:Audience)) #_[canonical={base=["audiences"]}] #[org_schema_type="Audience"],
                                        out hasOfferCatalog: Array({
                                          sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_sku"],
                                          availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                          availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                          mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_mpn"],
                                          advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                          serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_serialNumber"],
                                          ineligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_ineligibleRegion_line"]
                                          } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                          gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_gtin8"],
                                          availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                          priceSpecification: {
                                            minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                            maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                            valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                          } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                          inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                          aggregateRating: {
                                            reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                            ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                            ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                            author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                            reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_aggregateRating_reviewAspect"]
                                          } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                          availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                          category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_category"],
                                          priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                          warranty: {
                                            durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                            warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                          } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_gtin14"],
                                          gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_gtin13"],
                                          gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_gtin12"],
                                          seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                          deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                          availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                          includesObject: {
                                            unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                            typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                            amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                            unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_includesObject_unitText"],
                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                          } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                          review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                          eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                          itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                          itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                          offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                          eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                          acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                          eligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_hasOfferCatalog_eligibleRegion_line"]
                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                        }) #_[canonical={base=["offer catalog"]}] #[org_schema_type="OfferCatalog"],
                                        out hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        out providerMobility: String #_[canonical={base=["provider mobility"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_providerMobility"],
                                        out aggregateRating: {
                                          reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                          ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                          ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                          author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                          reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_aggregateRating_reviewAspect"]
                                        } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                        out offers: {
                                          sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_sku"],
                                          availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                          availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                          mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Service_offers_mpn"],
                                          advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                          serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_serialNumber"],
                                          ineligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_ineligibleRegion_line"]
                                          } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                          gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_gtin8"],
                                          availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                          priceSpecification: {
                                            minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                            maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                            valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                          } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                          inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                          aggregateRating: {
                                            reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                            ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                            ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                            author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                            reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_aggregateRating_reviewAspect"]
                                          } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                          availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                          category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_category"],
                                          priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                          warranty: {
                                            durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                            warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                          } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_gtin14"],
                                          gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Service_offers_gtin13"],
                                          gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_gtin12"],
                                          seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                          deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                          availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                          includesObject: {
                                            unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                            typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                            amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                            unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_includesObject_unitText"],
                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                          } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                          review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                          eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                          itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                          itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                          offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                          eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                          acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                          eligibleRegion: {
                                            address: {
                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_streetAddress"],
                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_postalCode"],
                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_addressLocality"],
                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_faxNumber"],
                                              hoursAvailable: {
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_availableLanguage"],
                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_contactType"],
                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_address_productSupported"]
                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_circle"],
                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_box"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_postalCode"],
                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_polygon"],
                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_offers_eligibleRegion_line"]
                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                        } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                        out award: Array(String) #_[canonical={base=["awards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_award"],
                                        out category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_category"],
                                        out broker: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["brokers"]}] #[org_schema_type="Person"],
                                        out serviceOutput: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["service output"]}] #[org_schema_type="Thing"],
                                        out logo: Entity(tt:picture) #_[canonical={base=["logo"]}] #[org_schema_type="ImageObject"],
                                        out isSimilarTo: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["similar to"],base=["similar to"]}] #[org_schema_type="Product"],
                                        out isRelatedTo: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["related to"],base=["related to"]}] #[org_schema_type="Product"],
                                        out availableChannel: Array(Entity(edu.stanford.cs294s.sierra:ServiceChannel)) #_[canonical={base=["available channels"]}] #[org_schema_type="ServiceChannel"],
                                        out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                        out serviceType: String #_[canonical={base=["service type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_serviceType"],
                                        out slogan: Array(String) #_[canonical={base=["slogans"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Service_slogan"],
                                        out brand: Entity(edu.stanford.cs294s.sierra:Brand) #_[canonical={base=["brand"]}] #[org_schema_type="Brand"])
  #_[canonical="service"]
  #_[confirmation="service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FoodService extends Service(out id: Entity(edu.stanford.cs294s.sierra:FoodService) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FoodService_name"])
  #_[canonical="food service"]
  #_[confirmation="food service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowTo extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:HowTo) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowTo_name"],
                                        out prepTime: Measure(ms) #_[canonical={base=["prep time"]}] #[org_schema_type="Duration"],
                                        out step: Array(String) #_[canonical={base=["steps"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HowTo_step"],
                                        out tool: Array(String) #_[canonical={base=["tools"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HowTo_tool"],
                                        out performTime: Measure(ms) #_[canonical={base=["perform time"]}] #[org_schema_type="Duration"],
                                        out estimatedCost: Currency #_[canonical={base=["estimated cost"]}] #[org_schema_type="MonetaryAmount"],
                                        out totalTime: Measure(ms) #_[canonical={base=["total time"]}] #[org_schema_type="Duration"],
                                        out supply: Array(String) #_[canonical={base=["supplies"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HowTo_supply"],
                                        out yield: Number #_[canonical={base=["yield"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="how to"]
  #_[confirmation="how to"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Recipe extends HowTo(out id: Entity(edu.stanford.cs294s.sierra:Recipe) #[unique=true] #[filterable=false],
                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Recipe_name"],
                                  out recipeYield: String #_[canonical={base=["recipe yield"]}] #[org_schema_type="QuantitativeValue"] #[string_values="edu.stanford.cs294s.sierra:Recipe_recipeYield"],
                                  out recipeCategory: Array(String) #_[canonical={base=["recipe categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_recipeCategory"],
                                  out recipeIngredient: Array(String) #_[canonical={base=["recipe ingredients"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_recipeIngredient"],
                                  out recipeInstructions: Array(String) #_[canonical={base=["recipe instructions"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_recipeInstructions"],
                                  out nutrition: {
                                    saturatedFatContent: Measure(kg) #_[canonical={verb=["contains #saturated_fat"],base=["saturated fat content", "saturated fat", "saturated fat amount"]}] #[org_schema_type="Mass"],
                                    fatContent: Measure(kg) #_[canonical={verb=["contains #fat"],base=["fat content", "fat", "fat amount"]}] #[org_schema_type="Mass"],
                                    unsaturatedFatContent: Measure(kg) #_[canonical={verb=["contains #unsaturated_fat"],base=["unsaturated fat content", "unsaturated fat", "unsaturated fat amount"]}] #[org_schema_type="Mass"],
                                    sugarContent: Measure(kg) #_[canonical={verb=["contains #sugar"],base=["sugar content", "sugar", "sugar amount"]}] #[org_schema_type="Mass"],
                                    cholesterolContent: Measure(kg) #_[canonical={verb=["contains #cholesterol"],base=["cholesterol content", "cholesterol", "cholesterol amount"]}] #[org_schema_type="Mass"],
                                    carbohydrateContent: Measure(kg) #_[canonical={verb=["contains #carbohydrate"],base=["carbohydrate content", "carbohydrate", "carbohydrate amount"]}] #[org_schema_type="Mass"],
                                    proteinContent: Measure(kg) #_[canonical={verb=["contains #protein"],base=["protein content", "protein", "protein amount"]}] #[org_schema_type="Mass"],
                                    sodiumContent: Measure(kg) #_[canonical={verb=["contains #sodium"],base=["sodium content", "sodium", "sodium amount"]}] #[org_schema_type="Mass"],
                                    transFatContent: Measure(kg) #_[canonical={verb=["contains #trans_fat"],base=["trans fat content", "trans fat", "trans fat amount"]}] #[org_schema_type="Mass"],
                                    fiberContent: Measure(kg) #_[canonical={verb=["contains #fiber"],base=["fiber content", "fiber", "fiber amount"]}] #[org_schema_type="Mass"],
                                    calories: Measure(kcal) #_[canonical={base=["calories"]}] #[org_schema_type="Energy"],
                                    servingSize: String #_[canonical={base=["serving size"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_nutrition_servingSize"]
                                  } #_[canonical={base=["nutrition"]}] #[org_schema_type="NutritionInformation"],
                                  out suitableForDiet: Enum(KosherDiet,VeganDiet,DiabeticDiet,LowFatDiet,HinduDiet,GlutenFreeDiet,HalalDiet,LowLactoseDiet,VegetarianDiet,LowCalorieDiet,LowSaltDiet) #_[canonical={base=["suitable for diet"]}] #[org_schema_type="RestrictedDiet"],
                                  out recipeCuisine: Array(String) #_[canonical={base=["recipe cuisines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_recipeCuisine"],
                                  out cookTime: Measure(ms) #_[canonical={base=["cook time"]}] #[org_schema_type="Duration"],
                                  out cookingMethod: String #_[canonical={base=["cooking method"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Recipe_cookingMethod"])
  #_[canonical="recipe"]
  #_[confirmation="recipe"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Game extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Game) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Game_name"],
                                       out gameItem: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["game items"]}] #[org_schema_type="Thing"],
                                       out characterAttribute: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["character attribute"]}] #[org_schema_type="Thing"],
                                       out gameLocation: Entity(tt:url) #_[canonical={base=["game location"]}] #[org_schema_type="URL"],
                                       out quest: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["quest"]}] #[org_schema_type="Thing"],
                                       out numberOfPlayers: Number #_[canonical={base=["number of players"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="game"]
  #_[confirmation="game"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Series extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Series) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Series_name"])
  #_[canonical="series"]
  #_[confirmation="series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CreativeWorkSeries extends CreativeWork, Series(out id: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeries) #[unique=true] #[filterable=false],
                                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CreativeWorkSeries_name"],
                                                             out endDate: Date #_[canonical={base=["end date"]}] #[org_schema_type="DateTime"],
                                                             out issn: String #_[canonical={passive_verb=["issn"],base=["issn"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CreativeWorkSeries_issn"],
                                                             out startDate: Date #_[canonical={base=["start date"]}] #[org_schema_type="DateTime"])
  #_[canonical="creative work series"]
  #_[confirmation="creative work series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VideoGameSeries extends CreativeWorkSeries(out id: Entity(edu.stanford.cs294s.sierra:VideoGameSeries) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VideoGameSeries_name"],
                                                        out gameItem: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["game items"]}] #[org_schema_type="Thing"],
                                                        out gamePlatform: Entity(tt:url) #_[canonical={base=["game platform"]}] #[org_schema_type="URL"],
                                                        out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                        out numberOfEpisodes: Number #_[canonical={base=["number of episodes"]}] #[org_schema_type="Integer"],
                                                        out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                        out cheatCode: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["cheat code"]}] #[org_schema_type="CreativeWork"],
                                                        out characterAttribute: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["character attribute"]}] #[org_schema_type="Thing"],
                                                        out gameLocation: Entity(tt:url) #_[canonical={base=["game location"]}] #[org_schema_type="URL"],
                                                        out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                                        out containsSeason: Array(Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason)) #_[canonical={verb=["contains # season"],base=["season"]}] #[org_schema_type="CreativeWorkSeason"],
                                                        out playMode: Enum(MultiPlayer,CoOp,SinglePlayer) #_[canonical={base=["play mode"]}] #[org_schema_type="GamePlayMode"],
                                                        out numberOfSeasons: Number #_[canonical={base=["number of seasons"]}] #[org_schema_type="Integer"],
                                                        out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                                        out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                                        out quest: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["quest"]}] #[org_schema_type="Thing"],
                                                        out numberOfPlayers: Number #_[canonical={base=["number of players"]}] #[org_schema_type="QuantitativeValue"],
                                                        out episode: Array(Entity(edu.stanford.cs294s.sierra:Episode)) #_[canonical={base=["episodes"]}] #[org_schema_type="Episode"])
  #_[canonical="video game series"]
  #_[confirmation="video game series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ListItem extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ListItem) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ListItem_name"],
                                         out nextItem: Array(Entity(edu.stanford.cs294s.sierra:ListItem)) #_[canonical={base=["next items"]}] #[org_schema_type="ListItem"],
                                         out position: Number #_[canonical={base=["position"]}] #[org_schema_type="Integer"],
                                         out previousItem: Array(Entity(edu.stanford.cs294s.sierra:ListItem)) #_[canonical={base=["previous items"]}] #[org_schema_type="ListItem"],
                                         out item: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["items"]}] #[org_schema_type="Thing"])
  #_[canonical="list item"]
  #_[confirmation="list item"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowToDirection extends CreativeWork, ListItem(out id: Entity(edu.stanford.cs294s.sierra:HowToDirection) #[unique=true] #[filterable=false],
                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowToDirection_name"],
                                                           out duringMedia: Array(Entity(tt:url)) #_[canonical={base=["during media"]}] #[org_schema_type="URL"],
                                                           out beforeMedia: Array(Entity(tt:url)) #_[canonical={base=["before media"]}] #[org_schema_type="URL"],
                                                           out prepTime: Measure(ms) #_[canonical={base=["prep time"]}] #[org_schema_type="Duration"],
                                                           out tool: Array(String) #_[canonical={base=["tools"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HowToDirection_tool"],
                                                           out performTime: Measure(ms) #_[canonical={base=["perform time"]}] #[org_schema_type="Duration"],
                                                           out totalTime: Measure(ms) #_[canonical={base=["total time"]}] #[org_schema_type="Duration"],
                                                           out supply: Array(String) #_[canonical={base=["supplies"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HowToDirection_supply"],
                                                           out afterMedia: Array(Entity(tt:url)) #_[canonical={base=["after media"]}] #[org_schema_type="URL"])
  #_[canonical="how to direction"]
  #_[confirmation="how to direction"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Landform extends Place(out id: Entity(edu.stanford.cs294s.sierra:Landform) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Landform_name"])
  #_[canonical="landform"]
  #_[confirmation="landform"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Volcano extends Landform(out id: Entity(edu.stanford.cs294s.sierra:Volcano) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Volcano_name"])
  #_[canonical="volcano"]
  #_[confirmation="volcano"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Trip extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Trip) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Trip_name"],
                                     out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                     out offers: {
                                       sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_sku"],
                                       availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                       availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                       mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_mpn"],
                                       advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                       serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_serialNumber"],
                                       ineligibleRegion: {
                                         address: {
                                           postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                           streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_streetAddress"],
                                           addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                           addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                           postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_postalCode"],
                                           addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_addressLocality"],
                                           faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_faxNumber"],
                                           hoursAvailable: {
                                             validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                             validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                             opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                             closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                             dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                           } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                           contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                           availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_availableLanguage"],
                                           telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                           email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                           contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_contactType"],
                                           productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_address_productSupported"]
                                         } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                         circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_circle"],
                                         box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_box"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_postalCode"],
                                         elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                         polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_polygon"],
                                         line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_ineligibleRegion_line"]
                                       } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                       gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_gtin8"],
                                       availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                       priceSpecification: {
                                         minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                         maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                         eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                         validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                         validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                         price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                         valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                       } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                       inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                       aggregateRating: {
                                         reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                         ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                         ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                         author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                         reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_aggregateRating_reviewAspect"]
                                       } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                       availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                       category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_category"],
                                       priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                       warranty: {
                                         durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                         warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                       } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                       eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                       validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                       validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                       price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                       gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_gtin14"],
                                       gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_gtin13"],
                                       gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_gtin12"],
                                       seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                       deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                       availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                       includesObject: {
                                         unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                         typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                         amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                         unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_includesObject_unitText"],
                                         businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                       } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                       review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                       eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                       itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                       itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                       offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                       eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                       acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                       businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                       eligibleRegion: {
                                         address: {
                                           postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                           streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_streetAddress"],
                                           addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                           addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                           postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_postalCode"],
                                           addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_addressLocality"],
                                           faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_faxNumber"],
                                           hoursAvailable: {
                                             validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                             validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                             opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                             closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                             dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                           } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                           contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                           availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_availableLanguage"],
                                           telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                           email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                           contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_contactType"],
                                           productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_address_productSupported"]
                                         } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                         circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_circle"],
                                         box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_box"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_postalCode"],
                                         elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                         polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_polygon"],
                                         line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Trip_offers_eligibleRegion_line"]
                                       } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                     } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                     out arrivalTime: Time #_[canonical={base=["arrival time"]}] #[org_schema_type="Time"],
                                     out departureTime: Date #_[canonical={base=["departure time"]}] #[org_schema_type="DateTime"])
  #_[canonical="trip"]
  #_[confirmation="trip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TrainTrip extends Trip(out id: Entity(edu.stanford.cs294s.sierra:TrainTrip) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TrainTrip_name"],
                                    out departureStation: Entity(edu.stanford.cs294s.sierra:TrainStation) #_[canonical={base=["departure station"]}] #[org_schema_type="TrainStation"],
                                    out departurePlatform: String #_[canonical={base=["departure platform"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TrainTrip_departurePlatform"],
                                    out trainName: String #_[canonical={base=["train name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TrainTrip_trainName"],
                                    out trainNumber: String #_[canonical={base=["train number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TrainTrip_trainNumber"],
                                    out arrivalStation: Entity(edu.stanford.cs294s.sierra:TrainStation) #_[canonical={base=["arrival station"]}] #[org_schema_type="TrainStation"],
                                    out arrivalPlatform: String #_[canonical={base=["arrival platform"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TrainTrip_arrivalPlatform"])
  #_[canonical="train trip"]
  #_[confirmation="train trip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportsOrganization extends Organization(out id: Entity(edu.stanford.cs294s.sierra:SportsOrganization) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportsOrganization_name"],
                                                     out sport: Array(Entity(tt:url)) #_[canonical={base=["sports"]}] #[org_schema_type="URL"])
  #_[canonical="sports organization"]
  #_[confirmation="sports organization"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportsTeam extends SportsOrganization(out id: Entity(edu.stanford.cs294s.sierra:SportsTeam) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportsTeam_name"],
                                                   out athlete: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["athletes"]}] #[org_schema_type="Person"],
                                                   out coach: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["coaches"]}] #[org_schema_type="Person"])
  #_[canonical="sports team"]
  #_[confirmation="sports team"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Store extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:Store) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Store_name"])
  #_[canonical="store"]
  #_[confirmation="store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GroceryStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:GroceryStore) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GroceryStore_name"])
  #_[canonical="grocery store"]
  #_[confirmation="grocery store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Demand extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Demand) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Demand_name"],
                                       out sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_sku"],
                                       out availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                       out availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                       out mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Demand_mpn"],
                                       out advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                       out serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_serialNumber"],
                                       out ineligibleRegion: {
                                         address: {
                                           postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_postOfficeBoxNumber"],
                                           streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_streetAddress"],
                                           addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                           addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                           postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_postalCode"],
                                           addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_addressLocality"],
                                           faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_faxNumber"],
                                           hoursAvailable: {
                                             validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                             validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                             opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                             closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                             dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                           } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                           contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                           availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_availableLanguage"],
                                           telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                           email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                           contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_contactType"],
                                           productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_address_productSupported"]
                                         } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                         circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_circle"],
                                         box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_box"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_postalCode"],
                                         elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                         polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_polygon"],
                                         line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_ineligibleRegion_line"]
                                       } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                       out gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_gtin8"],
                                       out availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                       out priceSpecification: {
                                         minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                         maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                         eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                         validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                         validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                         price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                         valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                       } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                       out inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                       out availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                       out warranty: {
                                         durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                         warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                       } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                       out eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                       out validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                       out validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                       out gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_gtin14"],
                                       out gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Demand_gtin13"],
                                       out gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_gtin12"],
                                       out seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                       out deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                       out availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                       out includesObject: {
                                         unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                         typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                         amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                         unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_includesObject_unitText"],
                                         businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                       } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                       out eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                       out itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                       out itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                       out eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                       out acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                       out businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                       out eligibleRegion: {
                                         address: {
                                           postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_postOfficeBoxNumber"],
                                           streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_streetAddress"],
                                           addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                           addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                           postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_postalCode"],
                                           addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_addressLocality"],
                                           faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_faxNumber"],
                                           hoursAvailable: {
                                             validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                             validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                             opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                             closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                             dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                           } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                           contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                           availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_availableLanguage"],
                                           telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                           email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                           contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_contactType"],
                                           productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_address_productSupported"]
                                         } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                         circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_circle"],
                                         box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_box"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_postalCode"],
                                         elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                         polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_polygon"],
                                         line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Demand_eligibleRegion_line"]
                                       } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"])
  #_[canonical="demand"]
  #_[confirmation="demand"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicComposition extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:MusicComposition) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicComposition_name"],
                                                   out musicCompositionForm: String #_[canonical={base=["music composition form"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MusicComposition_musicCompositionForm"],
                                                   out lyrics: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["lyrics"]}] #[org_schema_type="CreativeWork"],
                                                   out includedComposition: Entity(edu.stanford.cs294s.sierra:MusicComposition) #_[canonical={base=["included composition"]}] #[org_schema_type="MusicComposition"],
                                                   out lyricist: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["lyricist"]}] #[org_schema_type="Person"],
                                                   out recordedAs: Array(Entity(edu.stanford.cs294s.sierra:MusicRecording)) #_[canonical={passive_verb=["recorded as"],base=["recorded as"]}] #[org_schema_type="MusicRecording"],
                                                   out firstPerformance: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={base=["first performance"]}] #[org_schema_type="Event"],
                                                   out musicArrangement: Array(Entity(edu.stanford.cs294s.sierra:MusicComposition)) #_[canonical={base=["music arrangements"]}] #[org_schema_type="MusicComposition"],
                                                   out iswcCode: String #_[canonical={base=["iswc code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MusicComposition_iswcCode"],
                                                   out composer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["composer"]}] #[org_schema_type="Organization"],
                                                   out musicalKey: String #_[canonical={passive_verb=["musical key"],base=["musical key"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MusicComposition_musicalKey"])
  #_[canonical="music composition"]
  #_[confirmation="music composition"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WebPage extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:WebPage) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WebPage_name"],
                                          out lastReviewed: Date #_[canonical={base=["last reviewed"]}] #[org_schema_type="Date"],
                                          out speakable: Entity(tt:url) #_[canonical={passive_verb=["speakable"],base=["speakable"]}] #[org_schema_type="URL"],
                                          out breadcrumb: Array(String) #_[canonical={passive_verb=["breadcrumb"],base=["breadcrumb"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:WebPage_breadcrumb"],
                                          out significantLink: Entity(tt:url) #_[canonical={base=["significant link"]}] #[org_schema_type="URL"],
                                          out relatedLink: Array(Entity(tt:url)) #_[canonical={base=["related links"]}] #[org_schema_type="URL"],
                                          out mainContentOfPage: Entity(edu.stanford.cs294s.sierra:WebPageElement) #_[canonical={base=["main content of page"]}] #[org_schema_type="WebPageElement"],
                                          out reviewedBy: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={passive_verb=["reviewed by"],base=["reviewed by"]}] #[org_schema_type="Organization"],
                                          out primaryImageOfPage: Entity(tt:picture) #_[canonical={base=["primary image of page"]}] #[org_schema_type="ImageObject"],
                                          out specialty: Entity(edu.stanford.cs294s.sierra:Specialty) #_[canonical={base=["specialty"]}] #[org_schema_type="Specialty"])
  #_[canonical="web page"]
  #_[confirmation="web page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AboutPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:AboutPage) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AboutPage_name"])
  #_[canonical="about page"]
  #_[confirmation="about page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Action extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Action) #[unique=true] #[filterable=false],
                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Action_name"],
                                  out result: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["result"]}] #[org_schema_type="Thing"],
                                  out startTime: Time #_[canonical={base=["start time"]}] #[org_schema_type="Time"],
                                  out actionStatus: Enum(PotentialActionStatus,FailedActionStatus,CompletedActionStatus,ActiveActionStatus) #_[canonical={base=["action status"]}] #[org_schema_type="ActionStatusType"],
                                  out target: Entity(edu.stanford.cs294s.sierra:EntryPoint) #_[canonical={base=["target"]}] #[org_schema_type="EntryPoint"],
                                  out agent: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["agent"]}] #[org_schema_type="Organization"],
                                  out endTime: Date #_[canonical={base=["end time"]}] #[org_schema_type="DateTime"],
                                  out participant: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["participant"]}] #[org_schema_type="Person"],
                                  out instrument: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["instrument"]}] #[org_schema_type="Thing"],
                                  out object: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={verb=["object"],base=["object"]}] #[org_schema_type="Thing"],
                                  out error: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["error"]}] #[org_schema_type="Thing"],
                                  out location: {
                                    postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_postOfficeBoxNumber"],
                                    streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_streetAddress"],
                                    addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                    addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                    postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_postalCode"],
                                    addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_addressLocality"],
                                    faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_faxNumber"],
                                    hoursAvailable: {
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                      closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                      dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                    } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                    contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                    availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_availableLanguage"],
                                    telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                    email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                    contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_contactType"],
                                    productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Action_location_productSupported"]
                                  } #_[canonical={base=["location"]}] #[org_schema_type="PostalAddress"])
  #_[canonical="action"]
  #_[confirmation="action"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Book extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Book) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Book_name"],
                                       out isbn: String #_[canonical={passive_verb=["isbn"],base=["isbn"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Book_isbn"],
                                       out bookEdition: String #_[canonical={base=["book edition"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Book_bookEdition"],
                                       out bookFormat: Enum(EBook,AudiobookFormat,Hardcover,Paperback) #_[canonical={base=["book format"]}] #[org_schema_type="BookFormatType"],
                                       out illustrator: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["illustrator"]}] #[org_schema_type="Person"],
                                       out numberOfPages: Number #_[canonical={base=["number of pages"]}] #[org_schema_type="Integer"])
  #_[canonical="book"]
  #_[confirmation="book"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserPlays extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserPlays) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserPlays_name"])
  #_[canonical="user plays"]
  #_[confirmation="user plays"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Occupation extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Occupation) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Occupation_name"],
                                           out occupationLocation: Entity(edu.stanford.cs294s.sierra:AdministrativeArea) #_[canonical={base=["occupation location"]}] #[org_schema_type="AdministrativeArea"],
                                           out skills: String #_[canonical={base=["skills"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Occupation_skills"],
                                           out responsibilities: String #_[canonical={base=["responsibilities"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Occupation_responsibilities"],
                                           out occupationalCategory: Array(String) #_[canonical={base=["occupational categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Occupation_occupationalCategory"],
                                           out experienceRequirements: String #_[canonical={base=["experience requirements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Occupation_experienceRequirements"],
                                           out estimatedSalary: Array(Currency) #_[canonical={base=["estimated salaries"]}] #[org_schema_type="MonetaryAmount"])
  #_[canonical="occupation"]
  #_[confirmation="occupation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportsActivityLocation extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:SportsActivityLocation) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportsActivityLocation_name"])
  #_[canonical="sports activity location"]
  #_[confirmation="sports activity location"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CivicStructure extends Place(out id: Entity(edu.stanford.cs294s.sierra:CivicStructure) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CivicStructure_name"],
                                          out openingHours: String #_[canonical={base=["opening hours"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:CivicStructure_openingHours"])
  #_[canonical="civic structure"]
  #_[confirmation="civic structure"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query StadiumOrArena extends SportsActivityLocation, CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:StadiumOrArena) #[unique=true] #[filterable=false],
                                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:StadiumOrArena_name"])
  #_[canonical="stadium or arena"]
  #_[confirmation="stadium or arena"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ConvenienceStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ConvenienceStore) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ConvenienceStore_name"])
  #_[canonical="convenience store"]
  #_[confirmation="convenience store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Order extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Order) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Order_name"],
                                      out orderDate: Date #_[canonical={base=["order date"]}] #[org_schema_type="Date"],
                                      out orderNumber: String #_[canonical={base=["order number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_orderNumber"],
                                      out paymentUrl: Entity(tt:url) #_[canonical={base=["payment url"]}] #[org_schema_type="URL"],
                                      out orderStatus: Enum(OrderReturned,OrderProcessing,OrderPickupAvailable,OrderProblem,OrderDelivered,OrderInTransit,OrderCancelled,OrderPaymentDue) #_[canonical={base=["order status"]}] #[org_schema_type="OrderStatus"],
                                      out billingAddress: {
                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_postOfficeBoxNumber"],
                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_streetAddress"],
                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_postalCode"],
                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_addressLocality"],
                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_faxNumber"],
                                        hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_availableLanguage"],
                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_contactType"],
                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_billingAddress_productSupported"]
                                      } #_[canonical={base=["billing address"]}] #[org_schema_type="PostalAddress"],
                                      out partOfInvoice: Entity(edu.stanford.cs294s.sierra:Invoice) #_[canonical={base=["part of invoice"]}] #[org_schema_type="Invoice"],
                                      out confirmationNumber: Array(String) #_[canonical={base=["confirmation numbers"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_confirmationNumber"],
                                      out customer: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["customer"]}] #[org_schema_type="Person"],
                                      out broker: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["brokers"]}] #[org_schema_type="Person"],
                                      out isGift: Boolean #_[canonical={reverse_property=["gift"],base=["gift"]}] #[org_schema_type="Boolean"],
                                      out paymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["payment method"]}] #[org_schema_type="PaymentMethod"],
                                      out seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                      out paymentMethodId: Array(String) #_[canonical={base=["payment method id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_paymentMethodId"],
                                      out discount: Number #_[canonical={base=["discount"]}] #[org_schema_type="Number"],
                                      out orderDelivery: Entity(edu.stanford.cs294s.sierra:ParcelDelivery) #_[canonical={base=["order delivery"]}] #[org_schema_type="ParcelDelivery"],
                                      out orderedItem: Entity(edu.stanford.cs294s.sierra:Service) #_[canonical={base=["ordered item"]}] #[org_schema_type="Service"],
                                      out acceptedOffer: {
                                        sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_sku"],
                                        availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                        availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                        mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_mpn"],
                                        advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                        serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_serialNumber"],
                                        ineligibleRegion: {
                                          address: {
                                            postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_postOfficeBoxNumber"],
                                            streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_streetAddress"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_postalCode"],
                                            addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_addressLocality"],
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_address_productSupported"]
                                          } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                          circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_circle"],
                                          box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_box"],
                                          addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                          postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_postalCode"],
                                          elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                          polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_polygon"],
                                          line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_ineligibleRegion_line"]
                                        } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                        gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_gtin8"],
                                        availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                        priceSpecification: {
                                          minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                          maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                          eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                          valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                        } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                        inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                        aggregateRating: {
                                          reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                          ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                          ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                          author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                          reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_aggregateRating_reviewAspect"]
                                        } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                        availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                        category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_category"],
                                        priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                        warranty: {
                                          durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                          warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                        } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                        eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                        validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                        validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                        price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                        gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_gtin14"],
                                        gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_gtin13"],
                                        gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_gtin12"],
                                        seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                        deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                        availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                        includesObject: {
                                          unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                          typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                          amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                          unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_includesObject_unitText"],
                                          businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                        } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                        review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                        eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                        itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                        itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                        offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                        eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                        acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                        businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                        eligibleRegion: {
                                          address: {
                                            postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_postOfficeBoxNumber"],
                                            streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_streetAddress"],
                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                            addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_postalCode"],
                                            addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_addressLocality"],
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_address_productSupported"]
                                          } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                          circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_circle"],
                                          box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_box"],
                                          addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                          postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_postalCode"],
                                          elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                          polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_polygon"],
                                          line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_acceptedOffer_eligibleRegion_line"]
                                        } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                      } #_[canonical={base=["accepted offer"]}] #[org_schema_type="Offer"],
                                      out discountCurrency: String #_[canonical={base=["discount currency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_discountCurrency"],
                                      out paymentDueDate: Date #_[canonical={base=["payment due date"]}] #[org_schema_type="DateTime"],
                                      out discountCode: String #_[canonical={base=["discount code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Order_discountCode"])
  #_[canonical="order"]
  #_[confirmation="order"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Dataset extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Dataset) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Dataset_name"],
                                          out includedInDataCatalog: Array(Entity(edu.stanford.cs294s.sierra:DataCatalog)) #_[canonical={base=["included in data catalog"]}] #[org_schema_type="DataCatalog"],
                                          out issn: String #_[canonical={passive_verb=["issn"],base=["issn"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Dataset_issn"],
                                          out distribution: Array(Entity(edu.stanford.cs294s.sierra:DataDownload)) #_[canonical={base=["distributions"]}] #[org_schema_type="DataDownload"])
  #_[canonical="dataset"]
  #_[confirmation="dataset"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Person extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Person) #[unique=true] #[filterable=false],
                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Person_name"],
                                  out memberOf: Array(Entity(edu.stanford.cs294s.sierra:ProgramMembership)) #_[canonical={reverse_property=["member of"],base=["member of"]}] #[org_schema_type="ProgramMembership"],
                                  out address: {
                                    postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_postOfficeBoxNumber"],
                                    streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_streetAddress"],
                                    addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                    addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                    postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_postalCode"],
                                    addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_addressLocality"],
                                    faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_faxNumber"],
                                    hoursAvailable: {
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                      closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                      dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                    } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                    contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                    availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_availableLanguage"],
                                    telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                    email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                    contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_contactType"],
                                    productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_address_productSupported"]
                                  } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                  out spouse: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["spouse"]}] #[org_schema_type="Person"],
                                  out funder: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["funder"],base=["funder"]}] #[org_schema_type="Organization"],
                                  out deathDate: Date #_[canonical={base=["death date"]}] #[org_schema_type="Date"],
                                  out height: Measure(m) #_[canonical={base=["height"]}] #[org_schema_type="Distance"],
                                  out workLocation: Array({
                                    faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_workLocation_faxNumber"],
                                    hoursAvailable: {
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                      closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                      dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                    } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                    contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                    availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_workLocation_availableLanguage"],
                                    telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                    email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                    contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_workLocation_contactType"],
                                    productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_workLocation_productSupported"]
                                  }) #_[canonical={base=["work locations"]}] #[org_schema_type="ContactPoint"],
                                  out netWorth: Currency #_[canonical={passive_verb=["net worth"],base=["net worth"]}] #[org_schema_type="MonetaryAmount"],
                                  out faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_faxNumber"],
                                  out children: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["children"]}] #[org_schema_type="Person"],
                                  out hasOccupation: Entity(edu.stanford.cs294s.sierra:Occupation) #_[canonical={base=["occupation"]}] #[org_schema_type="Occupation"],
                                  out hasOfferCatalog: Array({
                                    sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_sku"],
                                    availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                    availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                    mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_mpn"],
                                    advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                    serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_serialNumber"],
                                    ineligibleRegion: {
                                      address: {
                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_postOfficeBoxNumber"],
                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_streetAddress"],
                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_postalCode"],
                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_addressLocality"],
                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_faxNumber"],
                                        hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_availableLanguage"],
                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_contactType"],
                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_address_productSupported"]
                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_circle"],
                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_box"],
                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_postalCode"],
                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_polygon"],
                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_ineligibleRegion_line"]
                                    } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                    gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_gtin8"],
                                    availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                    priceSpecification: {
                                      minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                      maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                      eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                      valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                    } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                    inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                    aggregateRating: {
                                      reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                      ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                      ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                      author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                      reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_aggregateRating_reviewAspect"]
                                    } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                    availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                    category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_category"],
                                    priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                    warranty: {
                                      durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                      warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                    } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                    eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                    validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                    validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                    price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                    gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_gtin14"],
                                    gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_gtin13"],
                                    gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_gtin12"],
                                    seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                    deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                    availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                    includesObject: {
                                      unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                      typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                      amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                      unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_includesObject_unitText"],
                                      businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                    } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                    review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                    eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                    itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                    itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                    offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                    eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                    acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                    businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                    eligibleRegion: {
                                      address: {
                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_postOfficeBoxNumber"],
                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_streetAddress"],
                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_postalCode"],
                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_addressLocality"],
                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_faxNumber"],
                                        hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_availableLanguage"],
                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_contactType"],
                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_address_productSupported"]
                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_circle"],
                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_box"],
                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_postalCode"],
                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_polygon"],
                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_hasOfferCatalog_eligibleRegion_line"]
                                    } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                  }) #_[canonical={base=["offer catalog"]}] #[org_schema_type="OfferCatalog"],
                                  out deathPlace: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["death place"]}] #[org_schema_type="Place"],
                                  out globalLocationNumber: String #_[canonical={base=["global location number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_globalLocationNumber"],
                                  out birthPlace: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["birth place"]}] #[org_schema_type="Place"],
                                  out gender: Enum(Male,Female) #_[canonical={base=["gender"]}] #[org_schema_type="GenderType"],
                                  out alumniOf: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={reverse_property=["alumni of"],base=["alumni of"]}] #[org_schema_type="Organization"],
                                  out homeLocation: Array({
                                    faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_homeLocation_faxNumber"],
                                    hoursAvailable: {
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                      closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                      dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                    } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                    contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                    availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_homeLocation_availableLanguage"],
                                    telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                    email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                    contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_homeLocation_contactType"],
                                    productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_homeLocation_productSupported"]
                                  }) #_[canonical={base=["home locations"]}] #[org_schema_type="ContactPoint"],
                                  out duns: String #_[canonical={verb=["duns"],base=["duns"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_duns"],
                                  out taxID: String #_[canonical={base=["tax id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_taxID"],
                                  out award: Array(String) #_[canonical={base=["awards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_award"],
                                  out birthDate: Date #_[canonical={base=["birth date"]}] #[org_schema_type="Date"],
                                  out makesOffer: Array({
                                    sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_sku"],
                                    availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                    availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                    mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_mpn"],
                                    advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                    serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_serialNumber"],
                                    ineligibleRegion: {
                                      address: {
                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_postOfficeBoxNumber"],
                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_streetAddress"],
                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_postalCode"],
                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_addressLocality"],
                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_faxNumber"],
                                        hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_availableLanguage"],
                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_contactType"],
                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_address_productSupported"]
                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_circle"],
                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_box"],
                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_postalCode"],
                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_polygon"],
                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_ineligibleRegion_line"]
                                    } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                    gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_gtin8"],
                                    availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                    priceSpecification: {
                                      minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                      maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                      eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                      valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                    } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                    inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                    aggregateRating: {
                                      reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                      ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                      ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                      author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                      reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_aggregateRating_reviewAspect"]
                                    } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                    availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                    category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_category"],
                                    priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                    warranty: {
                                      durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                      warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                    } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                    eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                    validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                    validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                    price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                    gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_gtin14"],
                                    gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_gtin13"],
                                    gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_gtin12"],
                                    seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                    deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                    availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                    includesObject: {
                                      unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                      typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                      amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                      unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_includesObject_unitText"],
                                      businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                    } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                    review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                    eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                    itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                    itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                    offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                    eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                    acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                    businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                    eligibleRegion: {
                                      address: {
                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_postOfficeBoxNumber"],
                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_streetAddress"],
                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_postalCode"],
                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_addressLocality"],
                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_faxNumber"],
                                        hoursAvailable: {
                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_availableLanguage"],
                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_contactType"],
                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_address_productSupported"]
                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_circle"],
                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_box"],
                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_postalCode"],
                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_polygon"],
                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_makesOffer_eligibleRegion_line"]
                                    } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                  }) #_[canonical={verb=["makes # offer"],base=["offer"]}] #[org_schema_type="Offer"],
                                  out familyName: String #_[canonical={base=["family name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_familyName"],
                                  out seeks: Array(Entity(edu.stanford.cs294s.sierra:Demand)) #_[canonical={verb=["seeks"],base=["seeks"]}] #[org_schema_type="Demand"],
                                  out sibling: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["siblings"]}] #[org_schema_type="Person"],
                                  out performerIn: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={base=["performer in"]}] #[org_schema_type="Event"],
                                  out honorificPrefix: Array(String) #_[canonical={base=["honorific prefix"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_honorificPrefix"],
                                  out additionalName: Array(String) #_[canonical={base=["additional names"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_additionalName"],
                                  out telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                  out email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                  out weight: Measure(ms) #_[canonical={base=["weight"]}] #[org_schema_type="QuantitativeValue"],
                                  out contactPoint: Array({
                                    faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_contactPoint_faxNumber"],
                                    hoursAvailable: {
                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                      opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                      closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                      dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                    } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                    contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                    availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_contactPoint_availableLanguage"],
                                    telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                    email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                    contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_contactPoint_contactType"],
                                    productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_contactPoint_productSupported"]
                                  }) #_[canonical={base=["contact points"]}] #[org_schema_type="ContactPoint"],
                                  out colleague: Array(Entity(tt:url)) #_[canonical={base=["colleagues"]}] #[org_schema_type="URL"],
                                  out givenName: String #_[canonical={base=["given name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_givenName"],
                                  out naics: String #_[canonical={passive_verb=["naics"],base=["naics"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_naics"],
                                  out hasPOS: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["pos"]}] #[org_schema_type="Place"],
                                  out parent: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["parents"]}] #[org_schema_type="Person"],
                                  out owns: {
                                    typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                    ownedFrom: Date #_[canonical={passive_verb=["owned from"],base=["owned from"]}] #[org_schema_type="DateTime"],
                                    ownedThrough: Date #_[canonical={passive_verb=["owned through"],base=["owned through"]}] #[org_schema_type="DateTime"],
                                    acquiredFrom: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={passive_verb=["acquired from"],base=["acquired from"]}] #[org_schema_type="Person"]
                                  } #_[canonical={verb=["owns"],base=["owns"]}] #[org_schema_type="OwnershipInfo"],
                                  out publishingPrinciples: Entity(tt:url) #_[canonical={base=["publishing principles"]}] #[org_schema_type="URL"],
                                  out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"],
                                  out isicV4: String #_[canonical={base=["isic v4"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_isicV4"],
                                  out brand: Entity(edu.stanford.cs294s.sierra:Brand) #_[canonical={base=["brand"]}] #[org_schema_type="Brand"],
                                  out honorificSuffix: Array(String) #_[canonical={base=["honorific suffixes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_honorificSuffix"],
                                  out vatID: String #_[canonical={passive_verb=["vat id"],base=["vat id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Person_vatID"],
                                  out nationality: Entity(edu.stanford.cs294s.sierra:Country) #_[canonical={base=["nationality"]}] #[org_schema_type="Country"],
                                  out relatedTo: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={passive_verb=["related to"],base=["related to"]}] #[org_schema_type="Person"],
                                  out follows: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={verb=["follows"],base=["follows"]}] #[org_schema_type="Person"],
                                  out knows: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={verb=["knows"],base=["knows"]}] #[org_schema_type="Person"],
                                  out worksFor: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={verb=["works for"],base=["works for"]}] #[org_schema_type="Organization"])
  #_[canonical="person"]
  #_[confirmation="person"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FinancialService extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:FinancialService) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FinancialService_name"],
                                                    out feesAndCommissionsSpecification: Entity(tt:url) #_[canonical={base=["fees and commissions specification"]}] #[org_schema_type="URL"])
  #_[canonical="financial service"]
  #_[confirmation="financial service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query InsuranceAgency extends FinancialService(out id: Entity(edu.stanford.cs294s.sierra:InsuranceAgency) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:InsuranceAgency_name"])
  #_[canonical="insurance agency"]
  #_[confirmation="insurance agency"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MediaObject extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:MediaObject) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MediaObject_name"],
                                              out startTime: Time #_[canonical={base=["start time"]}] #[org_schema_type="Time"],
                                              out uploadDate: Date #_[canonical={base=["upload date"]}] #[org_schema_type="Date"],
                                              out playerType: String #_[canonical={base=["player type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaObject_playerType"],
                                              out height: Measure(m) #_[canonical={base=["height"]}] #[org_schema_type="Distance"],
                                              out bitrate: String #_[canonical={passive_verb=["bitrate"],base=["bitrate"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaObject_bitrate"],
                                              out requiresSubscription: Boolean #_[canonical={verb=["requires # subscription"],base=["subscription"]}] #[org_schema_type="Boolean"],
                                              out regionsAllowed: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["regions allowed"]}] #[org_schema_type="Place"],
                                              out endTime: Date #_[canonical={base=["end time"]}] #[org_schema_type="DateTime"],
                                              out contentSize: String #_[canonical={base=["content size"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaObject_contentSize"],
                                              out width: Measure(m) #_[canonical={base=["width"]}] #[org_schema_type="Distance"],
                                              out contentUrl: Entity(tt:url) #_[canonical={base=["content url"]}] #[org_schema_type="URL"],
                                              out associatedArticle: Array(Entity(edu.stanford.cs294s.sierra:NewsArticle)) #_[canonical={base=["associated articles"]}] #[org_schema_type="NewsArticle"],
                                              out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                              out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"],
                                              out encodesCreativeWork: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["encodes creative work"]}] #[org_schema_type="CreativeWork"],
                                              out encodingFormat: Entity(tt:url) #_[canonical={base=["encoding format"]}] #[org_schema_type="URL"])
  #_[canonical="media object"]
  #_[confirmation="media object"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AudioObject extends MediaObject(out id: Entity(edu.stanford.cs294s.sierra:AudioObject) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AudioObject_name"],
                                             out transcript: String #_[canonical={base=["transcript"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AudioObject_transcript"],
                                             out caption: String #_[canonical={base=["caption"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AudioObject_caption"])
  #_[canonical="audio object"]
  #_[confirmation="audio object"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicRecording extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:MusicRecording) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicRecording_name"],
                                                 out recordingOf: Entity(edu.stanford.cs294s.sierra:MusicComposition) #_[canonical={reverse_property=["recording of"],base=["recording of"]}] #[org_schema_type="MusicComposition"],
                                                 out isrcCode: String #_[canonical={base=["isrc code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MusicRecording_isrcCode"],
                                                 out inAlbum: Entity(edu.stanford.cs294s.sierra:MusicAlbum) #_[canonical={base=["in album"]}] #[org_schema_type="MusicAlbum"],
                                                 out inPlaylist: Entity(edu.stanford.cs294s.sierra:MusicPlaylist) #_[canonical={base=["in playlist"]}] #[org_schema_type="MusicPlaylist"],
                                                 out byArtist: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["by artist"]}] #[org_schema_type="MusicGroup"],
                                                 out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"])
  #_[canonical="music recording"]
  #_[confirmation="music recording"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GeospatialGeometry(out id: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #[unique=true] #[filterable=false],
                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GeospatialGeometry_name"],
                                out geoWithin: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo within"]}] #[org_schema_type="GeospatialGeometry"],
                                out geoContains: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo contains"]}] #[org_schema_type="Place"],
                                out geoOverlaps: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo overlaps"]}] #[org_schema_type="GeospatialGeometry"],
                                out geoCrosses: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo crosses"]}] #[org_schema_type="Place"],
                                out geoCovers: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo covers"]}] #[org_schema_type="Place"],
                                out geoEquals: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo equals"]}] #[org_schema_type="Place"],
                                out geoTouches: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["geo touches"]}] #[org_schema_type="Place"],
                                out geoDisjoint: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo disjoint"]}] #[org_schema_type="GeospatialGeometry"],
                                out geoIntersects: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo intersects"]}] #[org_schema_type="GeospatialGeometry"],
                                out geoCoveredBy: Entity(edu.stanford.cs294s.sierra:GeospatialGeometry) #_[canonical={base=["geo covered by"]}] #[org_schema_type="GeospatialGeometry"])
  #_[canonical="geospatial geometry"]
  #_[confirmation="geospatial geometry"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Reservation extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Reservation) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Reservation_name"],
                                            out reservationStatus: Enum(ReservationConfirmed,ReservationPending,ReservationCancelled,ReservationHold) #_[canonical={base=["reservation status"]}] #[org_schema_type="ReservationStatusType"],
                                            out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                            out programMembershipUsed: Entity(edu.stanford.cs294s.sierra:ProgramMembership) #_[canonical={base=["program membership used"]}] #[org_schema_type="ProgramMembership"],
                                            out underName: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["under name"]}] #[org_schema_type="Organization"],
                                            out totalPrice: Number #_[canonical={base=["total price"]}] #[org_schema_type="Number"],
                                            out reservationFor: Entity(edu.stanford.cs294s.sierra:Thing) #_[canonical={base=["reservation for"]}] #[org_schema_type="Thing"],
                                            out broker: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["brokers"]}] #[org_schema_type="Person"],
                                            out modifiedTime: Date #_[canonical={base=["modified time"]}] #[org_schema_type="DateTime"],
                                            out bookingTime: Date #_[canonical={base=["booking time"]}] #[org_schema_type="DateTime"],
                                            out reservationId: Array(String) #_[canonical={base=["reservation id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Reservation_reservationId"],
                                            out reservedTicket: Array(Entity(edu.stanford.cs294s.sierra:Ticket)) #_[canonical={base=["reserved tickets"]}] #[org_schema_type="Ticket"])
  #_[canonical="reservation"]
  #_[confirmation="reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TaxiReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:TaxiReservation) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TaxiReservation_name"],
                                                 out pickupTime: Date #_[canonical={base=["pickup time"]}] #[org_schema_type="DateTime"],
                                                 out partySize: Number #_[canonical={base=["party size"]}] #[org_schema_type="QuantitativeValue"],
                                                 out pickupLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["pickup location"]}] #[org_schema_type="Place"])
  #_[canonical="taxi reservation"]
  #_[confirmation="taxi reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Audience extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Audience) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Audience_name"],
                                         out audienceType: String #_[canonical={base=["audience type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Audience_audienceType"],
                                         out geographicArea: Entity(edu.stanford.cs294s.sierra:AdministrativeArea) #_[canonical={base=["geographic area"]}] #[org_schema_type="AdministrativeArea"])
  #_[canonical="audience"]
  #_[confirmation="audience"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BroadcastChannel extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:BroadcastChannel) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BroadcastChannel_name"],
                                                 out broadcastFrequency: String #_[canonical={base=["broadcast frequency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastChannel_broadcastFrequency"],
                                                 out broadcastChannelId: String #_[canonical={base=["broadcast channel id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastChannel_broadcastChannelId"],
                                                 out broadcastServiceTier: String #_[canonical={base=["broadcast service tier"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastChannel_broadcastServiceTier"],
                                                 out inBroadcastLineup: Entity(edu.stanford.cs294s.sierra:CableOrSatelliteService) #_[canonical={base=["in broadcast lineup"]}] #[org_schema_type="CableOrSatelliteService"],
                                                 out providesBroadcastService: Entity(edu.stanford.cs294s.sierra:BroadcastService) #_[canonical={verb=["provides broadcast service"],base=["provides broadcast service"]}] #[org_schema_type="BroadcastService"],
                                                 out genre: Entity(tt:url) #_[canonical={base=["genre"]}] #[org_schema_type="URL"])
  #_[canonical="broadcast channel"]
  #_[confirmation="broadcast channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BroadcastService extends Service(out id: Entity(edu.stanford.cs294s.sierra:BroadcastService) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BroadcastService_name"],
                                              out broadcastFrequency: String #_[canonical={base=["broadcast frequency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastService_broadcastFrequency"],
                                              out broadcastTimezone: String #_[canonical={base=["broadcast timezone"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastService_broadcastTimezone"],
                                              out broadcastAffiliateOf: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={reverse_property=["broadcast affiliate of"],base=["broadcast affiliate of"]}] #[org_schema_type="Organization"],
                                              out videoFormat: String #_[canonical={base=["video format"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastService_videoFormat"],
                                              out parentService: Array(Entity(edu.stanford.cs294s.sierra:BroadcastService)) #_[canonical={base=["parent services"]}] #[org_schema_type="BroadcastService"],
                                              out broadcastDisplayName: String #_[canonical={base=["broadcast display name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastService_broadcastDisplayName"],
                                              out hasBroadcastChannel: Array(Entity(edu.stanford.cs294s.sierra:BroadcastChannel)) #_[canonical={base=["broadcast channel"]}] #[org_schema_type="BroadcastChannel"],
                                              out broadcaster: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["broadcaster"]}] #[org_schema_type="Organization"])
  #_[canonical="broadcast service"]
  #_[confirmation="broadcast service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AlignmentObject extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:AlignmentObject) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AlignmentObject_name"],
                                                out targetDescription: String #_[canonical={base=["target description"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AlignmentObject_targetDescription"],
                                                out alignmentType: Array(String) #_[canonical={base=["alignment types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AlignmentObject_alignmentType"],
                                                out targetUrl: Entity(tt:url) #_[canonical={base=["target url"]}] #[org_schema_type="URL"],
                                                out targetName: String #_[canonical={base=["target name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AlignmentObject_targetName"],
                                                out educationalFramework: String #_[canonical={base=["educational framework"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:AlignmentObject_educationalFramework"])
  #_[canonical="alignment object"]
  #_[confirmation="alignment object"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Product extends Thing(out id: Entity(edu.stanford.cs294s.sierra:Product) #[unique=true] #[filterable=false],
                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_name"],
                                   out manufacturer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["manufacturer"]}] #[org_schema_type="Organization"],
                                   out sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_sku"],
                                   out audience: Array(Entity(edu.stanford.cs294s.sierra:Audience)) #_[canonical={base=["audiences"]}] #[org_schema_type="Audience"],
                                   out mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_mpn"],
                                   out height: Measure(m) #_[canonical={base=["height"]}] #[org_schema_type="Distance"],
                                   out gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_gtin8"],
                                   out aggregateRating: {
                                     reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                     ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                     ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                     author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                     reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_aggregateRating_reviewAspect"]
                                   } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                   out isConsumableFor: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["consumable for"],base=["consumable for"]}] #[org_schema_type="Product"],
                                   out offers: {
                                     sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_sku"],
                                     availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                     availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                     mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_offers_mpn"],
                                     advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                     serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_serialNumber"],
                                     ineligibleRegion: {
                                       address: {
                                         postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                         streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_streetAddress"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_postalCode"],
                                         addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_addressLocality"],
                                         faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_faxNumber"],
                                         hoursAvailable: {
                                           validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                           validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                           opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                           closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                           dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                         } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                         contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                         availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_availableLanguage"],
                                         telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                         email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                         contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_contactType"],
                                         productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_address_productSupported"]
                                       } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                       circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_circle"],
                                       box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_box"],
                                       addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                       postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_postalCode"],
                                       elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                       polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_polygon"],
                                       line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_ineligibleRegion_line"]
                                     } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                     gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_gtin8"],
                                     availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                     priceSpecification: {
                                       minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                       maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                       eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                       validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                       validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                       price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                       valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                     } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                     inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                     aggregateRating: {
                                       reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                       ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                       ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                       author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                       reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_aggregateRating_reviewAspect"]
                                     } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                     availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                     category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_category"],
                                     priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                     warranty: {
                                       durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                       warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                     } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                     eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                     validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                     validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                     price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                     gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_gtin14"],
                                     gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_offers_gtin13"],
                                     gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_gtin12"],
                                     seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                     deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                     availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                     includesObject: {
                                       unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                       typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                       amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                       unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_includesObject_unitText"],
                                       businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                     } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                     review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                     eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                     itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                     itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                     offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                     eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                     acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                     businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                     eligibleRegion: {
                                       address: {
                                         postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                         streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_streetAddress"],
                                         addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                         addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                         postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_postalCode"],
                                         addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_addressLocality"],
                                         faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_faxNumber"],
                                         hoursAvailable: {
                                           validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                           validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                           opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                           closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                           dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                         } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                         contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                         availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_availableLanguage"],
                                         telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                         email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                         contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_contactType"],
                                         productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_address_productSupported"]
                                       } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                       circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_circle"],
                                       box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_box"],
                                       addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                       postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_postalCode"],
                                       elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                       polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_polygon"],
                                       line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_offers_eligibleRegion_line"]
                                     } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                   } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                   out award: Array(String) #_[canonical={base=["awards"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_award"],
                                   out category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_category"],
                                   out width: Measure(m) #_[canonical={base=["width"]}] #[org_schema_type="Distance"],
                                   out isAccessoryOrSparePartFor: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["accessory or spare part for"],base=["accessory or spare part for"]}] #[org_schema_type="Product"],
                                   out logo: Entity(tt:picture) #_[canonical={base=["logo"]}] #[org_schema_type="ImageObject"],
                                   out gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_gtin14"],
                                   out gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_gtin13"],
                                   out gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_gtin12"],
                                   out material: Array(Entity(tt:url)) #_[canonical={base=["materials"]}] #[org_schema_type="URL"],
                                   out weight: Measure(ms) #_[canonical={base=["weight"]}] #[org_schema_type="QuantitativeValue"],
                                   out depth: Measure(m) #_[canonical={base=["depth"]}] #[org_schema_type="QuantitativeValue"],
                                   out isSimilarTo: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["similar to"],base=["similar to"]}] #[org_schema_type="Product"],
                                   out model: String #_[canonical={base=["model"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_model"],
                                   out color: String #_[canonical={base=["color"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_color"],
                                   out isRelatedTo: Array(Entity(edu.stanford.cs294s.sierra:Product)) #_[canonical={passive_verb=["related to"],base=["related to"]}] #[org_schema_type="Product"],
                                   out productID: String #_[canonical={base=["product id"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Product_productID"],
                                   out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                   out purchaseDate: Date #_[canonical={base=["purchase date"]}] #[org_schema_type="Date"],
                                   out itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                   out productionDate: Date #_[canonical={base=["production date"]}] #[org_schema_type="Date"],
                                   out slogan: Array(String) #_[canonical={base=["slogans"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Product_slogan"],
                                   out brand: Entity(edu.stanford.cs294s.sierra:Brand) #_[canonical={base=["brand"]}] #[org_schema_type="Brand"],
                                   out releaseDate: Date #_[canonical={base=["release date"]}] #[org_schema_type="Date"])
  #_[canonical="product"]
  #_[confirmation="product"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Vehicle extends Product(out id: Entity(edu.stanford.cs294s.sierra:Vehicle) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Vehicle_name"],
                                     out numberOfForwardGears: Number #_[canonical={base=["number of forward gears"]}] #[org_schema_type="Number"],
                                     out mileageFromOdometer: Number #_[canonical={base=["mileage from odometer"]}] #[org_schema_type="QuantitativeValue"],
                                     out vehicleInteriorColor: String #_[canonical={base=["vehicle interior color"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Vehicle_vehicleInteriorColor"],
                                     out vehicleSeatingCapacity: Number #_[canonical={base=["vehicle seating capacity"]}] #[org_schema_type="QuantitativeValue"],
                                     out vehicleEngine: {
                                       fuelType: Entity(tt:url) #_[canonical={base=["fuel type"]}] #[org_schema_type="URL"]
                                     } #_[canonical={base=["vehicle engine"]}] #[org_schema_type="EngineSpecification"],
                                     out vehicleModelDate: Date #_[canonical={base=["vehicle model date"]}] #[org_schema_type="Date"],
                                     out numberOfDoors: Number #_[canonical={base=["number of doors"]}] #[org_schema_type="Number"],
                                     out vehicleConfiguration: Array(String) #_[canonical={base=["vehicle configurations"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Vehicle_vehicleConfiguration"],
                                     out fuelType: Entity(tt:url) #_[canonical={base=["fuel type"]}] #[org_schema_type="URL"],
                                     out vehicleIdentificationNumber: String #_[canonical={base=["vehicle identification number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Vehicle_vehicleIdentificationNumber"],
                                     out fuelConsumption: Number #_[canonical={base=["fuel consumption"]}] #[org_schema_type="QuantitativeValue"],
                                     out numberOfPreviousOwners: Number #_[canonical={base=["number of previous owners"]}] #[org_schema_type="QuantitativeValue"],
                                     out numberOfAxles: Number #_[canonical={base=["number of axles"]}] #[org_schema_type="Number"],
                                     out vehicleInteriorType: String #_[canonical={base=["vehicle interior type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Vehicle_vehicleInteriorType"],
                                     out knownVehicleDamages: Array(String) #_[canonical={base=["known vehicle damages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Vehicle_knownVehicleDamages"],
                                     out numberOfAirbags: Number #_[canonical={base=["number of airbags"]}] #[org_schema_type="Number"],
                                     out cargoVolume: Number #_[canonical={base=["cargo volume"]}] #[org_schema_type="QuantitativeValue"],
                                     out vehicleTransmission: Entity(tt:url) #_[canonical={base=["vehicle transmission"]}] #[org_schema_type="URL"],
                                     out dateVehicleFirstRegistered: Date #_[canonical={base=["date vehicle first registered"]}] #[org_schema_type="Date"],
                                     out purchaseDate: Date #_[canonical={base=["purchase date"]}] #[org_schema_type="Date"],
                                     out productionDate: Date #_[canonical={base=["production date"]}] #[org_schema_type="Date"],
                                     out steeringPosition: Enum(LeftHandDriving,RightHandDriving) #_[canonical={base=["steering position"]}] #[org_schema_type="SteeringPositionValue"],
                                     out fuelEfficiency: Number #_[canonical={base=["fuel efficiency"]}] #[org_schema_type="QuantitativeValue"],
                                     out driveWheelConfiguration: Enum(FrontWheelDriveConfiguration,FourWheelDriveConfiguration,AllWheelDriveConfiguration,RearWheelDriveConfiguration) #_[canonical={base=["drive wheel configuration"]}] #[org_schema_type="DriveWheelConfigurationValue"])
  #_[canonical="vehicle"]
  #_[confirmation="vehicle"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FoodEstablishmentReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:FoodEstablishmentReservation) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FoodEstablishmentReservation_name"],
                                                              out startTime: Time #_[canonical={base=["start time"]}] #[org_schema_type="Time"],
                                                              out endTime: Date #_[canonical={base=["end time"]}] #[org_schema_type="DateTime"],
                                                              out partySize: Number #_[canonical={base=["party size"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="food establishment reservation"]
  #_[confirmation="food establishment reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutomotiveBusiness extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutomotiveBusiness) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutomotiveBusiness_name"])
  #_[canonical="automotive business"]
  #_[confirmation="automotive business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoPartsStore extends AutomotiveBusiness, Store(out id: Entity(edu.stanford.cs294s.sierra:AutoPartsStore) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoPartsStore_name"])
  #_[canonical="auto parts store"]
  #_[confirmation="auto parts store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DietarySupplement(out id: Entity(edu.stanford.cs294s.sierra:DietarySupplement) #[unique=true] #[filterable=false],
                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DietarySupplement_name"],
                               out manufacturer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["manufacturer"]}] #[org_schema_type="Organization"])
  #_[canonical="dietary supplement"]
  #_[confirmation="dietary supplement"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Drug(out id: Entity(edu.stanford.cs294s.sierra:Drug) #[unique=true] #[filterable=false],
                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Drug_name"],
                  out manufacturer: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["manufacturer"]}] #[org_schema_type="Organization"])
  #_[canonical="drug"]
  #_[confirmation="drug"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Painting extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Painting) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Painting_name"])
  #_[canonical="painting"]
  #_[confirmation="painting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SomeProducts extends Product(out id: Entity(edu.stanford.cs294s.sierra:SomeProducts) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SomeProducts_name"],
                                          out inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="some products"]
  #_[confirmation="some products"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EntryPoint extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:EntryPoint) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EntryPoint_name"],
                                           out urlTemplate: Array(String) #_[canonical={passive_verb=["url templates"],base=["url templates"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EntryPoint_urlTemplate"],
                                           out actionApplication: Array(Entity(edu.stanford.cs294s.sierra:SoftwareApplication)) #_[canonical={base=["action applications"]}] #[org_schema_type="SoftwareApplication"],
                                           out actionPlatform: Entity(tt:url) #_[canonical={base=["action platform"]}] #[org_schema_type="URL"],
                                           out httpMethod: Array(String) #_[canonical={base=["http methods"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EntryPoint_httpMethod"],
                                           out encodingType: String #_[canonical={base=["encoding type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EntryPoint_encodingType"],
                                           out contentType: String #_[canonical={base=["content type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EntryPoint_contentType"])
  #_[canonical="entry point"]
  #_[confirmation="entry point"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Question extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Question) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Question_name"],
                                           out upvoteCount: Number #_[canonical={base=["upvote count"]}] #[org_schema_type="Integer"],
                                           out answerCount: Number #_[canonical={base=["answer count"]}] #[org_schema_type="Integer"],
                                           out acceptedAnswer: Entity(edu.stanford.cs294s.sierra:Answer) #_[canonical={base=["accepted answer"]}] #[org_schema_type="Answer"],
                                           out suggestedAnswer: Array(Entity(edu.stanford.cs294s.sierra:Answer)) #_[canonical={base=["suggested answer"]}] #[org_schema_type="Answer"],
                                           out downvoteCount: Number #_[canonical={base=["downvote count"]}] #[org_schema_type="Integer"])
  #_[canonical="question"]
  #_[confirmation="question"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Comment extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Comment) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Comment_name"],
                                          out upvoteCount: Number #_[canonical={base=["upvote count"]}] #[org_schema_type="Integer"],
                                          out parentItem: Entity(edu.stanford.cs294s.sierra:Question) #_[canonical={base=["parent item"]}] #[org_schema_type="Question"],
                                          out downvoteCount: Number #_[canonical={base=["downvote count"]}] #[org_schema_type="Integer"])
  #_[canonical="comment"]
  #_[confirmation="comment"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query JewelryStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:JewelryStore) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:JewelryStore_name"])
  #_[canonical="jewelry store"]
  #_[confirmation="jewelry store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WebPageElement extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:WebPageElement) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WebPageElement_name"])
  #_[canonical="web page element"]
  #_[confirmation="web page element"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WPFooter extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:WPFooter) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WPFooter_name"])
  #_[canonical="wpfooter"]
  #_[confirmation="wpfooter"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query QAPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:QAPage) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:QAPage_name"])
  #_[canonical="qapage"]
  #_[confirmation="qapage"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HomeGoodsStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:HomeGoodsStore) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HomeGoodsStore_name"])
  #_[canonical="home goods store"]
  #_[confirmation="home goods store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MonetaryGrant(out id: Entity(edu.stanford.cs294s.sierra:MonetaryGrant) #[unique=true] #[filterable=false],
                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MonetaryGrant_name"],
                           out funder: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["funder"],base=["funder"]}] #[org_schema_type="Organization"],
                           out amount: Currency #_[canonical={base=["amount"]}] #[org_schema_type="MonetaryAmount"])
  #_[canonical="monetary grant"]
  #_[confirmation="monetary grant"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PublicationEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:PublicationEvent) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PublicationEvent_name"],
                                            out publishedOn: Array(Entity(edu.stanford.cs294s.sierra:BroadcastService)) #_[canonical={passive_verb=["published on"],base=["published on"]}] #[org_schema_type="BroadcastService"],
                                            out isAccessibleForFree: Boolean #_[canonical={passive_verb=["accessible for free"],base=["accessible for free"]}] #[org_schema_type="Boolean"])
  #_[canonical="publication event"]
  #_[confirmation="publication event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Course extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Course) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Course_name"],
                                         out coursePrerequisites: String #_[canonical={base=["course prerequisites"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Course_coursePrerequisites"],
                                         out educationalCredentialAwarded: Array(Entity(tt:url)) #_[canonical={passive_verb=["educational credential awarded"],base=["educational credential awarded"]}] #[org_schema_type="URL"],
                                         out courseCode: String #_[canonical={base=["course code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Course_courseCode"],
                                         out hasCourseInstance: Array(Entity(edu.stanford.cs294s.sierra:CourseInstance)) #_[canonical={base=["course instance"]}] #[org_schema_type="CourseInstance"])
  #_[canonical="course"]
  #_[confirmation="course"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EmergencyService extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:EmergencyService) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EmergencyService_name"])
  #_[canonical="emergency service"]
  #_[confirmation="emergency service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PoliceStation extends EmergencyService, CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:PoliceStation) #[unique=true] #[filterable=false],
                                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PoliceStation_name"])
  #_[canonical="police station"]
  #_[confirmation="police station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Flight extends Trip(out id: Entity(edu.stanford.cs294s.sierra:Flight) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Flight_name"],
                                 out arrivalAirport: Entity(edu.stanford.cs294s.sierra:Airport) #_[canonical={base=["arrival airport"]}] #[org_schema_type="Airport"],
                                 out arrivalGate: String #_[canonical={base=["arrival gate"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_arrivalGate"],
                                 out flightNumber: String #_[canonical={base=["flight number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_flightNumber"],
                                 out departureAirport: Entity(edu.stanford.cs294s.sierra:Airport) #_[canonical={base=["departure airport"]}] #[org_schema_type="Airport"],
                                 out boardingPolicy: Enum(ZoneBoardingPolicy,GroupBoardingPolicy) #_[canonical={base=["boarding policy"]}] #[org_schema_type="BoardingPolicyType"],
                                 out aircraft: String #_[canonical={base=["aircraft"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_aircraft"],
                                 out seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                 out webCheckinTime: Date #_[canonical={base=["web checkin time"]}] #[org_schema_type="DateTime"],
                                 out mealService: String #_[canonical={base=["meal service"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_mealService"],
                                 out departureGate: String #_[canonical={base=["departure gate"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_departureGate"],
                                 out departureTerminal: String #_[canonical={base=["departure terminal"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_departureTerminal"],
                                 out estimatedFlightDuration: Measure(ms) #_[canonical={base=["estimated flight duration"]}] #[org_schema_type="Duration"],
                                 out flightDistance: Measure(m) #_[canonical={base=["flight distance"]}] #[org_schema_type="Distance"],
                                 out arrivalTerminal: String #_[canonical={base=["arrival terminal"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Flight_arrivalTerminal"])
  #_[canonical="flight"]
  #_[confirmation="flight"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DigitalDocument extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:DigitalDocument) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DigitalDocument_name"],
                                                  out hasDigitalDocumentPermission: Array(Entity(edu.stanford.cs294s.sierra:DigitalDocumentPermission)) #_[canonical={base=["digital document permission"]}] #[org_schema_type="DigitalDocumentPermission"])
  #_[canonical="digital document"]
  #_[confirmation="digital document"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HealthAndBeautyBusiness extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:HealthAndBeautyBusiness) #[unique=true] #[filterable=false],
                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HealthAndBeautyBusiness_name"])
  #_[canonical="health and beauty business"]
  #_[confirmation="health and beauty business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HealthClub extends SportsActivityLocation, HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:HealthClub) #[unique=true] #[filterable=false],
                                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HealthClub_name"])
  #_[canonical="health club"]
  #_[confirmation="health club"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TireShop extends Store(out id: Entity(edu.stanford.cs294s.sierra:TireShop) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TireShop_name"])
  #_[canonical="tire shop"]
  #_[confirmation="tire shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PlaceOfWorship extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:PlaceOfWorship) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PlaceOfWorship_name"])
  #_[canonical="place of worship"]
  #_[confirmation="place of worship"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Synagogue extends PlaceOfWorship(out id: Entity(edu.stanford.cs294s.sierra:Synagogue) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Synagogue_name"])
  #_[canonical="synagogue"]
  #_[confirmation="synagogue"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AnimalShelter extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:AnimalShelter) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AnimalShelter_name"])
  #_[canonical="animal shelter"]
  #_[confirmation="animal shelter"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WorkersUnion extends Organization(out id: Entity(edu.stanford.cs294s.sierra:WorkersUnion) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WorkersUnion_name"])
  #_[canonical="workers union"]
  #_[confirmation="workers union"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query JobPosting extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:JobPosting) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:JobPosting_name"],
                                           out jobLocation: Array(Entity(edu.stanford.cs294s.sierra:Place)) #_[canonical={base=["job locations"]}] #[org_schema_type="Place"],
                                           out incentiveCompensation: String #_[canonical={base=["incentive compensation"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_incentiveCompensation"],
                                           out workHours: String #_[canonical={base=["work hours"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_workHours"],
                                           out salaryCurrency: String #_[canonical={base=["salary currency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_salaryCurrency"],
                                           out jobBenefits: String #_[canonical={base=["job benefits"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_jobBenefits"],
                                           out datePosted: Date #_[canonical={base=["date posted"]}] #[org_schema_type="Date"],
                                           out skills: String #_[canonical={base=["skills"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_skills"],
                                           out responsibilities: String #_[canonical={base=["responsibilities"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_responsibilities"],
                                           out baseSalary: Number #_[canonical={base=["base salary"]}] #[org_schema_type="Number"],
                                           out validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                           out hiringOrganization: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["hiring organization"]}] #[org_schema_type="Organization"],
                                           out relevantOccupation: Entity(edu.stanford.cs294s.sierra:Occupation) #_[canonical={base=["relevant occupation"]}] #[org_schema_type="Occupation"],
                                           out specialCommitments: String #_[canonical={base=["special commitments"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_specialCommitments"],
                                           out occupationalCategory: Array(String) #_[canonical={base=["occupational categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_occupationalCategory"],
                                           out experienceRequirements: String #_[canonical={base=["experience requirements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_experienceRequirements"],
                                           out employmentType: String #_[canonical={base=["employment type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_employmentType"],
                                           out estimatedSalary: Array(Currency) #_[canonical={base=["estimated salaries"]}] #[org_schema_type="MonetaryAmount"],
                                           out title: String #_[canonical={base=["title"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_title"],
                                           out industry: String #_[canonical={base=["industry"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:JobPosting_industry"])
  #_[canonical="job posting"]
  #_[confirmation="job posting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicPlaylist extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:MusicPlaylist) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicPlaylist_name"],
                                                out track: Array(Entity(edu.stanford.cs294s.sierra:ItemList)) #_[canonical={verb=["tracks"],base=["tracks"]}] #[org_schema_type="ItemList"],
                                                out numTracks: Number #_[canonical={base=["num tracks"]}] #[org_schema_type="Integer"])
  #_[canonical="music playlist"]
  #_[confirmation="music playlist"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicAlbum extends MusicPlaylist(out id: Entity(edu.stanford.cs294s.sierra:MusicAlbum) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicAlbum_name"],
                                              out albumProductionType: Enum(SoundtrackAlbum,RemixAlbum,LiveAlbum,DemoAlbum,SpokenWordAlbum,CompilationAlbum,StudioAlbum,DJMixAlbum,MixtapeAlbum) #_[canonical={base=["album production type"]}] #[org_schema_type="MusicAlbumProductionType"],
                                              out albumReleaseType: Enum(AlbumRelease,EPRelease,BroadcastRelease,SingleRelease) #_[canonical={base=["album release type"]}] #[org_schema_type="MusicAlbumReleaseType"],
                                              out byArtist: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["by artist"]}] #[org_schema_type="MusicGroup"],
                                              out albumRelease: Array(Entity(edu.stanford.cs294s.sierra:MusicRelease)) #_[canonical={base=["album releases"]}] #[org_schema_type="MusicRelease"])
  #_[canonical="music album"]
  #_[confirmation="music album"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ParcelDelivery extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ParcelDelivery) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_name"],
                                               out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                               out trackingUrl: Entity(tt:url) #_[canonical={base=["tracking url"]}] #[org_schema_type="URL"],
                                               out deliveryAddress: {
                                                 postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_postOfficeBoxNumber"],
                                                 streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_streetAddress"],
                                                 addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                 addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                 postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_postalCode"],
                                                 addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_addressLocality"],
                                                 faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_faxNumber"],
                                                 hoursAvailable: {
                                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                 } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                 contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                 availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_availableLanguage"],
                                                 telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                 email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                 contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_contactType"],
                                                 productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_deliveryAddress_productSupported"]
                                               } #_[canonical={base=["delivery address"]}] #[org_schema_type="PostalAddress"],
                                               out trackingNumber: String #_[canonical={base=["tracking number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_trackingNumber"],
                                               out hasDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                               out deliveryStatus: Entity(edu.stanford.cs294s.sierra:DeliveryEvent) #_[canonical={base=["delivery status"]}] #[org_schema_type="DeliveryEvent"],
                                               out originAddress: {
                                                 postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_postOfficeBoxNumber"],
                                                 streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_streetAddress"],
                                                 addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                 addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                 postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_postalCode"],
                                                 addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_addressLocality"],
                                                 faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_faxNumber"],
                                                 hoursAvailable: {
                                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                 } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                 contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                 availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_availableLanguage"],
                                                 telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                 email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                 contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_contactType"],
                                                 productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ParcelDelivery_originAddress_productSupported"]
                                               } #_[canonical={base=["origin address"]}] #[org_schema_type="PostalAddress"],
                                               out itemShipped: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item shipped"]}] #[org_schema_type="Product"],
                                               out partOfOrder: Entity(edu.stanford.cs294s.sierra:Order) #_[canonical={base=["part of order"]}] #[org_schema_type="Order"],
                                               out expectedArrivalFrom: Date #_[canonical={passive_verb=["expected arrival from"],base=["expected arrival from"]}] #[org_schema_type="DateTime"],
                                               out expectedArrivalUntil: Date #_[canonical={passive_verb=["expected arrival until"],base=["expected arrival until"]}] #[org_schema_type="DateTime"])
  #_[canonical="parcel delivery"]
  #_[confirmation="parcel delivery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EducationalOccupationalProgram(out id: Entity(edu.stanford.cs294s.sierra:EducationalOccupationalProgram) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_name"],
                                            out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                            out offers: {
                                              sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_sku"],
                                              availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                              availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                              mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_mpn"],
                                              advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                              serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_serialNumber"],
                                              ineligibleRegion: {
                                                address: {
                                                  postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                                  streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_streetAddress"],
                                                  addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                  addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                  postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_postalCode"],
                                                  addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_addressLocality"],
                                                  faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_faxNumber"],
                                                  hoursAvailable: {
                                                    validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                    validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                    opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                    closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                    dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                  } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                  contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                  availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_availableLanguage"],
                                                  telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                  email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                  contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_contactType"],
                                                  productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_address_productSupported"]
                                                } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_circle"],
                                                box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_box"],
                                                addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_postalCode"],
                                                elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_polygon"],
                                                line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_ineligibleRegion_line"]
                                              } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                              gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_gtin8"],
                                              availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                              priceSpecification: {
                                                minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                                maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                                eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                                valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                              } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                              inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                              aggregateRating: {
                                                reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                                ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                                ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                                author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                                reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_aggregateRating_reviewAspect"]
                                              } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                              availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                              category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_category"],
                                              priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                              warranty: {
                                                durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                                warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                              } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                              eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                              gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_gtin14"],
                                              gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_gtin13"],
                                              gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_gtin12"],
                                              seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                              deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                              availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                              includesObject: {
                                                unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                                typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                                amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                                unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_includesObject_unitText"],
                                                businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                              } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                              review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                              eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                              itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                              itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                              offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                              eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                              acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                              businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                              eligibleRegion: {
                                                address: {
                                                  postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                                  streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_streetAddress"],
                                                  addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                  addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                  postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_postalCode"],
                                                  addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_addressLocality"],
                                                  faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_faxNumber"],
                                                  hoursAvailable: {
                                                    validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                    validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                    opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                    closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                    dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                  } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                  contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                  availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_availableLanguage"],
                                                  telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                  email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                  contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_contactType"],
                                                  productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_address_productSupported"]
                                                } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_circle"],
                                                box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_box"],
                                                addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_postalCode"],
                                                elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_polygon"],
                                                line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalProgram_offers_eligibleRegion_line"]
                                              } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                            } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                            out educationalCredentialAwarded: Array(Entity(tt:url)) #_[canonical={passive_verb=["educational credential awarded"],base=["educational credential awarded"]}] #[org_schema_type="URL"])
  #_[canonical="educational occupational program"]
  #_[confirmation="educational occupational program"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Invoice extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Invoice) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Invoice_name"],
                                        out provider: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["provider"]}] #[org_schema_type="Person"],
                                        out billingPeriod: Measure(ms) #_[canonical={base=["billing period"]}] #[org_schema_type="Duration"],
                                        out confirmationNumber: Array(String) #_[canonical={base=["confirmation numbers"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Invoice_confirmationNumber"],
                                        out accountId: String #_[canonical={base=["account id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Invoice_accountId"],
                                        out scheduledPaymentDate: Date #_[canonical={base=["scheduled payment date"]}] #[org_schema_type="Date"],
                                        out customer: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["customer"]}] #[org_schema_type="Person"],
                                        out category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Invoice_category"],
                                        out paymentStatus: Enum(PaymentComplete,PaymentPastDue,PaymentDue,PaymentDeclined,PaymentAutomaticallyApplied) #_[canonical={base=["payment status"]}] #[org_schema_type="PaymentStatusType"],
                                        out broker: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["brokers"]}] #[org_schema_type="Person"],
                                        out referencesOrder: Entity(edu.stanford.cs294s.sierra:Order) #_[canonical={base=["references order"]}] #[org_schema_type="Order"],
                                        out paymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["payment method"]}] #[org_schema_type="PaymentMethod"],
                                        out paymentMethodId: Array(String) #_[canonical={base=["payment method id"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Invoice_paymentMethodId"],
                                        out minimumPaymentDue: Currency #_[canonical={passive_verb=["minimum payment due"],base=["minimum payment due"]}] #[org_schema_type="MonetaryAmount"],
                                        out totalPaymentDue: Currency #_[canonical={passive_verb=["total payment due"],base=["total payment due"]}] #[org_schema_type="MonetaryAmount"],
                                        out paymentDueDate: Date #_[canonical={base=["payment due date"]}] #[org_schema_type="DateTime"])
  #_[canonical="invoice"]
  #_[confirmation="invoice"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EntertainmentBusiness extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:EntertainmentBusiness) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EntertainmentBusiness_name"])
  #_[canonical="entertainment business"]
  #_[confirmation="entertainment business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MovieTheater extends CivicStructure, EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:MovieTheater) #[unique=true] #[filterable=false],
                                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MovieTheater_name"],
                                                                        out screenCount: Number #_[canonical={base=["screen count"]}] #[org_schema_type="Number"])
  #_[canonical="movie theater"]
  #_[confirmation="movie theater"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Accommodation extends Place(out id: Entity(edu.stanford.cs294s.sierra:Accommodation) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Accommodation_name"],
                                         out floorSize: Number #_[canonical={base=["floor size"]}] #[org_schema_type="QuantitativeValue"],
                                         out petsAllowed: Boolean #_[canonical={base=["pets allowed"]}] #[org_schema_type="Boolean"],
                                         out amenityFeature: Array(Entity(edu.stanford.cs294s.sierra:LocationFeatureSpecification)) #_[canonical={base=["amenity features"]}] #[org_schema_type="LocationFeatureSpecification"],
                                         out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"],
                                         out permittedUsage: String #_[canonical={base=["permitted usage"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Accommodation_permittedUsage"])
  #_[canonical="accommodation"]
  #_[confirmation="accommodation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Suite extends Accommodation(out id: Entity(edu.stanford.cs294s.sierra:Suite) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Suite_name"],
                                         out occupancy: Number #_[canonical={base=["occupancy"]}] #[org_schema_type="QuantitativeValue"],
                                         out bed: String #_[canonical={base=["bed"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Suite_bed"],
                                         out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"])
  #_[canonical="suite"]
  #_[confirmation="suite"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Room extends Accommodation(out id: Entity(edu.stanford.cs294s.sierra:Room) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Room_name"])
  #_[canonical="room"]
  #_[confirmation="room"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HotelRoom extends Room(out id: Entity(edu.stanford.cs294s.sierra:HotelRoom) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HotelRoom_name"],
                                    out occupancy: Number #_[canonical={base=["occupancy"]}] #[org_schema_type="QuantitativeValue"],
                                    out bed: String #_[canonical={base=["bed"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HotelRoom_bed"])
  #_[canonical="hotel room"]
  #_[confirmation="hotel room"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Apartment extends Accommodation(out id: Entity(edu.stanford.cs294s.sierra:Apartment) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Apartment_name"],
                                             out occupancy: Number #_[canonical={base=["occupancy"]}] #[org_schema_type="QuantitativeValue"],
                                             out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"])
  #_[canonical="apartment"]
  #_[confirmation="apartment"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query House extends Accommodation(out id: Entity(edu.stanford.cs294s.sierra:House) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:House_name"],
                                         out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"])
  #_[canonical="house"]
  #_[confirmation="house"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SingleFamilyResidence extends House(out id: Entity(edu.stanford.cs294s.sierra:SingleFamilyResidence) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SingleFamilyResidence_name"],
                                                 out occupancy: Number #_[canonical={base=["occupancy"]}] #[org_schema_type="QuantitativeValue"],
                                                 out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"])
  #_[canonical="single family residence"]
  #_[confirmation="single family residence"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ActionAccessSpecification extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ActionAccessSpecification) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_name"],
                                                          out availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                                          out requiresSubscription: Boolean #_[canonical={verb=["requires # subscription"],base=["subscription"]}] #[org_schema_type="Boolean"],
                                                          out category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_category"],
                                                          out availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                                          out expectsAcceptanceOf: Array({
                                                            sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_sku"],
                                                            availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                                            availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                                            mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_mpn"],
                                                            advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                                            serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_serialNumber"],
                                                            ineligibleRegion: {
                                                              address: {
                                                                postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_postOfficeBoxNumber"],
                                                                streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_streetAddress"],
                                                                addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                                addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                                postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_postalCode"],
                                                                addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_addressLocality"],
                                                                faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_faxNumber"],
                                                                hoursAvailable: {
                                                                  validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                                  validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                                  opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                                  closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                                  dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                                } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                                contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                                availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_availableLanguage"],
                                                                telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                                email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                                contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_contactType"],
                                                                productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_address_productSupported"]
                                                              } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                              circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_circle"],
                                                              box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_box"],
                                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_postalCode"],
                                                              elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                              polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_polygon"],
                                                              line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_ineligibleRegion_line"]
                                                            } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                                            gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_gtin8"],
                                                            availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                                            priceSpecification: {
                                                              minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                                              maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                                              eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                              price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                                              valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                                            } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                                            inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                                            aggregateRating: {
                                                              reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                                              ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                                              ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                                              author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                                              reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_aggregateRating_reviewAspect"]
                                                            } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                                            availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                                            category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_category"],
                                                            priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                                            warranty: {
                                                              durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                                              warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                                            } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                                            eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                                            validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                            validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                            price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                                            gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_gtin14"],
                                                            gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_gtin13"],
                                                            gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_gtin12"],
                                                            seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                                            deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                                            availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                                            includesObject: {
                                                              unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                                              typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                                              amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                                              unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_includesObject_unitText"],
                                                              businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                                            } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                                            review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                                            eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                                            itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                                            itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                                            offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                                            eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                                            acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                                            businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                                            eligibleRegion: {
                                                              address: {
                                                                postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_postOfficeBoxNumber"],
                                                                streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_streetAddress"],
                                                                addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                                addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                                postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_postalCode"],
                                                                addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_addressLocality"],
                                                                faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_faxNumber"],
                                                                hoursAvailable: {
                                                                  validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                                  validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                                  opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                                  closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                                  dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                                } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                                contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                                availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_availableLanguage"],
                                                                telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                                email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                                contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_contactType"],
                                                                productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_address_productSupported"]
                                                              } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                              circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_circle"],
                                                              box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_box"],
                                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_postalCode"],
                                                              elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                              polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_polygon"],
                                                              line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_expectsAcceptanceOf_eligibleRegion_line"]
                                                            } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                                          }) #_[canonical={verb=["expects acceptance of"],base=["expects acceptance of"]}] #[org_schema_type="Offer"],
                                                          out eligibleRegion: {
                                                            address: {
                                                              postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_postOfficeBoxNumber"],
                                                              streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_streetAddress"],
                                                              addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                              addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                              postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_postalCode"],
                                                              addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_addressLocality"],
                                                              faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_faxNumber"],
                                                              hoursAvailable: {
                                                                validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                                validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                                opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                                closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                                dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                              } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                              contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                              availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_availableLanguage"],
                                                              telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                              email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                              contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_contactType"],
                                                              productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_address_productSupported"]
                                                            } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                            circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_circle"],
                                                            box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_box"],
                                                            addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                            postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_postalCode"],
                                                            elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                            polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_polygon"],
                                                            line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ActionAccessSpecification_eligibleRegion_line"]
                                                          } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"])
  #_[canonical="action access specification"]
  #_[confirmation="action access specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SiteNavigationElement extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:SiteNavigationElement) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SiteNavigationElement_name"])
  #_[canonical="site navigation element"]
  #_[confirmation="site navigation element"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MediaSubscription extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:MediaSubscription) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_name"],
                                                  out authenticator: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["authenticator"]}] #[org_schema_type="Organization"],
                                                  out expectsAcceptanceOf: Array({
                                                    sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_sku"],
                                                    availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                                    availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                                    mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_mpn"],
                                                    advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                                    serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_serialNumber"],
                                                    ineligibleRegion: {
                                                      address: {
                                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_postOfficeBoxNumber"],
                                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_streetAddress"],
                                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_postalCode"],
                                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_addressLocality"],
                                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_faxNumber"],
                                                        hoursAvailable: {
                                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_availableLanguage"],
                                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_contactType"],
                                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_address_productSupported"]
                                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_circle"],
                                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_box"],
                                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_postalCode"],
                                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_polygon"],
                                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_ineligibleRegion_line"]
                                                    } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                                    gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_gtin8"],
                                                    availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                                    priceSpecification: {
                                                      minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                                      maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                                      eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                                      validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                      validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                      price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                                      valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                                    } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                                    inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                                    aggregateRating: {
                                                      reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                                      ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                                      ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                                      author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                                      reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_aggregateRating_reviewAspect"]
                                                    } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                                    availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                                    category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_category"],
                                                    priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                                    warranty: {
                                                      durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                                      warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                                    } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                                    eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                                    validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                    validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                    price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                                    gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_gtin14"],
                                                    gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_gtin13"],
                                                    gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_gtin12"],
                                                    seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                                    deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                                    availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                                    includesObject: {
                                                      unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                                      typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                                      amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                                      unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_includesObject_unitText"],
                                                      businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                                    } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                                    review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                                    eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                                    itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                                    itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                                    offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                                    eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                                    acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                                    businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                                    eligibleRegion: {
                                                      address: {
                                                        postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_postOfficeBoxNumber"],
                                                        streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_streetAddress"],
                                                        addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                        addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                        postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_postalCode"],
                                                        addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_addressLocality"],
                                                        faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_faxNumber"],
                                                        hoursAvailable: {
                                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                        contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                        availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_availableLanguage"],
                                                        telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                        email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                        contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_contactType"],
                                                        productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_address_productSupported"]
                                                      } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                                      circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_circle"],
                                                      box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_box"],
                                                      addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                      postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_postalCode"],
                                                      elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                                      polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_polygon"],
                                                      line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MediaSubscription_expectsAcceptanceOf_eligibleRegion_line"]
                                                    } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                                  }) #_[canonical={verb=["expects acceptance of"],base=["expects acceptance of"]}] #[org_schema_type="Offer"])
  #_[canonical="media subscription"]
  #_[confirmation="media subscription"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VideoGame extends Game, SoftwareApplication(out id: Entity(edu.stanford.cs294s.sierra:VideoGame) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VideoGame_name"],
                                                         out gamePlatform: Entity(tt:url) #_[canonical={base=["game platform"]}] #[org_schema_type="URL"],
                                                         out gameServer: Entity(edu.stanford.cs294s.sierra:GameServer) #_[canonical={base=["game server"]}] #[org_schema_type="GameServer"],
                                                         out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                         out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                         out cheatCode: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["cheat code"]}] #[org_schema_type="CreativeWork"],
                                                         out gameTip: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={base=["game tip"]}] #[org_schema_type="CreativeWork"],
                                                         out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                                         out playMode: Enum(MultiPlayer,CoOp,SinglePlayer) #_[canonical={base=["play mode"]}] #[org_schema_type="GamePlayMode"],
                                                         out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"])
  #_[canonical="video game"]
  #_[confirmation="video game"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OrderItem extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:OrderItem) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OrderItem_name"],
                                          out orderItemStatus: Enum(OrderReturned,OrderProcessing,OrderPickupAvailable,OrderProblem,OrderDelivered,OrderInTransit,OrderCancelled,OrderPaymentDue) #_[canonical={base=["order item status"]}] #[org_schema_type="OrderStatus"],
                                          out orderQuantity: Number #_[canonical={base=["order quantity"]}] #[org_schema_type="Number"],
                                          out orderDelivery: Entity(edu.stanford.cs294s.sierra:ParcelDelivery) #_[canonical={base=["order delivery"]}] #[org_schema_type="ParcelDelivery"],
                                          out orderedItem: Entity(edu.stanford.cs294s.sierra:Service) #_[canonical={base=["ordered item"]}] #[org_schema_type="Service"],
                                          out orderItemNumber: String #_[canonical={base=["order item number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:OrderItem_orderItemNumber"])
  #_[canonical="order item"]
  #_[confirmation="order item"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LegalService extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:LegalService) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LegalService_name"])
  #_[canonical="legal service"]
  #_[confirmation="legal service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DigitalDocumentPermission extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:DigitalDocumentPermission) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DigitalDocumentPermission_name"],
                                                          out grantee: {
                                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DigitalDocumentPermission_grantee_faxNumber"],
                                                            hoursAvailable: {
                                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DigitalDocumentPermission_grantee_availableLanguage"],
                                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DigitalDocumentPermission_grantee_contactType"],
                                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DigitalDocumentPermission_grantee_productSupported"]
                                                          } #_[canonical={base=["grantee"]}] #[org_schema_type="ContactPoint"],
                                                          out permissionType: Enum(ReadPermission,WritePermission,CommentPermission) #_[canonical={base=["permission type"]}] #[org_schema_type="DigitalDocumentPermissionType"])
  #_[canonical="digital document permission"]
  #_[confirmation="digital document permission"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ProgramMembership extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ProgramMembership) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ProgramMembership_name"],
                                                  out membershipNumber: Array(String) #_[canonical={base=["membership numbers"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ProgramMembership_membershipNumber"],
                                                  out member: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["members"]}] #[org_schema_type="Organization"],
                                                  out programName: String #_[canonical={base=["program name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ProgramMembership_programName"],
                                                  out hostingOrganization: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["hosting organization"]}] #[org_schema_type="Organization"])
  #_[canonical="program membership"]
  #_[confirmation="program membership"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VisualArtwork extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:VisualArtwork) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VisualArtwork_name"],
                                                out height: Measure(m) #_[canonical={base=["height"]}] #[org_schema_type="Distance"],
                                                out artMedium: Entity(tt:url) #_[canonical={base=["art medium"]}] #[org_schema_type="URL"],
                                                out artform: Entity(tt:url) #_[canonical={passive_verb=["artform"],base=["artform"]}] #[org_schema_type="URL"],
                                                out artworkSurface: Entity(tt:url) #_[canonical={base=["artwork surface"]}] #[org_schema_type="URL"],
                                                out artEdition: Number #_[canonical={base=["art edition"]}] #[org_schema_type="Integer"],
                                                out width: Measure(m) #_[canonical={base=["width"]}] #[org_schema_type="Distance"],
                                                out depth: Measure(m) #_[canonical={base=["depth"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="visual artwork"]
  #_[confirmation="visual artwork"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BodyOfWater extends Landform(out id: Entity(edu.stanford.cs294s.sierra:BodyOfWater) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BodyOfWater_name"])
  #_[canonical="body of water"]
  #_[confirmation="body of water"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SeaBodyOfWater extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:SeaBodyOfWater) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SeaBodyOfWater_name"])
  #_[canonical="sea body of water"]
  #_[confirmation="sea body of water"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Attorney extends LegalService(out id: Entity(edu.stanford.cs294s.sierra:Attorney) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Attorney_name"])
  #_[canonical="attorney"]
  #_[confirmation="attorney"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Residence extends Place(out id: Entity(edu.stanford.cs294s.sierra:Residence) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Residence_name"])
  #_[canonical="residence"]
  #_[confirmation="residence"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ApartmentComplex extends Residence(out id: Entity(edu.stanford.cs294s.sierra:ApartmentComplex) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ApartmentComplex_name"])
  #_[canonical="apartment complex"]
  #_[confirmation="apartment complex"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HomeAndConstructionBusiness extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:HomeAndConstructionBusiness) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HomeAndConstructionBusiness_name"])
  #_[canonical="home and construction business"]
  #_[confirmation="home and construction business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HousePainter extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:HousePainter) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HousePainter_name"])
  #_[canonical="house painter"]
  #_[confirmation="house painter"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MovieRentalStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:MovieRentalStore) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MovieRentalStore_name"])
  #_[canonical="movie rental store"]
  #_[confirmation="movie rental store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PropertyValueSpecification extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:PropertyValueSpecification) #[unique=true] #[filterable=false],
                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PropertyValueSpecification_name"],
                                                           out defaultValue: String #_[canonical={base=["default"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PropertyValueSpecification_defaultValue"],
                                                           out valuePattern: String #_[canonical={base=["value pattern"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PropertyValueSpecification_valuePattern"],
                                                           out stepValue: Number #_[canonical={base=["step"]}] #[org_schema_type="Number"],
                                                           out valueMaxLength: Number #_[canonical={base=["value max length"]}] #[org_schema_type="Number"],
                                                           out readonlyValue: Boolean #_[canonical={passive_verb=["readonly"],base=["readonly"]}] #[org_schema_type="Boolean"],
                                                           out valueMinLength: Number #_[canonical={base=["value min length"]}] #[org_schema_type="Number"],
                                                           out maxValue: Number #_[canonical={base=["max"]}] #[org_schema_type="Number"],
                                                           out valueName: String #_[canonical={base=["value name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PropertyValueSpecification_valueName"],
                                                           out multipleValues: Boolean #_[canonical={base=["multiple values"]}] #[org_schema_type="Boolean"],
                                                           out minValue: Number #_[canonical={base=["min"]}] #[org_schema_type="Number"],
                                                           out valueRequired: Boolean #_[canonical={base=["value required"]}] #[org_schema_type="Boolean"])
  #_[canonical="property value specification"]
  #_[confirmation="property value specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EducationEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:EducationEvent) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationEvent_name"])
  #_[canonical="education event"]
  #_[confirmation="education event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ToyStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ToyStore) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ToyStore_name"])
  #_[canonical="toy store"]
  #_[confirmation="toy store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LodgingBusiness extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:LodgingBusiness) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LodgingBusiness_name"],
                                                   out audience: Array(Entity(edu.stanford.cs294s.sierra:Audience)) #_[canonical={base=["audiences"]}] #[org_schema_type="Audience"],
                                                   out checkinTime: Time #_[canonical={base=["checkin time"]}] #[org_schema_type="DateTime"],
                                                   out petsAllowed: Boolean #_[canonical={base=["pets allowed"]}] #[org_schema_type="Boolean"],
                                                   out availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LodgingBusiness_availableLanguage"],
                                                   out amenityFeature: Array(Entity(edu.stanford.cs294s.sierra:LocationFeatureSpecification)) #_[canonical={base=["amenity features"]}] #[org_schema_type="LocationFeatureSpecification"],
                                                   out starRating: Array({
                                                     ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                                     author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                                     reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LodgingBusiness_starRating_reviewAspect"]
                                                   }) #_[canonical={base=["star ratings"]}] #[org_schema_type="Rating"],
                                                   out checkoutTime: Time #_[canonical={base=["checkout time"]}] #[org_schema_type="Time"],
                                                   out numberOfRooms: Number #_[canonical={base=["number of rooms"]}] #[org_schema_type="Number"])
  #_[canonical="lodging business"]
  #_[confirmation="lodging business"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BedAndBreakfast extends LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:BedAndBreakfast) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BedAndBreakfast_name"])
  #_[canonical="bed and breakfast"]
  #_[confirmation="bed and breakfast"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportsEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:SportsEvent) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportsEvent_name"],
                                       out awayTeam: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["away team"]}] #[org_schema_type="Person"],
                                       out homeTeam: Entity(edu.stanford.cs294s.sierra:SportsTeam) #_[canonical={base=["home team"]}] #[org_schema_type="SportsTeam"],
                                       out competitor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["competitors"]}] #[org_schema_type="Person"])
  #_[canonical="sports event"]
  #_[confirmation="sports event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Reservoir extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:Reservoir) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Reservoir_name"])
  #_[canonical="reservoir"]
  #_[confirmation="reservoir"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Distillery extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:Distillery) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Distillery_name"])
  #_[canonical="distillery"]
  #_[confirmation="distillery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ServiceChannel extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ServiceChannel) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_name"],
                                               out providesService: Entity(edu.stanford.cs294s.sierra:Service) #_[canonical={verb=["provides # service"],base=["service"]}] #[org_schema_type="Service"],
                                               out serviceLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["service location"]}] #[org_schema_type="Place"],
                                               out servicePostalAddress: {
                                                 postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_postOfficeBoxNumber"],
                                                 streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_streetAddress"],
                                                 addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                                 addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                                 postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_postalCode"],
                                                 addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_addressLocality"],
                                                 faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_faxNumber"],
                                                 hoursAvailable: {
                                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                 } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                 contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                 availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_availableLanguage"],
                                                 telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                 email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                 contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_contactType"],
                                                 productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePostalAddress_productSupported"]
                                               } #_[canonical={base=["service postal address"]}] #[org_schema_type="PostalAddress"],
                                               out availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_availableLanguage"],
                                               out serviceSmsNumber: {
                                                 faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_serviceSmsNumber_faxNumber"],
                                                 hoursAvailable: {
                                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                 } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                 contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                 availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_serviceSmsNumber_availableLanguage"],
                                                 telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                 email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                 contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_serviceSmsNumber_contactType"],
                                                 productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_serviceSmsNumber_productSupported"]
                                               } #_[canonical={base=["service sms number"]}] #[org_schema_type="ContactPoint"],
                                               out serviceUrl: Entity(tt:url) #_[canonical={base=["service url"]}] #[org_schema_type="URL"],
                                               out servicePhone: {
                                                 faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePhone_faxNumber"],
                                                 hoursAvailable: {
                                                   validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                   validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                   opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                   closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                   dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                 } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                 contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                                 availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePhone_availableLanguage"],
                                                 telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                                 email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                                 contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePhone_contactType"],
                                                 productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ServiceChannel_servicePhone_productSupported"]
                                               } #_[canonical={base=["service phone"]}] #[org_schema_type="ContactPoint"],
                                               out processingTime: Measure(ms) #_[canonical={base=["processing time"]}] #[org_schema_type="Duration"])
  #_[canonical="service channel"]
  #_[confirmation="service channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CourseInstance extends Event(out id: Entity(edu.stanford.cs294s.sierra:CourseInstance) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CourseInstance_name"],
                                          out instructor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["instructors"]}] #[org_schema_type="Person"],
                                          out courseMode: Entity(tt:url) #_[canonical={base=["course mode"]}] #[org_schema_type="URL"])
  #_[canonical="course instance"]
  #_[confirmation="course instance"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GovernmentOffice extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:GovernmentOffice) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GovernmentOffice_name"])
  #_[canonical="government office"]
  #_[confirmation="government office"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PostOffice extends GovernmentOffice(out id: Entity(edu.stanford.cs294s.sierra:PostOffice) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PostOffice_name"])
  #_[canonical="post office"]
  #_[confirmation="post office"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CheckoutPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:CheckoutPage) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CheckoutPage_name"])
  #_[canonical="checkout page"]
  #_[confirmation="checkout page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Episode extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Episode) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Episode_name"],
                                          out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                          out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                          out partOfSeries: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeries) #_[canonical={base=["part of series"]}] #[org_schema_type="CreativeWorkSeries"],
                                          out partOfSeason: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason) #_[canonical={base=["part of season"]}] #[org_schema_type="CreativeWorkSeason"],
                                          out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                          out episodeNumber: Number #_[canonical={base=["episode number"]}] #[org_schema_type="Integer"],
                                          out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                          out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"])
  #_[canonical="episode"]
  #_[confirmation="episode"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MovieSeries extends CreativeWorkSeries(out id: Entity(edu.stanford.cs294s.sierra:MovieSeries) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MovieSeries_name"],
                                                    out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                    out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                    out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                                    out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                                    out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"])
  #_[canonical="movie series"]
  #_[confirmation="movie series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VideoObject extends MediaObject(out id: Entity(edu.stanford.cs294s.sierra:VideoObject) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VideoObject_name"],
                                             out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                             out videoFrameSize: String #_[canonical={base=["video frame size"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:VideoObject_videoFrameSize"],
                                             out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                             out videoQuality: String #_[canonical={base=["video quality"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:VideoObject_videoQuality"],
                                             out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                             out transcript: String #_[canonical={base=["transcript"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:VideoObject_transcript"],
                                             out thumbnail: Entity(tt:picture) #_[canonical={base=["thumbnail"]}] #[org_schema_type="ImageObject"],
                                             out caption: String #_[canonical={base=["caption"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:VideoObject_caption"])
  #_[canonical="video object"]
  #_[confirmation="video object"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CreativeWorkSeason extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CreativeWorkSeason_name"],
                                                     out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                     out numberOfEpisodes: Number #_[canonical={base=["number of episodes"]}] #[org_schema_type="Integer"],
                                                     out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                     out endDate: Date #_[canonical={base=["end date"]}] #[org_schema_type="DateTime"],
                                                     out partOfSeries: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeries) #_[canonical={base=["part of series"]}] #[org_schema_type="CreativeWorkSeries"],
                                                     out startDate: Date #_[canonical={base=["start date"]}] #[org_schema_type="DateTime"],
                                                     out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                                     out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                                     out episode: Array(Entity(edu.stanford.cs294s.sierra:Episode)) #_[canonical={base=["episodes"]}] #[org_schema_type="Episode"],
                                                     out seasonNumber: Number #_[canonical={base=["season number"]}] #[org_schema_type="Integer"])
  #_[canonical="creative work season"]
  #_[confirmation="creative work season"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioSeries extends CreativeWorkSeries(out id: Entity(edu.stanford.cs294s.sierra:RadioSeries) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioSeries_name"],
                                                    out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                    out numberOfEpisodes: Number #_[canonical={base=["number of episodes"]}] #[org_schema_type="Integer"],
                                                    out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                    out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                                    out containsSeason: Array(Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason)) #_[canonical={verb=["contains # season"],base=["season"]}] #[org_schema_type="CreativeWorkSeason"],
                                                    out numberOfSeasons: Number #_[canonical={base=["number of seasons"]}] #[org_schema_type="Integer"],
                                                    out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                                    out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                                    out episode: Array(Entity(edu.stanford.cs294s.sierra:Episode)) #_[canonical={base=["episodes"]}] #[org_schema_type="Episode"])
  #_[canonical="radio series"]
  #_[confirmation="radio series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Clip extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Clip) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Clip_name"],
                                       out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                       out partOfEpisode: Entity(edu.stanford.cs294s.sierra:Episode) #_[canonical={base=["part of episode"]}] #[org_schema_type="Episode"],
                                       out partOfSeries: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeries) #_[canonical={base=["part of series"]}] #[org_schema_type="CreativeWorkSeries"],
                                       out partOfSeason: Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason) #_[canonical={base=["part of season"]}] #[org_schema_type="CreativeWorkSeason"],
                                       out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                       out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                       out clipNumber: Number #_[canonical={base=["clip number"]}] #[org_schema_type="Integer"])
  #_[canonical="clip"]
  #_[confirmation="clip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TVSeries extends CreativeWorkSeries, CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:TVSeries) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TVSeries_name"],
                                                               out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                                               out numberOfEpisodes: Number #_[canonical={base=["number of episodes"]}] #[org_schema_type="Integer"],
                                                               out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                                               out countryOfOrigin: Entity(edu.stanford.cs294s.sierra:Country) #_[canonical={base=["country of origin"]}] #[org_schema_type="Country"],
                                                               out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                                               out containsSeason: Array(Entity(edu.stanford.cs294s.sierra:CreativeWorkSeason)) #_[canonical={verb=["contains # season"],base=["season"]}] #[org_schema_type="CreativeWorkSeason"],
                                                               out numberOfSeasons: Number #_[canonical={base=["number of seasons"]}] #[org_schema_type="Integer"],
                                                               out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                                               out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                                               out episode: Array(Entity(edu.stanford.cs294s.sierra:Episode)) #_[canonical={base=["episodes"]}] #[org_schema_type="Episode"])
  #_[canonical="tvseries"]
  #_[confirmation="tvseries"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Movie extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Movie) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Movie_name"],
                                        out actor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["actors"]}] #[org_schema_type="Person"],
                                        out trailer: Entity(edu.stanford.cs294s.sierra:VideoObject) #_[canonical={base=["trailer"]}] #[org_schema_type="VideoObject"],
                                        out subtitleLanguage: String #_[canonical={base=["subtitle language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Movie_subtitleLanguage"],
                                        out countryOfOrigin: Entity(edu.stanford.cs294s.sierra:Country) #_[canonical={base=["country of origin"]}] #[org_schema_type="Country"],
                                        out musicBy: Entity(edu.stanford.cs294s.sierra:MusicGroup) #_[canonical={base=["music by"]}] #[org_schema_type="MusicGroup"],
                                        out director: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["directors"]}] #[org_schema_type="Person"],
                                        out productionCompany: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["production company"]}] #[org_schema_type="Organization"],
                                        out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"])
  #_[canonical="movie"]
  #_[confirmation="movie"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PerformingArtsTheater extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:PerformingArtsTheater) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PerformingArtsTheater_name"])
  #_[canonical="performing arts theater"]
  #_[confirmation="performing arts theater"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Museum extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Museum) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Museum_name"])
  #_[canonical="museum"]
  #_[confirmation="museum"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowToItem extends ListItem(out id: Entity(edu.stanford.cs294s.sierra:HowToItem) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowToItem_name"],
                                        out requiredQuantity: Number #_[canonical={base=["required quantity"]}] #[org_schema_type="Number"])
  #_[canonical="how to item"]
  #_[confirmation="how to item"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowToSupply extends HowToItem(out id: Entity(edu.stanford.cs294s.sierra:HowToSupply) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowToSupply_name"],
                                           out estimatedCost: Currency #_[canonical={base=["estimated cost"]}] #[org_schema_type="MonetaryAmount"])
  #_[canonical="how to supply"]
  #_[confirmation="how to supply"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query IndividualProduct extends Product(out id: Entity(edu.stanford.cs294s.sierra:IndividualProduct) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:IndividualProduct_name"],
                                               out serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:IndividualProduct_serialNumber"])
  #_[canonical="individual product"]
  #_[confirmation="individual product"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoRepair extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutoRepair) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoRepair_name"])
  #_[canonical="auto repair"]
  #_[confirmation="auto repair"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ExerciseGym extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:ExerciseGym) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ExerciseGym_name"])
  #_[canonical="exercise gym"]
  #_[confirmation="exercise gym"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GovernmentBuilding extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:GovernmentBuilding) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GovernmentBuilding_name"])
  #_[canonical="government building"]
  #_[confirmation="government building"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Embassy extends GovernmentBuilding(out id: Entity(edu.stanford.cs294s.sierra:Embassy) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Embassy_name"])
  #_[canonical="embassy"]
  #_[confirmation="embassy"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ProfilePage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:ProfilePage) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ProfilePage_name"])
  #_[canonical="profile page"]
  #_[confirmation="profile page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PeopleAudience extends Audience(out id: Entity(edu.stanford.cs294s.sierra:PeopleAudience) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PeopleAudience_name"],
                                             out suggestedMaxAge: Number #_[canonical={base=["suggested max age"]}] #[org_schema_type="Number"],
                                             out requiredMinAge: Number #_[canonical={base=["required min age"]}] #[org_schema_type="Integer"],
                                             out requiredGender: String #_[canonical={base=["required gender"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PeopleAudience_requiredGender"],
                                             out suggestedGender: String #_[canonical={base=["suggested gender"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PeopleAudience_suggestedGender"],
                                             out requiredMaxAge: Number #_[canonical={base=["required max age"]}] #[org_schema_type="Integer"],
                                             out suggestedMinAge: Number #_[canonical={base=["suggested min age"]}] #[org_schema_type="Number"])
  #_[canonical="people audience"]
  #_[confirmation="people audience"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ParentAudience extends PeopleAudience(out id: Entity(edu.stanford.cs294s.sierra:ParentAudience) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ParentAudience_name"],
                                                   out childMaxAge: Number #_[canonical={base=["child max age"]}] #[org_schema_type="Number"],
                                                   out childMinAge: Number #_[canonical={base=["child min age"]}] #[org_schema_type="Number"])
  #_[canonical="parent audience"]
  #_[confirmation="parent audience"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ReservationPackage extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:ReservationPackage) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ReservationPackage_name"],
                                                    out subReservation: Entity(edu.stanford.cs294s.sierra:Reservation) #_[canonical={base=["sub reservation"]}] #[org_schema_type="Reservation"])
  #_[canonical="reservation package"]
  #_[confirmation="reservation package"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FinancialProduct extends Service(out id: Entity(edu.stanford.cs294s.sierra:FinancialProduct) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FinancialProduct_name"],
                                              out interestRate: Number #_[canonical={base=["interest rate"]}] #[org_schema_type="QuantitativeValue"],
                                              out feesAndCommissionsSpecification: Entity(tt:url) #_[canonical={base=["fees and commissions specification"]}] #[org_schema_type="URL"],
                                              out annualPercentageRate: Number #_[canonical={base=["annual percentage rate"]}] #[org_schema_type="Number"])
  #_[canonical="financial product"]
  #_[confirmation="financial product"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SocialMediaPosting extends Article(out id: Entity(edu.stanford.cs294s.sierra:SocialMediaPosting) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SocialMediaPosting_name"],
                                                out sharedContent: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={base=["shared content"]}] #[org_schema_type="CreativeWork"])
  #_[canonical="social media posting"]
  #_[confirmation="social media posting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BlogPosting extends SocialMediaPosting(out id: Entity(edu.stanford.cs294s.sierra:BlogPosting) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BlogPosting_name"])
  #_[canonical="blog posting"]
  #_[confirmation="blog posting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LiveBlogPosting extends BlogPosting(out id: Entity(edu.stanford.cs294s.sierra:LiveBlogPosting) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LiveBlogPosting_name"],
                                                 out coverageStartTime: Date #_[canonical={base=["coverage start time"]}] #[org_schema_type="DateTime"],
                                                 out coverageEndTime: Date #_[canonical={base=["coverage end time"]}] #[org_schema_type="DateTime"],
                                                 out liveBlogUpdate: Array(Entity(edu.stanford.cs294s.sierra:BlogPosting)) #_[canonical={base=["live blog update"]}] #[org_schema_type="BlogPosting"])
  #_[canonical="live blog posting"]
  #_[confirmation="live blog posting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusTrip extends Trip(out id: Entity(edu.stanford.cs294s.sierra:BusTrip) #[unique=true] #[filterable=false],
                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusTrip_name"],
                                  out busName: String #_[canonical={base=["bus name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BusTrip_busName"],
                                  out departureBusStop: Entity(edu.stanford.cs294s.sierra:BusStation) #_[canonical={base=["departure bus stop"]}] #[org_schema_type="BusStation"],
                                  out arrivalBusStop: Entity(edu.stanford.cs294s.sierra:BusStop) #_[canonical={base=["arrival bus stop"]}] #[org_schema_type="BusStop"],
                                  out busNumber: String #_[canonical={base=["bus number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BusTrip_busNumber"])
  #_[canonical="bus trip"]
  #_[confirmation="bus trip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WebApplication extends SoftwareApplication(out id: Entity(edu.stanford.cs294s.sierra:WebApplication) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WebApplication_name"],
                                                        out browserRequirements: String #_[canonical={base=["browser requirements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:WebApplication_browserRequirements"])
  #_[canonical="web application"]
  #_[confirmation="web application"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DiscussionForumPosting extends SocialMediaPosting(out id: Entity(edu.stanford.cs294s.sierra:DiscussionForumPosting) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DiscussionForumPosting_name"])
  #_[canonical="discussion forum posting"]
  #_[confirmation="discussion forum posting"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query IceCreamShop extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:IceCreamShop) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:IceCreamShop_name"])
  #_[canonical="ice cream shop"]
  #_[confirmation="ice cream shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TouristAttraction extends Place(out id: Entity(edu.stanford.cs294s.sierra:TouristAttraction) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TouristAttraction_name"],
                                             out touristType: String #_[canonical={base=["tourist type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TouristAttraction_touristType"],
                                             out availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TouristAttraction_availableLanguage"])
  #_[canonical="tourist attraction"]
  #_[confirmation="tourist attraction"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Car extends Vehicle(out id: Entity(edu.stanford.cs294s.sierra:Car) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Car_name"])
  #_[canonical="car"]
  #_[confirmation="car"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ScreeningEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:ScreeningEvent) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ScreeningEvent_name"],
                                          out videoFormat: String #_[canonical={base=["video format"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ScreeningEvent_videoFormat"],
                                          out subtitleLanguage: String #_[canonical={base=["subtitle language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ScreeningEvent_subtitleLanguage"],
                                          out workPresented: Entity(edu.stanford.cs294s.sierra:Movie) #_[canonical={base=["work presented"]}] #[org_schema_type="Movie"])
  #_[canonical="screening event"]
  #_[confirmation="screening event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BroadcastEvent extends PublicationEvent(out id: Entity(edu.stanford.cs294s.sierra:BroadcastEvent) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BroadcastEvent_name"],
                                                     out videoFormat: String #_[canonical={base=["video format"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BroadcastEvent_videoFormat"],
                                                     out isLiveBroadcast: Boolean #_[canonical={reverse_property=["live broadcast"],base=["live broadcast"]}] #[org_schema_type="Boolean"],
                                                     out broadcastOfEvent: Entity(edu.stanford.cs294s.sierra:Event) #_[canonical={base=["broadcast of event"]}] #[org_schema_type="Event"])
  #_[canonical="broadcast event"]
  #_[confirmation="broadcast event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Season extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Season) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Season_name"])
  #_[canonical="season"]
  #_[confirmation="season"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LoanOrCredit extends FinancialProduct(out id: Entity(edu.stanford.cs294s.sierra:LoanOrCredit) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LoanOrCredit_name"],
                                                   out loanTerm: Number #_[canonical={base=["loan term"]}] #[org_schema_type="QuantitativeValue"],
                                                   out amount: Currency #_[canonical={base=["amount"]}] #[org_schema_type="MonetaryAmount"],
                                                   out requiredCollateral: String #_[canonical={base=["required collateral"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LoanOrCredit_requiredCollateral"],
                                                   out currency: String #_[canonical={base=["currency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LoanOrCredit_currency"])
  #_[canonical="loan or credit"]
  #_[confirmation="loan or credit"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MotorcycleDealer extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:MotorcycleDealer) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MotorcycleDealer_name"])
  #_[canonical="motorcycle dealer"]
  #_[confirmation="motorcycle dealer"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BankAccount extends FinancialProduct(out id: Entity(edu.stanford.cs294s.sierra:BankAccount) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BankAccount_name"])
  #_[canonical="bank account"]
  #_[confirmation="bank account"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RealEstateAgent extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:RealEstateAgent) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RealEstateAgent_name"])
  #_[canonical="real estate agent"]
  #_[confirmation="real estate agent"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TechArticle extends Article(out id: Entity(edu.stanford.cs294s.sierra:TechArticle) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TechArticle_name"],
                                         out proficiencyLevel: String #_[canonical={base=["proficiency level"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TechArticle_proficiencyLevel"],
                                         out dependencies: String #_[canonical={passive_verb=["dependencies"],base=["dependencies"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TechArticle_dependencies"])
  #_[canonical="tech article"]
  #_[confirmation="tech article"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query APIReference extends TechArticle(out id: Entity(edu.stanford.cs294s.sierra:APIReference) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:APIReference_name"],
                                              out programmingModel: String #_[canonical={base=["programming model"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:APIReference_programmingModel"],
                                              out executableLibraryName: String #_[canonical={base=["executable library name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:APIReference_executableLibraryName"],
                                              out assemblyVersion: String #_[canonical={base=["assembly version"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:APIReference_assemblyVersion"],
                                              out targetPlatform: String #_[canonical={base=["target platform"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:APIReference_targetPlatform"])
  #_[canonical="apireference"]
  #_[confirmation="apireference"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EducationalOrganization extends Organization(out id: Entity(edu.stanford.cs294s.sierra:EducationalOrganization) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalOrganization_name"],
                                                          out alumni: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["alumni"]}] #[org_schema_type="Person"])
  #_[canonical="educational organization"]
  #_[confirmation="educational organization"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CableOrSatelliteService extends Service(out id: Entity(edu.stanford.cs294s.sierra:CableOrSatelliteService) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CableOrSatelliteService_name"])
  #_[canonical="cable or satellite service"]
  #_[confirmation="cable or satellite service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Role extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Role) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Role_name"],
                                     out endDate: Date #_[canonical={base=["end date"]}] #[org_schema_type="DateTime"],
                                     out startDate: Date #_[canonical={base=["start date"]}] #[org_schema_type="DateTime"],
                                     out roleName: Array(Entity(tt:url)) #_[canonical={base=["role names"]}] #[org_schema_type="URL"])
  #_[canonical="role"]
  #_[confirmation="role"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CurrencyConversionService extends FinancialProduct(out id: Entity(edu.stanford.cs294s.sierra:CurrencyConversionService) #[unique=true] #[filterable=false],
                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CurrencyConversionService_name"])
  #_[canonical="currency conversion service"]
  #_[confirmation="currency conversion service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HinduTemple extends PlaceOfWorship(out id: Entity(edu.stanford.cs294s.sierra:HinduTemple) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HinduTemple_name"])
  #_[canonical="hindu temple"]
  #_[confirmation="hindu temple"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TVSeason extends CreativeWork, CreativeWorkSeason(out id: Entity(edu.stanford.cs294s.sierra:TVSeason) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TVSeason_name"],
                                                               out countryOfOrigin: Entity(edu.stanford.cs294s.sierra:Country) #_[canonical={base=["country of origin"]}] #[org_schema_type="Country"])
  #_[canonical="tvseason"]
  #_[confirmation="tvseason"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SearchResultsPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:SearchResultsPage) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SearchResultsPage_name"])
  #_[canonical="search results page"]
  #_[confirmation="search results page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserBlocks extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserBlocks) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserBlocks_name"])
  #_[canonical="user blocks"]
  #_[confirmation="user blocks"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DeliveryEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:DeliveryEvent) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DeliveryEvent_name"],
                                         out hasDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                         out availableThrough: Date #_[canonical={passive_verb=["available through"],base=["available through"]}] #[org_schema_type="DateTime"],
                                         out availableFrom: Date #_[canonical={passive_verb=["available from"],base=["available from"]}] #[org_schema_type="DateTime"],
                                         out accessCode: String #_[canonical={base=["access code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DeliveryEvent_accessCode"])
  #_[canonical="delivery event"]
  #_[confirmation="delivery event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DanceEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:DanceEvent) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DanceEvent_name"])
  #_[canonical="dance event"]
  #_[confirmation="dance event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BookStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:BookStore) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BookStore_name"])
  #_[canonical="book store"]
  #_[confirmation="book store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicRelease extends MusicPlaylist(out id: Entity(edu.stanford.cs294s.sierra:MusicRelease) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicRelease_name"],
                                                out recordLabel: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["record label"]}] #[org_schema_type="Organization"],
                                                out catalogNumber: String #_[canonical={base=["catalog number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MusicRelease_catalogNumber"],
                                                out creditedTo: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={passive_verb=["credited to"],base=["credited to"]}] #[org_schema_type="Person"],
                                                out releaseOf: Entity(edu.stanford.cs294s.sierra:MusicAlbum) #_[canonical={reverse_property=["release of"],base=["release of"]}] #[org_schema_type="MusicAlbum"],
                                                out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"],
                                                out musicReleaseFormat: Enum(DigitalAudioTapeFormat,VinylFormat,CassetteFormat,LaserDiscFormat,DigitalFormat,CDFormat,DVDFormat) #_[canonical={base=["music release format"]}] #[org_schema_type="MusicReleaseFormatType"])
  #_[canonical="music release"]
  #_[confirmation="music release"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Permit extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Permit) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Permit_name"],
                                       out validFor: Measure(ms) #_[canonical={passive_verb=["valid for"],base=["valid for"]}] #[org_schema_type="Duration"],
                                       out validUntil: Date #_[canonical={passive_verb=["valid until"],base=["valid until"]}] #[org_schema_type="Date"],
                                       out validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                       out issuedBy: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={passive_verb=["issued by"],base=["issued by"]}] #[org_schema_type="Organization"],
                                       out issuedThrough: Entity(edu.stanford.cs294s.sierra:Service) #_[canonical={passive_verb=["issued through"],base=["issued through"]}] #[org_schema_type="Service"],
                                       out permitAudience: Entity(edu.stanford.cs294s.sierra:Audience) #_[canonical={base=["permit audience"]}] #[org_schema_type="Audience"],
                                       out validIn: Entity(edu.stanford.cs294s.sierra:AdministrativeArea) #_[canonical={passive_verb=["valid in"],base=["valid in"]}] #[org_schema_type="AdministrativeArea"])
  #_[canonical="permit"]
  #_[confirmation="permit"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EducationalOccupationalCredential(out id: Entity(edu.stanford.cs294s.sierra:EducationalOccupationalCredential) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalOccupationalCredential_name"],
                                               out validFor: Measure(ms) #_[canonical={passive_verb=["valid for"],base=["valid for"]}] #[org_schema_type="Duration"],
                                               out validIn: Entity(edu.stanford.cs294s.sierra:AdministrativeArea) #_[canonical={passive_verb=["valid in"],base=["valid in"]}] #[org_schema_type="AdministrativeArea"])
  #_[canonical="educational occupational credential"]
  #_[confirmation="educational occupational credential"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SaleEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:SaleEvent) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SaleEvent_name"])
  #_[canonical="sale event"]
  #_[confirmation="sale event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FoodEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:FoodEvent) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FoodEvent_name"])
  #_[canonical="food event"]
  #_[confirmation="food event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Corporation extends Organization(out id: Entity(edu.stanford.cs294s.sierra:Corporation) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Corporation_name"],
                                              out tickerSymbol: String #_[canonical={base=["ticker symbol"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Corporation_tickerSymbol"])
  #_[canonical="corporation"]
  #_[confirmation="corporation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OutletStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:OutletStore) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OutletStore_name"])
  #_[canonical="outlet store"]
  #_[confirmation="outlet store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Review extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Review) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Review_name"],
                                         out reviewRating: {
                                           ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                           author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                           reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Review_reviewRating_reviewAspect"]
                                         } #_[canonical={base=["review rating"]}] #[org_schema_type="Rating"],
                                         out reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Review_reviewAspect"])
  #_[canonical="review"]
  #_[confirmation="review"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SoftwareSourceCode extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:SoftwareSourceCode) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SoftwareSourceCode_name"],
                                                     out targetProduct: Entity(edu.stanford.cs294s.sierra:SoftwareApplication) #_[canonical={base=["target product"]}] #[org_schema_type="SoftwareApplication"],
                                                     out codeRepository: Entity(tt:url) #_[canonical={base=["code repository"]}] #[org_schema_type="URL"],
                                                     out programmingLanguage: String #_[canonical={base=["programming language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareSourceCode_programmingLanguage"],
                                                     out codeSampleType: String #_[canonical={base=["code sample type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareSourceCode_codeSampleType"],
                                                     out runtimePlatform: String #_[canonical={base=["runtime platform"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:SoftwareSourceCode_runtimePlatform"])
  #_[canonical="software source code"]
  #_[confirmation="software source code"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TVEpisode extends Episode(out id: Entity(edu.stanford.cs294s.sierra:TVEpisode) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TVEpisode_name"],
                                       out subtitleLanguage: String #_[canonical={base=["subtitle language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TVEpisode_subtitleLanguage"],
                                       out countryOfOrigin: Entity(edu.stanford.cs294s.sierra:Country) #_[canonical={base=["country of origin"]}] #[org_schema_type="Country"])
  #_[canonical="tvepisode"]
  #_[confirmation="tvepisode"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PerformingGroup extends Organization(out id: Entity(edu.stanford.cs294s.sierra:PerformingGroup) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PerformingGroup_name"])
  #_[canonical="performing group"]
  #_[confirmation="performing group"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicGroup extends PerformingGroup(out id: Entity(edu.stanford.cs294s.sierra:MusicGroup) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicGroup_name"],
                                                out track: Array(Entity(edu.stanford.cs294s.sierra:ItemList)) #_[canonical={verb=["tracks"],base=["tracks"]}] #[org_schema_type="ItemList"],
                                                out genre: Entity(tt:url) #_[canonical={base=["genre"]}] #[org_schema_type="URL"],
                                                out album: Array(Entity(edu.stanford.cs294s.sierra:MusicAlbum)) #_[canonical={base=["albums"]}] #[org_schema_type="MusicAlbum"])
  #_[canonical="music group"]
  #_[confirmation="music group"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AmusementPark extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:AmusementPark) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AmusementPark_name"])
  #_[canonical="amusement park"]
  #_[confirmation="amusement park"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Message extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Message) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Message_name"],
                                          out dateRead: Date #_[canonical={base=["date read"]}] #[org_schema_type="DateTime"],
                                          out bccRecipient: Array({
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_bccRecipient_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_bccRecipient_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_bccRecipient_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_bccRecipient_productSupported"]
                                          }) #_[canonical={passive_verb=["bcc recipient"],base=["bcc recipient"]}] #[org_schema_type="ContactPoint"],
                                          out dateSent: Date #_[canonical={base=["date sent"]}] #[org_schema_type="DateTime"],
                                          out ccRecipient: Array({
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_ccRecipient_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_ccRecipient_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_ccRecipient_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_ccRecipient_productSupported"]
                                          }) #_[canonical={base=["cc recipient"]}] #[org_schema_type="ContactPoint"],
                                          out recipient: Array({
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_recipient_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_recipient_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_recipient_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_recipient_productSupported"]
                                          }) #_[canonical={passive_verb=["recipient"],base=["recipient"]}] #[org_schema_type="ContactPoint"],
                                          out sender: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sender"]}] #[org_schema_type="Organization"],
                                          out messageAttachment: Array(Entity(edu.stanford.cs294s.sierra:CreativeWork)) #_[canonical={base=["message attachments"]}] #[org_schema_type="CreativeWork"],
                                          out dateReceived: Date #_[canonical={base=["date received"]}] #[org_schema_type="DateTime"],
                                          out toRecipient: Array({
                                            faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_toRecipient_faxNumber"],
                                            hoursAvailable: {
                                              validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                              validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                              opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                              closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                              dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                            } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                            contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                            availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_toRecipient_availableLanguage"],
                                            telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                            email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                            contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_toRecipient_contactType"],
                                            productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Message_toRecipient_productSupported"]
                                          }) #_[canonical={base=["to recipient"]}] #[org_schema_type="ContactPoint"])
  #_[canonical="message"]
  #_[confirmation="message"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MobilePhoneStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:MobilePhoneStore) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MobilePhoneStore_name"])
  #_[canonical="mobile phone store"]
  #_[confirmation="mobile phone store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Casino extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:Casino) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Casino_name"])
  #_[canonical="casino"]
  #_[confirmation="casino"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Ticket extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Ticket) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Ticket_name"],
                                       out underName: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["under name"]}] #[org_schema_type="Organization"],
                                       out totalPrice: Number #_[canonical={base=["total price"]}] #[org_schema_type="Number"],
                                       out ticketNumber: String #_[canonical={base=["ticket number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Ticket_ticketNumber"],
                                       out issuedBy: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={passive_verb=["issued by"],base=["issued by"]}] #[org_schema_type="Organization"],
                                       out ticketToken: Entity(tt:url) #_[canonical={base=["ticket token"]}] #[org_schema_type="URL"],
                                       out ticketedSeat: Entity(edu.stanford.cs294s.sierra:Seat) #_[canonical={base=["ticketed seat"]}] #[org_schema_type="Seat"],
                                       out dateIssued: Date #_[canonical={base=["date issued"]}] #[org_schema_type="Date"])
  #_[canonical="ticket"]
  #_[confirmation="ticket"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusinessEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:BusinessEvent) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusinessEvent_name"])
  #_[canonical="business event"]
  #_[confirmation="business event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CampingPitch extends Accommodation(out id: Entity(edu.stanford.cs294s.sierra:CampingPitch) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CampingPitch_name"])
  #_[canonical="camping pitch"]
  #_[confirmation="camping pitch"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GameServer extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:GameServer) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GameServer_name"],
                                           out game: Entity(edu.stanford.cs294s.sierra:VideoGame) #_[canonical={base=["game"]}] #[org_schema_type="VideoGame"],
                                           out playersOnline: Number #_[canonical={base=["players online"]}] #[org_schema_type="Integer"],
                                           out serverStatus: Enum(OfflinePermanently,OfflineTemporarily,Online,OnlineFull) #_[canonical={base=["server status"]}] #[org_schema_type="GameServerStatus"])
  #_[canonical="game server"]
  #_[confirmation="game server"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query InvestmentOrDeposit extends FinancialProduct(out id: Entity(edu.stanford.cs294s.sierra:InvestmentOrDeposit) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:InvestmentOrDeposit_name"],
                                                          out amount: Currency #_[canonical={base=["amount"]}] #[org_schema_type="MonetaryAmount"])
  #_[canonical="investment or deposit"]
  #_[confirmation="investment or deposit"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DepositAccount extends BankAccount, InvestmentOrDeposit(out id: Entity(edu.stanford.cs294s.sierra:DepositAccount) #[unique=true] #[filterable=false],
                                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DepositAccount_name"])
  #_[canonical="deposit account"]
  #_[confirmation="deposit account"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Motel extends LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:Motel) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Motel_name"])
  #_[canonical="motel"]
  #_[confirmation="motel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WPAdBlock extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:WPAdBlock) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WPAdBlock_name"])
  #_[canonical="wpad block"]
  #_[confirmation="wpad block"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ChildCare extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:ChildCare) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ChildCare_name"])
  #_[canonical="child care"]
  #_[confirmation="child care"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query InternetCafe extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:InternetCafe) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:InternetCafe_name"])
  #_[canonical="internet cafe"]
  #_[confirmation="internet cafe"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MedicalOrganization extends Organization(out id: Entity(edu.stanford.cs294s.sierra:MedicalOrganization) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MedicalOrganization_name"])
  #_[canonical="medical organization"]
  #_[confirmation="medical organization"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Pharmacy extends MedicalOrganization(out id: Entity(edu.stanford.cs294s.sierra:Pharmacy) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Pharmacy_name"])
  #_[canonical="pharmacy"]
  #_[confirmation="pharmacy"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DefenceEstablishment extends GovernmentBuilding(out id: Entity(edu.stanford.cs294s.sierra:DefenceEstablishment) #[unique=true] #[filterable=false],
                                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DefenceEstablishment_name"])
  #_[canonical="defence establishment"]
  #_[confirmation="defence establishment"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Church extends PlaceOfWorship(out id: Entity(edu.stanford.cs294s.sierra:Church) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Church_name"])
  #_[canonical="church"]
  #_[confirmation="church"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LiquorStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:LiquorStore) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LiquorStore_name"])
  #_[canonical="liquor store"]
  #_[confirmation="liquor store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserTweets extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserTweets) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserTweets_name"])
  #_[canonical="user tweets"]
  #_[confirmation="user tweets"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusinessAudience extends Audience(out id: Entity(edu.stanford.cs294s.sierra:BusinessAudience) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusinessAudience_name"],
                                               out yearsInOperation: Number #_[canonical={base=["years in operation"]}] #[org_schema_type="QuantitativeValue"],
                                               out yearlyRevenue: Number #_[canonical={base=["yearly revenue"]}] #[org_schema_type="QuantitativeValue"],
                                               out numberOfEmployees: Number #_[canonical={base=["number of employees"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="business audience"]
  #_[confirmation="business audience"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LodgingReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:LodgingReservation) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LodgingReservation_name"],
                                                    out checkinTime: Time #_[canonical={base=["checkin time"]}] #[org_schema_type="DateTime"],
                                                    out numChildren: Number #_[canonical={base=["num children"]}] #[org_schema_type="Integer"],
                                                    out lodgingUnitDescription: Array(String) #_[canonical={base=["lodging unit descriptions"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LodgingReservation_lodgingUnitDescription"],
                                                    out checkoutTime: Time #_[canonical={base=["checkout time"]}] #[org_schema_type="Time"],
                                                    out lodgingUnitType: String #_[canonical={base=["lodging unit type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LodgingReservation_lodgingUnitType"],
                                                    out numAdults: Number #_[canonical={base=["num adults"]}] #[org_schema_type="Integer"])
  #_[canonical="lodging reservation"]
  #_[confirmation="lodging reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OrganizationRole extends Role(out id: Entity(edu.stanford.cs294s.sierra:OrganizationRole) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OrganizationRole_name"],
                                           out numberedPosition: Array(Number) #_[canonical={base=["numbered position"]}] #[org_schema_type="Number"])
  #_[canonical="organization role"]
  #_[confirmation="organization role"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Airline extends Organization(out id: Entity(edu.stanford.cs294s.sierra:Airline) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Airline_name"],
                                          out iataCode: String #_[canonical={base=["iata code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Airline_iataCode"],
                                          out boardingPolicy: Enum(ZoneBoardingPolicy,GroupBoardingPolicy) #_[canonical={base=["boarding policy"]}] #[org_schema_type="BoardingPolicyType"])
  #_[canonical="airline"]
  #_[confirmation="airline"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MenuItem extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:MenuItem) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MenuItem_name"],
                                         out menuAddOn: Entity(edu.stanford.cs294s.sierra:MenuSection) #_[canonical={base=["menu add on"]}] #[org_schema_type="MenuSection"],
                                         out nutrition: {
                                           saturatedFatContent: Measure(kg) #_[canonical={verb=["contains #saturated_fat"],base=["saturated fat content", "saturated fat", "saturated fat amount"]}] #[org_schema_type="Mass"],
                                           fatContent: Measure(kg) #_[canonical={verb=["contains #fat"],base=["fat content", "fat", "fat amount"]}] #[org_schema_type="Mass"],
                                           unsaturatedFatContent: Measure(kg) #_[canonical={verb=["contains #unsaturated_fat"],base=["unsaturated fat content", "unsaturated fat", "unsaturated fat amount"]}] #[org_schema_type="Mass"],
                                           sugarContent: Measure(kg) #_[canonical={verb=["contains #sugar"],base=["sugar content", "sugar", "sugar amount"]}] #[org_schema_type="Mass"],
                                           cholesterolContent: Measure(kg) #_[canonical={verb=["contains #cholesterol"],base=["cholesterol content", "cholesterol", "cholesterol amount"]}] #[org_schema_type="Mass"],
                                           carbohydrateContent: Measure(kg) #_[canonical={verb=["contains #carbohydrate"],base=["carbohydrate content", "carbohydrate", "carbohydrate amount"]}] #[org_schema_type="Mass"],
                                           proteinContent: Measure(kg) #_[canonical={verb=["contains #protein"],base=["protein content", "protein", "protein amount"]}] #[org_schema_type="Mass"],
                                           sodiumContent: Measure(kg) #_[canonical={verb=["contains #sodium"],base=["sodium content", "sodium", "sodium amount"]}] #[org_schema_type="Mass"],
                                           transFatContent: Measure(kg) #_[canonical={verb=["contains #trans_fat"],base=["trans fat content", "trans fat", "trans fat amount"]}] #[org_schema_type="Mass"],
                                           fiberContent: Measure(kg) #_[canonical={verb=["contains #fiber"],base=["fiber content", "fiber", "fiber amount"]}] #[org_schema_type="Mass"],
                                           calories: Measure(kcal) #_[canonical={base=["calories"]}] #[org_schema_type="Energy"],
                                           servingSize: String #_[canonical={base=["serving size"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_nutrition_servingSize"]
                                         } #_[canonical={base=["nutrition"]}] #[org_schema_type="NutritionInformation"],
                                         out offers: {
                                           sku: String #_[canonical={passive_verb=["sku"],base=["sku"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_sku"],
                                           availabilityStarts: Time #_[canonical={base=["availability starts"]}] #[org_schema_type="Time"],
                                           availableDeliveryMethod: Enum(OnSitePickup) #_[canonical={base=["available delivery method"]}] #[org_schema_type="DeliveryMethod"],
                                           mpn: String #_[canonical={passive_verb=["mpn"],base=["mpn"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_mpn"],
                                           advanceBookingRequirement: Number #_[canonical={base=["advance booking requirement"]}] #[org_schema_type="QuantitativeValue"],
                                           serialNumber: String #_[canonical={base=["serial number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_serialNumber"],
                                           ineligibleRegion: {
                                             address: {
                                               postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_postOfficeBoxNumber"],
                                               streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_streetAddress"],
                                               addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                               addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                               postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_postalCode"],
                                               addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_addressLocality"],
                                               faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_faxNumber"],
                                               hoursAvailable: {
                                                 validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                 validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                 opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                 closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                 dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                               } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                               contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                               availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_availableLanguage"],
                                               telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                               email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                               contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_contactType"],
                                               productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_address_productSupported"]
                                             } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                             circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_circle"],
                                             box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_box"],
                                             addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                             postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_postalCode"],
                                             elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                             polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_polygon"],
                                             line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_ineligibleRegion_line"]
                                           } #_[canonical={base=["ineligible region"]}] #[org_schema_type="GeoShape"],
                                           gtin8: String #_[canonical={passive_verb=["gtin8"],base=["gtin8"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_gtin8"],
                                           availability: Enum(SoldOut,PreOrder,OutOfStock,PreSale,InStock,LimitedAvailability,Discontinued,OnlineOnly,InStoreOnly) #_[canonical={base=["availability"]}] #[org_schema_type="ItemAvailability"],
                                           priceSpecification: {
                                             minPrice: Number #_[canonical={base=["min price"]}] #[org_schema_type="Number"],
                                             maxPrice: Number #_[canonical={base=["max price"]}] #[org_schema_type="Number"],
                                             eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                             validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                             validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                             price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                             valueAddedTaxIncluded: Boolean #_[canonical={base=["value added tax included"]}] #[org_schema_type="Boolean"]
                                           } #_[canonical={base=["price specification"]}] #[org_schema_type="PriceSpecification"],
                                           inventoryLevel: Number #_[canonical={base=["inventory level"]}] #[org_schema_type="QuantitativeValue"],
                                           aggregateRating: {
                                             reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                             ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                             ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                             author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                             reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_aggregateRating_reviewAspect"]
                                           } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                           availableAtOrFrom: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={passive_verb=["available at or from"],base=["available at or from"]}] #[org_schema_type="Place"],
                                           category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_category"],
                                           priceValidUntil: Date #_[canonical={base=["price valid until"]}] #[org_schema_type="Date"],
                                           warranty: {
                                             durationOfWarranty: Measure(ms) #_[canonical={base=["duration of warranty"]}] #[org_schema_type="QuantitativeValue"],
                                             warrantyScope: Entity(edu.stanford.cs294s.sierra:WarrantyScope) #_[canonical={base=["warranty scope"]}] #[org_schema_type="WarrantyScope"]
                                           } #_[canonical={base=["warranty"]}] #[org_schema_type="WarrantyPromise"],
                                           eligibleQuantity: Number #_[canonical={base=["eligible quantity"]}] #[org_schema_type="QuantitativeValue"],
                                           validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                           validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                           price: Currency #_[canonical={base=["price"]}] #[org_schema_type="Number"],
                                           gtin14: String #_[canonical={passive_verb=["gtin14"],base=["gtin14"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_gtin14"],
                                           gtin13: String #_[canonical={passive_verb=["gtin13"],base=["gtin13"]}] #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_gtin13"],
                                           gtin12: String #_[canonical={passive_verb=["gtin12"],base=["gtin12"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_gtin12"],
                                           seller: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={base=["sellers"]}] #[org_schema_type="Organization"],
                                           deliveryLeadTime: Number #_[canonical={base=["delivery lead time"]}] #[org_schema_type="QuantitativeValue"],
                                           availabilityEnds: Time #_[canonical={base=["availability ends"]}] #[org_schema_type="Time"],
                                           includesObject: {
                                             unitCode: Entity(tt:url) #_[canonical={base=["unit code"]}] #[org_schema_type="URL"],
                                             typeOfGood: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["type of good"]}] #[org_schema_type="Product"],
                                             amountOfThisGood: Number #_[canonical={base=["amount of this good"]}] #[org_schema_type="Number"],
                                             unitText: Array(String) #_[canonical={base=["unit texts"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_includesObject_unitText"],
                                             businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"]
                                           } #_[canonical={verb=["includes object"],base=["includes object"]}] #[org_schema_type="TypeAndQuantityNode"],
                                           review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                           eligibleCustomerType: Entity(edu.stanford.cs294s.sierra:BusinessEntityType) #_[canonical={base=["eligible customer type"]}] #[org_schema_type="BusinessEntityType"],
                                           itemCondition: Enum(DamagedCondition,RefurbishedCondition,UsedCondition,NewCondition) #_[canonical={base=["item condition"]}] #[org_schema_type="OfferItemCondition"],
                                           itemOffered: Entity(edu.stanford.cs294s.sierra:Product) #_[canonical={base=["item offered"]}] #[org_schema_type="Product"],
                                           offeredBy: Array(Entity(edu.stanford.cs294s.sierra:Organization)) #_[canonical={passive_verb=["offered by"],base=["offered by"]}] #[org_schema_type="Organization"],
                                           eligibleDuration: Measure(ms) #_[canonical={base=["eligible duration"]}] #[org_schema_type="QuantitativeValue"],
                                           acceptedPaymentMethod: Entity(edu.stanford.cs294s.sierra:PaymentMethod) #_[canonical={base=["accepted payment method"]}] #[org_schema_type="PaymentMethod"],
                                           businessFunction: Entity(edu.stanford.cs294s.sierra:BusinessFunction) #_[canonical={base=["business function"]}] #[org_schema_type="BusinessFunction"],
                                           eligibleRegion: {
                                             address: {
                                               postOfficeBoxNumber: String #_[canonical={base=["post office box number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_postOfficeBoxNumber"],
                                               streetAddress: String #_[canonical={base=["street"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_streetAddress"],
                                               addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                               addressRegion: Entity(tt:us_state) #_[canonical={passive_verb=["in #"],base=["state"]}] #[org_schema_type="Text"],
                                               postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_postalCode"],
                                               addressLocality: String #_[canonical={base=["city"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_addressLocality"],
                                               faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_faxNumber"],
                                               hoursAvailable: {
                                                 validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                 validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                 opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                 closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                 dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                               } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                               contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                               availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_availableLanguage"],
                                               telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                               email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                               contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_contactType"],
                                               productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_address_productSupported"]
                                             } #_[canonical={base=["address"]}] #[org_schema_type="PostalAddress"],
                                             circle: Array(String) #_[canonical={base=["circles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_circle"],
                                             box: Array(String) #_[canonical={base=["boxes"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_box"],
                                             addressCountry: Entity(tt:country) #_[canonical={passive_verb=["in #"],base=["country"]}] #[org_schema_type="Text"],
                                             postalCode: String #_[canonical={base=["postal code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_postalCode"],
                                             elevation: Number #_[canonical={base=["elevation"]}] #[org_schema_type="Number"],
                                             polygon: Array(String) #_[canonical={passive_verb=["polygon"],base=["polygon"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_polygon"],
                                             line: Array(String) #_[canonical={base=["lines"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MenuItem_offers_eligibleRegion_line"]
                                           } #_[canonical={base=["eligible region"]}] #[org_schema_type="GeoShape"]
                                         } #_[canonical={verb=["offers"],base=["offers"]}] #[org_schema_type="Offer"],
                                         out suitableForDiet: Enum(KosherDiet,VeganDiet,DiabeticDiet,LowFatDiet,HinduDiet,GlutenFreeDiet,HalalDiet,LowLactoseDiet,VegetarianDiet,LowCalorieDiet,LowSaltDiet) #_[canonical={base=["suitable for diet"]}] #[org_schema_type="RestrictedDiet"])
  #_[canonical="menu item"]
  #_[confirmation="menu item"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BikeStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:BikeStore) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BikeStore_name"])
  #_[canonical="bike store"]
  #_[confirmation="bike store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BuddhistTemple extends PlaceOfWorship(out id: Entity(edu.stanford.cs294s.sierra:BuddhistTemple) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BuddhistTemple_name"])
  #_[canonical="buddhist temple"]
  #_[confirmation="buddhist temple"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LocationFeatureSpecification extends Thing(out id: Entity(edu.stanford.cs294s.sierra:LocationFeatureSpecification) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LocationFeatureSpecification_name"],
                                                        out hoursAvailable: {
                                                          validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                          validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                                          opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                                          closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                                          dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                                        } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                                        out validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                                        out validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"])
  #_[canonical="location feature specification"]
  #_[confirmation="location feature specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MenuSection extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:MenuSection) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MenuSection_name"],
                                              out hasMenuItem: Array(Entity(edu.stanford.cs294s.sierra:MenuItem)) #_[canonical={base=["menu item"]}] #[org_schema_type="MenuItem"],
                                              out hasMenuSection: Array(Entity(edu.stanford.cs294s.sierra:MenuSection)) #_[canonical={base=["menu section"]}] #[org_schema_type="MenuSection"])
  #_[canonical="menu section"]
  #_[confirmation="menu section"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Airport extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Airport) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Airport_name"],
                                            out iataCode: String #_[canonical={base=["iata code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Airport_iataCode"],
                                            out icaoCode: String #_[canonical={base=["icao code"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Airport_icaoCode"])
  #_[canonical="airport"]
  #_[confirmation="airport"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoRental extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutoRental) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoRental_name"])
  #_[canonical="auto rental"]
  #_[confirmation="auto rental"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ProductModel extends Product(out id: Entity(edu.stanford.cs294s.sierra:ProductModel) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ProductModel_name"],
                                          out predecessorOf: Array(Entity(edu.stanford.cs294s.sierra:ProductModel)) #_[canonical={reverse_property=["predecessor of"],base=["predecessor of"]}] #[org_schema_type="ProductModel"],
                                          out successorOf: Array(Entity(edu.stanford.cs294s.sierra:ProductModel)) #_[canonical={reverse_property=["successor of"],base=["successor of"]}] #[org_schema_type="ProductModel"],
                                          out isVariantOf: Array(Entity(edu.stanford.cs294s.sierra:ProductModel)) #_[canonical={reverse_property=["variant of"],base=["variant of"]}] #[org_schema_type="ProductModel"])
  #_[canonical="product model"]
  #_[confirmation="product model"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RentalCarReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:RentalCarReservation) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RentalCarReservation_name"],
                                                      out pickupTime: Date #_[canonical={base=["pickup time"]}] #[org_schema_type="DateTime"],
                                                      out dropoffTime: Date #_[canonical={base=["dropoff time"]}] #[org_schema_type="DateTime"],
                                                      out dropoffLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["dropoff location"]}] #[org_schema_type="Place"],
                                                      out pickupLocation: Entity(edu.stanford.cs294s.sierra:Place) #_[canonical={base=["pickup location"]}] #[org_schema_type="Place"])
  #_[canonical="rental car reservation"]
  #_[confirmation="rental car reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BroadcastFrequencySpecification extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:BroadcastFrequencySpecification) #[unique=true] #[filterable=false],
                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BroadcastFrequencySpecification_name"],
                                                                out broadcastFrequencyValue: Number #_[canonical={base=["broadcast frequency"]}] #[org_schema_type="QuantitativeValue"])
  #_[canonical="broadcast frequency specification"]
  #_[confirmation="broadcast frequency specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WebSite extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:WebSite) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WebSite_name"],
                                          out issn: String #_[canonical={passive_verb=["issn"],base=["issn"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:WebSite_issn"])
  #_[canonical="web site"]
  #_[confirmation="web site"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EventReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:EventReservation) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EventReservation_name"])
  #_[canonical="event reservation"]
  #_[confirmation="event reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query NewsArticle extends Article(out id: Entity(edu.stanford.cs294s.sierra:NewsArticle) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_name"],
                                         out printColumn: String #_[canonical={base=["print column"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_printColumn"],
                                         out printEdition: String #_[canonical={base=["print edition"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_printEdition"],
                                         out printSection: String #_[canonical={base=["print section"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_printSection"],
                                         out printPage: String #_[canonical={base=["print page"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_printPage"],
                                         out dateline: Array(String) #_[canonical={passive_verb=["dateline"],base=["dateline"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:NewsArticle_dateline"])
  #_[canonical="news article"]
  #_[confirmation="news article"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Restaurant extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:Restaurant) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Restaurant_name"])
  #_[canonical="restaurant"]
  #_[confirmation="restaurant"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MobileApplication extends SoftwareApplication(out id: Entity(edu.stanford.cs294s.sierra:MobileApplication) #[unique=true] #[filterable=false],
                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MobileApplication_name"],
                                                           out carrierRequirements: String #_[canonical={base=["carrier requirements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:MobileApplication_carrierRequirements"])
  #_[canonical="mobile application"]
  #_[confirmation="mobile application"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Code extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Code) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Code_name"])
  #_[canonical="code"]
  #_[confirmation="code"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportingGoodsStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:SportingGoodsStore) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportingGoodsStore_name"])
  #_[canonical="sporting goods store"]
  #_[confirmation="sporting goods store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TextDigitalDocument extends DigitalDocument(out id: Entity(edu.stanford.cs294s.sierra:TextDigitalDocument) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TextDigitalDocument_name"])
  #_[canonical="text digital document"]
  #_[confirmation="text digital document"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Waterfall extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:Waterfall) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Waterfall_name"])
  #_[canonical="waterfall"]
  #_[confirmation="waterfall"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OfficeEquipmentStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:OfficeEquipmentStore) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OfficeEquipmentStore_name"])
  #_[canonical="office equipment store"]
  #_[confirmation="office equipment store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EmployeeRole extends OrganizationRole(out id: Entity(edu.stanford.cs294s.sierra:EmployeeRole) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EmployeeRole_name"],
                                                   out salaryCurrency: String #_[canonical={base=["salary currency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EmployeeRole_salaryCurrency"],
                                                   out baseSalary: Number #_[canonical={base=["base salary"]}] #[org_schema_type="Number"])
  #_[canonical="employee role"]
  #_[confirmation="employee role"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserComments extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserComments) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserComments_name"],
                                                  out commentText: String #_[canonical={base=["comment text"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:UserComments_commentText"],
                                                  out discusses: Entity(edu.stanford.cs294s.sierra:CreativeWork) #_[canonical={verb=["discusses"],base=["discusses"]}] #[org_schema_type="CreativeWork"],
                                                  out commentTime: Date #_[canonical={base=["comment time"]}] #[org_schema_type="Date"],
                                                  out creator: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["creator"]}] #[org_schema_type="Organization"],
                                                  out replyToUrl: Entity(tt:url) #_[canonical={base=["reply to url"]}] #[org_schema_type="URL"])
  #_[canonical="user comments"]
  #_[confirmation="user comments"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GatedResidenceCommunity extends Residence(out id: Entity(edu.stanford.cs294s.sierra:GatedResidenceCommunity) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GatedResidenceCommunity_name"])
  #_[canonical="gated residence community"]
  #_[confirmation="gated residence community"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AdministrativeArea extends Place(out id: Entity(edu.stanford.cs294s.sierra:AdministrativeArea) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AdministrativeArea_name"])
  #_[canonical="administrative area"]
  #_[confirmation="administrative area"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Country extends AdministrativeArea(out id: Entity(edu.stanford.cs294s.sierra:Country) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Country_name"])
  #_[canonical="country"]
  #_[confirmation="country"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowToTip extends CreativeWork, ListItem(out id: Entity(edu.stanford.cs294s.sierra:HowToTip) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowToTip_name"])
  #_[canonical="how to tip"]
  #_[confirmation="how to tip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ComputerLanguage extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:ComputerLanguage) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ComputerLanguage_name"])
  #_[canonical="computer language"]
  #_[confirmation="computer language"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PerformanceRole extends Role(out id: Entity(edu.stanford.cs294s.sierra:PerformanceRole) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PerformanceRole_name"],
                                          out characterName: String #_[canonical={base=["character name"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PerformanceRole_characterName"])
  #_[canonical="performance role"]
  #_[confirmation="performance role"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Brand extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Brand) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Brand_name"],
                                      out aggregateRating: {
                                        reviewCount: Number #_[canonical={base=["review count"]}] #[org_schema_type="Integer"],
                                        ratingCount: Number #_[canonical={base=["rating count"]}] #[org_schema_type="Integer"],
                                        ratingValue: Number #_[canonical={base=["rating"]}] #[org_schema_type="Number"],
                                        author: Entity(edu.stanford.cs294s.sierra:Person) #_[canonical={base=["author"]}] #[org_schema_type="Person"],
                                        reviewAspect: String #_[canonical={base=["review aspect"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Brand_aggregateRating_reviewAspect"]
                                      } #_[canonical={base=["aggregate rating"]}] #[org_schema_type="AggregateRating"],
                                      out logo: Entity(tt:picture) #_[canonical={base=["logo"]}] #[org_schema_type="ImageObject"],
                                      out review: Array(Entity(edu.stanford.cs294s.sierra:Review)) #_[canonical={base=["reviews"]}] #[org_schema_type="Review"],
                                      out slogan: Array(String) #_[canonical={base=["slogans"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Brand_slogan"])
  #_[canonical="brand"]
  #_[confirmation="brand"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Mountain extends Landform(out id: Entity(edu.stanford.cs294s.sierra:Mountain) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Mountain_name"])
  #_[canonical="mountain"]
  #_[confirmation="mountain"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VideoGameClip extends Clip(out id: Entity(edu.stanford.cs294s.sierra:VideoGameClip) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VideoGameClip_name"])
  #_[canonical="video game clip"]
  #_[confirmation="video game clip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:MusicStore) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicStore_name"])
  #_[canonical="music store"]
  #_[confirmation="music store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Crematorium extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Crematorium) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Crematorium_name"])
  #_[canonical="crematorium"]
  #_[confirmation="crematorium"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ContactPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:ContactPage) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ContactPage_name"])
  #_[canonical="contact page"]
  #_[confirmation="contact page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PresentationDigitalDocument extends DigitalDocument(out id: Entity(edu.stanford.cs294s.sierra:PresentationDigitalDocument) #[unique=true] #[filterable=false],
                                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PresentationDigitalDocument_name"])
  #_[canonical="presentation digital document"]
  #_[confirmation="presentation digital document"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Blog extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Blog) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Blog_name"],
                                       out blogPost: Array(Entity(edu.stanford.cs294s.sierra:BlogPosting)) #_[canonical={base=["blog posts"]}] #[org_schema_type="BlogPosting"],
                                       out issn: String #_[canonical={passive_verb=["issn"],base=["issn"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Blog_issn"])
  #_[canonical="blog"]
  #_[confirmation="blog"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Report extends Article(out id: Entity(edu.stanford.cs294s.sierra:Report) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Report_name"],
                                    out reportNumber: String #_[canonical={base=["report number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Report_reportNumber"])
  #_[canonical="report"]
  #_[confirmation="report"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Seat extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Seat) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Seat_name"],
                                     out seatRow: String #_[canonical={base=["seat row"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Seat_seatRow"],
                                     out seatingType: String #_[canonical={base=["seating type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Seat_seatingType"],
                                     out seatSection: String #_[canonical={base=["seat section"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Seat_seatSection"],
                                     out seatNumber: String #_[canonical={base=["seat number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:Seat_seatNumber"])
  #_[canonical="seat"]
  #_[confirmation="seat"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Sculpture extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Sculpture) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Sculpture_name"])
  #_[canonical="sculpture"]
  #_[confirmation="sculpture"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ComputerStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ComputerStore) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ComputerStore_name"])
  #_[canonical="computer store"]
  #_[confirmation="computer store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioStation extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:RadioStation) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioStation_name"])
  #_[canonical="radio station"]
  #_[confirmation="radio station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Map extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Map) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Map_name"],
                                      out mapType: Enum(ParkingMap,SeatingMap,VenueMap,TransitMap) #_[canonical={base=["map type"]}] #[org_schema_type="MapCategoryType"])
  #_[canonical="map"]
  #_[confirmation="map"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GolfCourse extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:GolfCourse) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GolfCourse_name"])
  #_[canonical="golf course"]
  #_[confirmation="golf course"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MoneyTransfer(out id: Entity(edu.stanford.cs294s.sierra:MoneyTransfer) #[unique=true] #[filterable=false],
                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MoneyTransfer_name"],
                           out amount: Currency #_[canonical={base=["amount"]}] #[org_schema_type="MonetaryAmount"])
  #_[canonical="money transfer"]
  #_[confirmation="money transfer"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ShoeStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ShoeStore) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ShoeStore_name"])
  #_[canonical="shoe store"]
  #_[confirmation="shoe store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WPSideBar extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:WPSideBar) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WPSideBar_name"])
  #_[canonical="wpside bar"]
  #_[confirmation="wpside bar"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FlightReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:FlightReservation) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FlightReservation_name"],
                                                   out passengerSequenceNumber: String #_[canonical={base=["passenger sequence number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FlightReservation_passengerSequenceNumber"],
                                                   out securityScreening: String #_[canonical={base=["security screening"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FlightReservation_securityScreening"],
                                                   out passengerPriorityStatus: String #_[canonical={base=["passenger priority status"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FlightReservation_passengerPriorityStatus"],
                                                   out boardingGroup: String #_[canonical={base=["boarding group"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:FlightReservation_boardingGroup"])
  #_[canonical="flight reservation"]
  #_[confirmation="flight reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PetStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:PetStore) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PetStore_name"])
  #_[canonical="pet store"]
  #_[confirmation="pet store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OnDemandEvent extends PublicationEvent(out id: Entity(edu.stanford.cs294s.sierra:OnDemandEvent) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OnDemandEvent_name"])
  #_[canonical="on demand event"]
  #_[confirmation="on demand event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoDealer extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutoDealer) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoDealer_name"])
  #_[canonical="auto dealer"]
  #_[confirmation="auto dealer"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PhysicalActivity(out id: Entity(edu.stanford.cs294s.sierra:PhysicalActivity) #[unique=true] #[filterable=false],
                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PhysicalActivity_name"],
                              out category: Array(String) #_[canonical={base=["categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:PhysicalActivity_category"])
  #_[canonical="physical activity"]
  #_[confirmation="physical activity"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ClaimReview extends Review(out id: Entity(edu.stanford.cs294s.sierra:ClaimReview) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ClaimReview_name"],
                                        out claimReviewed: Array(String) #_[canonical={base=["claim reviewed"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ClaimReview_claimReviewed"])
  #_[canonical="claim review"]
  #_[confirmation="claim review"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GasStation extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:GasStation) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GasStation_name"])
  #_[canonical="gas station"]
  #_[confirmation="gas station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Library extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:Library) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Library_name"])
  #_[canonical="library"]
  #_[confirmation="library"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TouristInformationCenter extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:TouristInformationCenter) #[unique=true] #[filterable=false],
                                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TouristInformationCenter_name"])
  #_[canonical="tourist information center"]
  #_[confirmation="tourist information center"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ProfessionalService extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:ProfessionalService) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ProfessionalService_name"])
  #_[canonical="professional service"]
  #_[confirmation="professional service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Aquarium extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Aquarium) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Aquarium_name"])
  #_[canonical="aquarium"]
  #_[confirmation="aquarium"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SelfStorage extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:SelfStorage) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SelfStorage_name"])
  #_[canonical="self storage"]
  #_[confirmation="self storage"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Florist extends Store(out id: Entity(edu.stanford.cs294s.sierra:Florist) #[unique=true] #[filterable=false],
                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Florist_name"])
  #_[canonical="florist"]
  #_[confirmation="florist"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HowToTool extends HowToItem(out id: Entity(edu.stanford.cs294s.sierra:HowToTool) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HowToTool_name"])
  #_[canonical="how to tool"]
  #_[confirmation="how to tool"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserPlusOnes extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserPlusOnes) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserPlusOnes_name"])
  #_[canonical="user plus ones"]
  #_[confirmation="user plus ones"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserPageVisits extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserPageVisits) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserPageVisits_name"])
  #_[canonical="user page visits"]
  #_[confirmation="user page visits"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Mosque extends PlaceOfWorship(out id: Entity(edu.stanford.cs294s.sierra:Mosque) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Mosque_name"])
  #_[canonical="mosque"]
  #_[confirmation="mosque"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DataFeed extends Dataset(out id: Entity(edu.stanford.cs294s.sierra:DataFeed) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DataFeed_name"],
                                      out dataFeedElement: Array(String) #_[canonical={base=["data feed elements"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:DataFeed_dataFeedElement"])
  #_[canonical="data feed"]
  #_[confirmation="data feed"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Continent extends Landform(out id: Entity(edu.stanford.cs294s.sierra:Continent) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Continent_name"])
  #_[canonical="continent"]
  #_[confirmation="continent"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ShoppingCenter extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:ShoppingCenter) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ShoppingCenter_name"])
  #_[canonical="shopping center"]
  #_[confirmation="shopping center"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query NightClub extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:NightClub) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:NightClub_name"])
  #_[canonical="night club"]
  #_[confirmation="night club"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query State extends AdministrativeArea(out id: Entity(edu.stanford.cs294s.sierra:State) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:State_name"])
  #_[canonical="state"]
  #_[confirmation="state"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Playground extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Playground) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Playground_name"])
  #_[canonical="playground"]
  #_[confirmation="playground"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ParkingFacility extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:ParkingFacility) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ParkingFacility_name"])
  #_[canonical="parking facility"]
  #_[confirmation="parking facility"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BookSeries extends CreativeWorkSeries(out id: Entity(edu.stanford.cs294s.sierra:BookSeries) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BookSeries_name"])
  #_[canonical="book series"]
  #_[confirmation="book series"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BeautySalon extends HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:BeautySalon) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BeautySalon_name"])
  #_[canonical="beauty salon"]
  #_[confirmation="beauty salon"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserDownloads extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserDownloads) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserDownloads_name"])
  #_[canonical="user downloads"]
  #_[confirmation="user downloads"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PawnShop extends Store(out id: Entity(edu.stanford.cs294s.sierra:PawnShop) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PawnShop_name"])
  #_[canonical="pawn shop"]
  #_[confirmation="pawn shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HighSchool extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:HighSchool) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HighSchool_name"])
  #_[canonical="high school"]
  #_[confirmation="high school"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SportsClub extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:SportsClub) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SportsClub_name"])
  #_[canonical="sports club"]
  #_[confirmation="sports club"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Bridge extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Bridge) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Bridge_name"])
  #_[canonical="bridge"]
  #_[confirmation="bridge"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TrainStation extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:TrainStation) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TrainStation_name"])
  #_[canonical="train station"]
  #_[confirmation="train station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Conversation extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Conversation) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Conversation_name"])
  #_[canonical="conversation"]
  #_[confirmation="conversation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LinkRole(out id: Entity(edu.stanford.cs294s.sierra:LinkRole) #[unique=true] #[filterable=false],
                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LinkRole_name"],
                      out inLanguage: String #_[canonical={base=["in language"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:LinkRole_inLanguage"])
  #_[canonical="link role"]
  #_[confirmation="link role"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TouristDestination(out id: Entity(edu.stanford.cs294s.sierra:TouristDestination) #[unique=true] #[filterable=false],
                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TouristDestination_name"],
                                out touristType: String #_[canonical={base=["tourist type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TouristDestination_touristType"])
  #_[canonical="tourist destination"]
  #_[confirmation="tourist destination"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TouristTrip(out id: Entity(edu.stanford.cs294s.sierra:TouristTrip) #[unique=true] #[filterable=false],
                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TouristTrip_name"],
                         out touristType: String #_[canonical={base=["tourist type"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:TouristTrip_touristType"])
  #_[canonical="tourist trip"]
  #_[confirmation="tourist trip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PaymentService extends FinancialProduct(out id: Entity(edu.stanford.cs294s.sierra:PaymentService) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PaymentService_name"])
  #_[canonical="payment service"]
  #_[confirmation="payment service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SpeakableSpecification extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:SpeakableSpecification) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SpeakableSpecification_name"])
  #_[canonical="speakable specification"]
  #_[confirmation="speakable specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioChannel extends BroadcastChannel(out id: Entity(edu.stanford.cs294s.sierra:RadioChannel) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioChannel_name"])
  #_[canonical="radio channel"]
  #_[confirmation="radio channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AMRadioChannel extends RadioChannel(out id: Entity(edu.stanford.cs294s.sierra:AMRadioChannel) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AMRadioChannel_name"])
  #_[canonical="amradio channel"]
  #_[confirmation="amradio channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoBodyShop extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutoBodyShop) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoBodyShop_name"])
  #_[canonical="auto body shop"]
  #_[confirmation="auto body shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query School extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:School) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:School_name"])
  #_[canonical="school"]
  #_[confirmation="school"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TelevisionStation extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:TelevisionStation) #[unique=true] #[filterable=false],
                                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TelevisionStation_name"])
  #_[canonical="television station"]
  #_[confirmation="television station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LakeBodyOfWater extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:LakeBodyOfWater) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LakeBodyOfWater_name"])
  #_[canonical="lake body of water"]
  #_[confirmation="lake body of water"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicVideoObject extends MediaObject(out id: Entity(edu.stanford.cs294s.sierra:MusicVideoObject) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicVideoObject_name"])
  #_[canonical="music video object"]
  #_[confirmation="music video object"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HobbyShop extends Store(out id: Entity(edu.stanford.cs294s.sierra:HobbyShop) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HobbyShop_name"])
  #_[canonical="hobby shop"]
  #_[confirmation="hobby shop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Beach extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Beach) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Beach_name"])
  #_[canonical="beach"]
  #_[confirmation="beach"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SpreadsheetDigitalDocument extends DigitalDocument(out id: Entity(edu.stanford.cs294s.sierra:SpreadsheetDigitalDocument) #[unique=true] #[filterable=false],
                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SpreadsheetDigitalDocument_name"])
  #_[canonical="spreadsheet digital document"]
  #_[confirmation="spreadsheet digital document"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WPHeader extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:WPHeader) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WPHeader_name"])
  #_[canonical="wpheader"]
  #_[confirmation="wpheader"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LandmarksOrHistoricalBuildings extends Place(out id: Entity(edu.stanford.cs294s.sierra:LandmarksOrHistoricalBuildings) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LandmarksOrHistoricalBuildings_name"])
  #_[canonical="landmarks or historical buildings"]
  #_[confirmation="landmarks or historical buildings"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Notary extends LegalService(out id: Entity(edu.stanford.cs294s.sierra:Notary) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Notary_name"])
  #_[canonical="notary"]
  #_[confirmation="notary"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DryCleaningOrLaundry extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:DryCleaningOrLaundry) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DryCleaningOrLaundry_name"])
  #_[canonical="dry cleaning or laundry"]
  #_[confirmation="dry cleaning or laundry"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FastFoodRestaurant extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:FastFoodRestaurant) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FastFoodRestaurant_name"])
  #_[canonical="fast food restaurant"]
  #_[confirmation="fast food restaurant"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DataFeedItem extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:DataFeedItem) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DataFeedItem_name"],
                                             out dateModified: Date #_[canonical={base=["date modified"]}] #[org_schema_type="DateTime"],
                                             out dateDeleted: Date #_[canonical={base=["date deleted"]}] #[org_schema_type="Date"],
                                             out dateCreated: Date #_[canonical={base=["date created"]}] #[org_schema_type="DateTime"],
                                             out item: Array(Entity(edu.stanford.cs294s.sierra:Thing)) #_[canonical={base=["items"]}] #[org_schema_type="Thing"])
  #_[canonical="data feed item"]
  #_[confirmation="data feed item"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Park extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Park) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Park_name"])
  #_[canonical="park"]
  #_[confirmation="park"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Zoo extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Zoo) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Zoo_name"])
  #_[canonical="zoo"]
  #_[confirmation="zoo"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ComedyClub extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:ComedyClub) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ComedyClub_name"])
  #_[canonical="comedy club"]
  #_[confirmation="comedy club"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ExhibitionEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:ExhibitionEvent) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ExhibitionEvent_name"])
  #_[canonical="exhibition event"]
  #_[confirmation="exhibition event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EmploymentAgency extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:EmploymentAgency) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EmploymentAgency_name"])
  #_[canonical="employment agency"]
  #_[confirmation="employment agency"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FireStation extends EmergencyService, CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:FireStation) #[unique=true] #[filterable=false],
                                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FireStation_name"])
  #_[canonical="fire station"]
  #_[confirmation="fire station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Hotel extends LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:Hotel) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Hotel_name"])
  #_[canonical="hotel"]
  #_[confirmation="hotel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioClip extends Clip(out id: Entity(edu.stanford.cs294s.sierra:RadioClip) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioClip_name"])
  #_[canonical="radio clip"]
  #_[confirmation="radio clip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ElectronicsStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ElectronicsStore) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ElectronicsStore_name"])
  #_[canonical="electronics store"]
  #_[confirmation="electronics store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TVClip extends Clip(out id: Entity(edu.stanford.cs294s.sierra:TVClip) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TVClip_name"])
  #_[canonical="tvclip"]
  #_[confirmation="tvclip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query NailSalon extends HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:NailSalon) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:NailSalon_name"])
  #_[canonical="nail salon"]
  #_[confirmation="nail salon"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GeneralContractor extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:GeneralContractor) #[unique=true] #[filterable=false],
                                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GeneralContractor_name"])
  #_[canonical="general contractor"]
  #_[confirmation="general contractor"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TelevisionChannel extends BroadcastChannel(out id: Entity(edu.stanford.cs294s.sierra:TelevisionChannel) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TelevisionChannel_name"])
  #_[canonical="television channel"]
  #_[confirmation="television channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CollectionPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:CollectionPage) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CollectionPage_name"])
  #_[canonical="collection page"]
  #_[confirmation="collection page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Menu extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Menu) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Menu_name"],
                                       out hasMenuItem: Array(Entity(edu.stanford.cs294s.sierra:MenuItem)) #_[canonical={base=["menu item"]}] #[org_schema_type="MenuItem"],
                                       out hasMenuSection: Array(Entity(edu.stanford.cs294s.sierra:MenuSection)) #_[canonical={base=["menu section"]}] #[org_schema_type="MenuSection"])
  #_[canonical="menu"]
  #_[confirmation="menu"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Periodical extends CreativeWorkSeries(out id: Entity(edu.stanford.cs294s.sierra:Periodical) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Periodical_name"])
  #_[canonical="periodical"]
  #_[confirmation="periodical"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BedDetails extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:BedDetails) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BedDetails_name"],
                                           out numberOfBeds: Number #_[canonical={base=["number of beds"]}] #[org_schema_type="Number"],
                                           out typeOfBed: String #_[canonical={base=["type of bed"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:BedDetails_typeOfBed"])
  #_[canonical="bed details"]
  #_[confirmation="bed details"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Electrician extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:Electrician) #[unique=true] #[filterable=false],
                                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Electrician_name"])
  #_[canonical="electrician"]
  #_[confirmation="electrician"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LegislativeBuilding extends GovernmentBuilding(out id: Entity(edu.stanford.cs294s.sierra:LegislativeBuilding) #[unique=true] #[filterable=false],
                                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LegislativeBuilding_name"])
  #_[canonical="legislative building"]
  #_[confirmation="legislative building"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query UserCheckins extends UserInteraction(out id: Entity(edu.stanford.cs294s.sierra:UserCheckins) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:UserCheckins_name"])
  #_[canonical="user checkins"]
  #_[confirmation="user checkins"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TravelAgency extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:TravelAgency) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TravelAgency_name"])
  #_[canonical="travel agency"]
  #_[confirmation="travel agency"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Hostel extends LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:Hostel) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Hostel_name"])
  #_[canonical="hostel"]
  #_[confirmation="hostel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Quantity extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Quantity) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Quantity_name"])
  #_[canonical="quantity"]
  #_[confirmation="quantity"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VideoGallery extends CollectionPage(out id: Entity(edu.stanford.cs294s.sierra:VideoGallery) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VideoGallery_name"])
  #_[canonical="video gallery"]
  #_[confirmation="video gallery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EducationalAudience extends Audience(out id: Entity(edu.stanford.cs294s.sierra:EducationalAudience) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EducationalAudience_name"],
                                                  out educationalRole: Array(String) #_[canonical={base=["educational roles"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:EducationalAudience_educationalRole"])
  #_[canonical="educational audience"]
  #_[confirmation="educational audience"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CityHall extends GovernmentBuilding(out id: Entity(edu.stanford.cs294s.sierra:CityHall) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CityHall_name"])
  #_[canonical="city hall"]
  #_[confirmation="city hall"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ComedyEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:ComedyEvent) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ComedyEvent_name"])
  #_[canonical="comedy event"]
  #_[confirmation="comedy event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ItemPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:ItemPage) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ItemPage_name"])
  #_[canonical="item page"]
  #_[confirmation="item page"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MovingCompany extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:MovingCompany) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MovingCompany_name"])
  #_[canonical="moving company"]
  #_[confirmation="moving company"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GardenStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:GardenStore) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GardenStore_name"])
  #_[canonical="garden store"]
  #_[confirmation="garden store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HealthInsurancePlan(out id: Entity(edu.stanford.cs294s.sierra:HealthInsurancePlan) #[unique=true] #[filterable=false],
                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HealthInsurancePlan_name"],
                                 out contactPoint: Array({
                                   faxNumber: String #_[canonical={base=["fax number"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HealthInsurancePlan_contactPoint_faxNumber"],
                                   hoursAvailable: {
                                     validFrom: Date #_[canonical={passive_verb=["valid from"],base=["valid from"]}] #[org_schema_type="Date"],
                                     validThrough: Date #_[canonical={passive_verb=["valid through"],base=["valid through"]}] #[org_schema_type="DateTime"],
                                     opens: Time #_[canonical={verb=["opens"],base=["opens"]}] #[org_schema_type="Time"],
                                     closes: Time #_[canonical={verb=["closes"],base=["closes"]}] #[org_schema_type="Time"],
                                     dayOfWeek: Enum(Wednesday,Sunday,PublicHolidays,Monday,Friday,Tuesday,Saturday,Thursday) #_[canonical={base=["day of week"]}] #[org_schema_type="DayOfWeek"]
                                   } #_[canonical={base=["hours available"]}] #[org_schema_type="OpeningHoursSpecification"],
                                   contactOption: Enum(HearingImpairedSupported,TollFree) #_[canonical={base=["contact option"]}] #[org_schema_type="ContactPointOption"],
                                   availableLanguage: Array(String) #_[canonical={base=["available languages"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HealthInsurancePlan_contactPoint_availableLanguage"],
                                   telephone: Entity(tt:phone_number) #_[canonical={base=["telephone"]}] #[org_schema_type="Text"],
                                   email: Entity(tt:email_address) #_[canonical={base=["email"]}] #[org_schema_type="Text"],
                                   contactType: Array(String) #_[canonical={base=["contact types"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HealthInsurancePlan_contactPoint_contactType"],
                                   productSupported: String #_[canonical={base=["product supported"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:HealthInsurancePlan_contactPoint_productSupported"]
                                 }) #_[canonical={base=["contact points"]}] #[org_schema_type="ContactPoint"])
  #_[canonical="health insurance plan"]
  #_[confirmation="health insurance plan"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Audiobook(out id: Entity(edu.stanford.cs294s.sierra:Audiobook) #[unique=true] #[filterable=false],
                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Audiobook_name"],
                       out duration: Measure(ms) #_[canonical={base=["duration"]}] #[org_schema_type="Duration"])
  #_[canonical="audiobook"]
  #_[confirmation="audiobook"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Dentist extends LocalBusiness, MedicalOrganization(out id: Entity(edu.stanford.cs294s.sierra:Dentist) #[unique=true] #[filterable=false],
                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Dentist_name"])
  #_[canonical="dentist"]
  #_[confirmation="dentist"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AdultEntertainment extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:AdultEntertainment) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AdultEntertainment_name"])
  #_[canonical="adult entertainment"]
  #_[confirmation="adult entertainment"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DataCatalog extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:DataCatalog) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DataCatalog_name"],
                                              out _dataset: Array(Entity(edu.stanford.cs294s.sierra:Dataset)) #_[canonical={base=[" dataset"]}] #[org_schema_type="Dataset"])
  #_[canonical="data catalog"]
  #_[confirmation="data catalog"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query City extends AdministrativeArea(out id: Entity(edu.stanford.cs294s.sierra:City) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:City_name"])
  #_[canonical="city"]
  #_[confirmation="city"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WorkBasedProgram(out id: Entity(edu.stanford.cs294s.sierra:WorkBasedProgram) #[unique=true] #[filterable=false],
                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WorkBasedProgram_name"],
                              out occupationalCategory: Array(String) #_[canonical={base=["occupational categories"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:WorkBasedProgram_occupationalCategory"])
  #_[canonical="work based program"]
  #_[confirmation="work based program"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:MusicEvent) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicEvent_name"])
  #_[canonical="music event"]
  #_[confirmation="music event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HairSalon extends HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:HairSalon) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HairSalon_name"])
  #_[canonical="hair salon"]
  #_[confirmation="hair salon"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DaySpa extends HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:DaySpa) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DaySpa_name"])
  #_[canonical="day spa"]
  #_[confirmation="day spa"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EventVenue extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:EventVenue) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EventVenue_name"])
  #_[canonical="event venue"]
  #_[confirmation="event venue"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioEpisode extends Episode(out id: Entity(edu.stanford.cs294s.sierra:RadioEpisode) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioEpisode_name"])
  #_[canonical="radio episode"]
  #_[confirmation="radio episode"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ElementarySchool extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:ElementarySchool) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ElementarySchool_name"])
  #_[canonical="elementary school"]
  #_[confirmation="elementary school"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BankOrCreditUnion extends FinancialService(out id: Entity(edu.stanford.cs294s.sierra:BankOrCreditUnion) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BankOrCreditUnion_name"])
  #_[canonical="bank or credit union"]
  #_[confirmation="bank or credit union"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FAQPage extends WebPage(out id: Entity(edu.stanford.cs294s.sierra:FAQPage) #[unique=true] #[filterable=false],
                                     out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FAQPage_name"])
  #_[canonical="faqpage"]
  #_[confirmation="faqpage"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Winery extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:Winery) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Winery_name"])
  #_[canonical="winery"]
  #_[confirmation="winery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MeetingRoom extends Room(out id: Entity(edu.stanford.cs294s.sierra:MeetingRoom) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MeetingRoom_name"])
  #_[canonical="meeting room"]
  #_[confirmation="meeting room"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RiverBodyOfWater extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:RiverBodyOfWater) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RiverBodyOfWater_name"])
  #_[canonical="river body of water"]
  #_[confirmation="river body of water"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HVACBusiness extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:HVACBusiness) #[unique=true] #[filterable=false],
                                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HVACBusiness_name"])
  #_[canonical="hvacbusiness"]
  #_[confirmation="hvacbusiness"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TaxiStand extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:TaxiStand) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TaxiStand_name"])
  #_[canonical="taxi stand"]
  #_[confirmation="taxi stand"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CatholicChurch extends Church(out id: Entity(edu.stanford.cs294s.sierra:CatholicChurch) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CatholicChurch_name"])
  #_[canonical="catholic church"]
  #_[confirmation="catholic church"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GovernmentService extends Service(out id: Entity(edu.stanford.cs294s.sierra:GovernmentService) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GovernmentService_name"],
                                               out serviceOperator: Entity(edu.stanford.cs294s.sierra:Organization) #_[canonical={base=["service operator"]}] #[org_schema_type="Organization"])
  #_[canonical="government service"]
  #_[confirmation="government service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MovieClip extends Clip(out id: Entity(edu.stanford.cs294s.sierra:MovieClip) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MovieClip_name"])
  #_[canonical="movie clip"]
  #_[confirmation="movie clip"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Locksmith extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:Locksmith) #[unique=true] #[filterable=false],
                                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Locksmith_name"])
  #_[canonical="locksmith"]
  #_[confirmation="locksmith"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query OceanBodyOfWater extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:OceanBodyOfWater) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:OceanBodyOfWater_name"])
  #_[canonical="ocean body of water"]
  #_[confirmation="ocean body of water"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TrainReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:TrainReservation) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TrainReservation_name"])
  #_[canonical="train reservation"]
  #_[confirmation="train reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MusicVenue extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:MusicVenue) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MusicVenue_name"])
  #_[canonical="music venue"]
  #_[confirmation="music venue"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query CollegeOrUniversity extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:CollegeOrUniversity) #[unique=true] #[filterable=false],
                                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:CollegeOrUniversity_name"])
  #_[canonical="college or university"]
  #_[confirmation="college or university"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TaxiService extends Service(out id: Entity(edu.stanford.cs294s.sierra:TaxiService) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TaxiService_name"])
  #_[canonical="taxi service"]
  #_[confirmation="taxi service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ArtGallery extends EntertainmentBusiness(out id: Entity(edu.stanford.cs294s.sierra:ArtGallery) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ArtGallery_name"])
  #_[canonical="art gallery"]
  #_[confirmation="art gallery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Plumber extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:Plumber) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Plumber_name"])
  #_[canonical="plumber"]
  #_[confirmation="plumber"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Preschool extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:Preschool) #[unique=true] #[filterable=false],
                                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Preschool_name"])
  #_[canonical="preschool"]
  #_[confirmation="preschool"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TattooParlor extends HealthAndBeautyBusiness(out id: Entity(edu.stanford.cs294s.sierra:TattooParlor) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TattooParlor_name"])
  #_[canonical="tattoo parlor"]
  #_[confirmation="tattoo parlor"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FurnitureStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:FurnitureStore) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FurnitureStore_name"])
  #_[canonical="furniture store"]
  #_[confirmation="furniture store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusStop extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:BusStop) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusStop_name"])
  #_[canonical="bus stop"]
  #_[confirmation="bus stop"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MotorcycleRepair extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:MotorcycleRepair) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MotorcycleRepair_name"])
  #_[canonical="motorcycle repair"]
  #_[confirmation="motorcycle repair"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GovernmentPermit extends Permit(out id: Entity(edu.stanford.cs294s.sierra:GovernmentPermit) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GovernmentPermit_name"])
  #_[canonical="government permit"]
  #_[confirmation="government permit"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Resort extends LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:Resort) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Resort_name"])
  #_[canonical="resort"]
  #_[confirmation="resort"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Table extends WebPageElement(out id: Entity(edu.stanford.cs294s.sierra:Table) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Table_name"])
  #_[canonical="table"]
  #_[confirmation="table"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query GovernmentOrganization extends Organization(out id: Entity(edu.stanford.cs294s.sierra:GovernmentOrganization) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:GovernmentOrganization_name"])
  #_[canonical="government organization"]
  #_[confirmation="government organization"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusReservation extends Reservation(out id: Entity(edu.stanford.cs294s.sierra:BusReservation) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusReservation_name"])
  #_[canonical="bus reservation"]
  #_[confirmation="bus reservation"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Taxi extends Service(out id: Entity(edu.stanford.cs294s.sierra:Taxi) #[unique=true] #[filterable=false],
                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Taxi_name"])
  #_[canonical="taxi"]
  #_[confirmation="taxi"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Physician extends MedicalOrganization(out id: Entity(edu.stanford.cs294s.sierra:Physician) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Physician_name"])
  #_[canonical="physician"]
  #_[confirmation="physician"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query NoteDigitalDocument extends DigitalDocument(out id: Entity(edu.stanford.cs294s.sierra:NoteDigitalDocument) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:NoteDigitalDocument_name"])
  #_[canonical="note digital document"]
  #_[confirmation="note digital document"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Campground extends CivicStructure, LodgingBusiness(out id: Entity(edu.stanford.cs294s.sierra:Campground) #[unique=true] #[filterable=false],
                                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Campground_name"])
  #_[canonical="campground"]
  #_[confirmation="campground"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TennisComplex extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:TennisComplex) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TennisComplex_name"])
  #_[canonical="tennis complex"]
  #_[confirmation="tennis complex"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Photograph extends CreativeWork(out id: Entity(edu.stanford.cs294s.sierra:Photograph) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Photograph_name"])
  #_[canonical="photograph"]
  #_[confirmation="photograph"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SubwayStation extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:SubwayStation) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SubwayStation_name"])
  #_[canonical="subway station"]
  #_[confirmation="subway station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MedicalStudy(out id: Entity(edu.stanford.cs294s.sierra:MedicalStudy) #[unique=true] #[filterable=false],
                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MedicalStudy_name"],
                          out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"])
  #_[canonical="medical study"]
  #_[confirmation="medical study"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Grant(out id: Entity(edu.stanford.cs294s.sierra:Grant) #[unique=true] #[filterable=false],
                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Grant_name"],
                   out sponsor: Array(Entity(edu.stanford.cs294s.sierra:Person)) #_[canonical={base=["sponsors"]}] #[org_schema_type="Person"])
  #_[canonical="grant"]
  #_[confirmation="grant"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Courthouse extends GovernmentBuilding(out id: Entity(edu.stanford.cs294s.sierra:Courthouse) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Courthouse_name"])
  #_[canonical="courthouse"]
  #_[confirmation="courthouse"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutoWash extends AutomotiveBusiness(out id: Entity(edu.stanford.cs294s.sierra:AutoWash) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutoWash_name"])
  #_[canonical="auto wash"]
  #_[confirmation="auto wash"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query HardwareStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:HardwareStore) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:HardwareStore_name"])
  #_[canonical="hardware store"]
  #_[confirmation="hardware store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query VisualArtsEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:VisualArtsEvent) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:VisualArtsEvent_name"])
  #_[canonical="visual arts event"]
  #_[confirmation="visual arts event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ExchangeRateSpecification(out id: Entity(edu.stanford.cs294s.sierra:ExchangeRateSpecification) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ExchangeRateSpecification_name"],
                                       out currency: String #_[canonical={base=["currency"]}] #[org_schema_type="Text"] #[string_values="edu.stanford.cs294s.sierra:ExchangeRateSpecification_currency"])
  #_[canonical="exchange rate specification"]
  #_[confirmation="exchange rate specification"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DanceGroup extends PerformingGroup(out id: Entity(edu.stanford.cs294s.sierra:DanceGroup) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DanceGroup_name"])
  #_[canonical="dance group"]
  #_[confirmation="dance group"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RoofingContractor extends HomeAndConstructionBusiness(out id: Entity(edu.stanford.cs294s.sierra:RoofingContractor) #[unique=true] #[filterable=false],
                                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RoofingContractor_name"])
  #_[canonical="roofing contractor"]
  #_[confirmation="roofing contractor"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ChildrensEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:ChildrensEvent) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ChildrensEvent_name"])
  #_[canonical="childrens event"]
  #_[confirmation="childrens event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RVPark extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:RVPark) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RVPark_name"])
  #_[canonical="rvpark"]
  #_[confirmation="rvpark"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Enumeration extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Enumeration) #[unique=true] #[filterable=false],
                                            out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Enumeration_name"])
  #_[canonical="enumeration"]
  #_[confirmation="enumeration"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query WholesaleStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:WholesaleStore) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:WholesaleStore_name"])
  #_[canonical="wholesale store"]
  #_[confirmation="wholesale store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DepartmentStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:DepartmentStore) #[unique=true] #[filterable=false],
                                           out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DepartmentStore_name"])
  #_[canonical="department store"]
  #_[confirmation="department store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SkiResort extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:SkiResort) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SkiResort_name"])
  #_[canonical="ski resort"]
  #_[confirmation="ski resort"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AutomatedTeller extends FinancialService(out id: Entity(edu.stanford.cs294s.sierra:AutomatedTeller) #[unique=true] #[filterable=false],
                                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AutomatedTeller_name"])
  #_[canonical="automated teller"]
  #_[confirmation="automated teller"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Canal extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:Canal) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Canal_name"])
  #_[canonical="canal"]
  #_[confirmation="canal"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query NGO extends Organization(out id: Entity(edu.stanford.cs294s.sierra:NGO) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:NGO_name"])
  #_[canonical="ngo"]
  #_[confirmation="ngo"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BarOrPub extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:BarOrPub) #[unique=true] #[filterable=false],
                                                out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BarOrPub_name"])
  #_[canonical="bar or pub"]
  #_[confirmation="bar or pub"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query FMRadioChannel extends RadioChannel(out id: Entity(edu.stanford.cs294s.sierra:FMRadioChannel) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:FMRadioChannel_name"])
  #_[canonical="fmradio channel"]
  #_[confirmation="fmradio channel"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ScholarlyArticle extends Article(out id: Entity(edu.stanford.cs294s.sierra:ScholarlyArticle) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ScholarlyArticle_name"])
  #_[canonical="scholarly article"]
  #_[confirmation="scholarly article"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Bakery extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:Bakery) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Bakery_name"])
  #_[canonical="bakery"]
  #_[confirmation="bakery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MensClothingStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:MensClothingStore) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MensClothingStore_name"])
  #_[canonical="mens clothing store"]
  #_[confirmation="mens clothing store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Language extends Intangible(out id: Entity(edu.stanford.cs294s.sierra:Language) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Language_name"])
  #_[canonical="language"]
  #_[confirmation="language"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TheaterGroup extends PerformingGroup(out id: Entity(edu.stanford.cs294s.sierra:TheaterGroup) #[unique=true] #[filterable=false],
                                                  out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TheaterGroup_name"])
  #_[canonical="theater group"]
  #_[confirmation="theater group"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Answer extends Comment(out id: Entity(edu.stanford.cs294s.sierra:Answer) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Answer_name"])
  #_[canonical="answer"]
  #_[confirmation="answer"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Brewery extends FoodEstablishment(out id: Entity(edu.stanford.cs294s.sierra:Brewery) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Brewery_name"])
  #_[canonical="brewery"]
  #_[confirmation="brewery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query PublicSwimmingPool extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:PublicSwimmingPool) #[unique=true] #[filterable=false],
                                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:PublicSwimmingPool_name"])
  #_[canonical="public swimming pool"]
  #_[confirmation="public swimming pool"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Cemetery extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:Cemetery) #[unique=true] #[filterable=false],
                                             out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Cemetery_name"])
  #_[canonical="cemetery"]
  #_[confirmation="cemetery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query AccountingService extends FinancialService(out id: Entity(edu.stanford.cs294s.sierra:AccountingService) #[unique=true] #[filterable=false],
                                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:AccountingService_name"])
  #_[canonical="accounting service"]
  #_[confirmation="accounting service"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RecyclingCenter extends LocalBusiness(out id: Entity(edu.stanford.cs294s.sierra:RecyclingCenter) #[unique=true] #[filterable=false],
                                                   out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RecyclingCenter_name"])
  #_[canonical="recycling center"]
  #_[confirmation="recycling center"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Hospital extends MedicalOrganization, CivicStructure, EmergencyService(out id: Entity(edu.stanford.cs294s.sierra:Hospital) #[unique=true] #[filterable=false],
                                                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Hospital_name"])
  #_[canonical="hospital"]
  #_[confirmation="hospital"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Festival extends Event(out id: Entity(edu.stanford.cs294s.sierra:Festival) #[unique=true] #[filterable=false],
                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Festival_name"])
  #_[canonical="festival"]
  #_[confirmation="festival"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ClothingStore extends Store(out id: Entity(edu.stanford.cs294s.sierra:ClothingStore) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ClothingStore_name"])
  #_[canonical="clothing store"]
  #_[confirmation="clothing store"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query RadioSeason extends CreativeWorkSeason(out id: Entity(edu.stanford.cs294s.sierra:RadioSeason) #[unique=true] #[filterable=false],
                                                    out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:RadioSeason_name"])
  #_[canonical="radio season"]
  #_[confirmation="radio season"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query EmailMessage extends Message(out id: Entity(edu.stanford.cs294s.sierra:EmailMessage) #[unique=true] #[filterable=false],
                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:EmailMessage_name"])
  #_[canonical="email message"]
  #_[confirmation="email message"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BusStation extends CivicStructure(out id: Entity(edu.stanford.cs294s.sierra:BusStation) #[unique=true] #[filterable=false],
                                               out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BusStation_name"])
  #_[canonical="bus station"]
  #_[confirmation="bus station"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query BowlingAlley extends SportsActivityLocation(out id: Entity(edu.stanford.cs294s.sierra:BowlingAlley) #[unique=true] #[filterable=false],
                                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:BowlingAlley_name"])
  #_[canonical="bowling alley"]
  #_[confirmation="bowling alley"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query ImageGallery extends CollectionPage(out id: Entity(edu.stanford.cs294s.sierra:ImageGallery) #[unique=true] #[filterable=false],
                                                 out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:ImageGallery_name"])
  #_[canonical="image gallery"]
  #_[confirmation="image gallery"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query DataDownload extends MediaObject(out id: Entity(edu.stanford.cs294s.sierra:DataDownload) #[unique=true] #[filterable=false],
                                              out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:DataDownload_name"])
  #_[canonical="data download"]
  #_[confirmation="data download"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query MiddleSchool extends EducationalOrganization(out id: Entity(edu.stanford.cs294s.sierra:MiddleSchool) #[unique=true] #[filterable=false],
                                                          out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:MiddleSchool_name"])
  #_[canonical="middle school"]
  #_[confirmation="middle school"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query LiteraryEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:LiteraryEvent) #[unique=true] #[filterable=false],
                                         out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:LiteraryEvent_name"])
  #_[canonical="literary event"]
  #_[confirmation="literary event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query Pond extends BodyOfWater(out id: Entity(edu.stanford.cs294s.sierra:Pond) #[unique=true] #[filterable=false],
                                      out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:Pond_name"])
  #_[canonical="pond"]
  #_[confirmation="pond"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query SocialEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:SocialEvent) #[unique=true] #[filterable=false],
                                       out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:SocialEvent_name"])
  #_[canonical="social event"]
  #_[confirmation="social event"]
  #[confirm=false]
  #[minimal_projection=["id"]];

  list query TheaterEvent extends Event(out id: Entity(edu.stanford.cs294s.sierra:TheaterEvent) #[unique=true] #[filterable=false],
                                        out name: String #[org_schema_type="Text"] #[filterable=false] #[string_values="edu.stanford.cs294s.sierra:TheaterEvent_name"])
  #_[canonical="theater event"]
  #_[confirmation="theater event"]
  #[confirm=false]
  #[minimal_projection=["id"]];
}
